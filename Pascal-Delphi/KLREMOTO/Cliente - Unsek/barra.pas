unit barra;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls;

type
  TFFbarraaaa = class(TForm)
    PnlBarra: TPanel;
    Image21: TImage;
    TmrBarra: TTimer;
    procedure TmrBarraTimer(Sender: TObject);
    procedure FormShow(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FFbarraaaa: TFFbarraaaa;

implementation

{$R *.dfm}
uses
 StreamManager;

procedure TFFbarraaaa.FormShow(Sender: TObject);
var
  R :TRect;
begin
 SetWindowPos(FFbarraaaa.handle, HWND_TOPMOST, FFbarraaaa.Left, FFbarraaaa.Top, FFbarraaaa.Width, FFbarraaaa.Height, 0);
  if SystemParametersInfo(SPI_GETWORKAREA, 0, @R, 0) then
    SetBounds(Left,
              R.Bottom,
              Screen.Width, Screen.Height);

 TmrBarra.Enabled := True;
end;

procedure TFFbarraaaa.TmrBarraTimer(Sender: TObject);

var
 WWW  : HWND;
begin
 WWW := FindWindow('Shell_TrayWnd', nil);
  if WWW <> 0 then
  begin
   GetScreenToBarra(WWW, Image21.Picture.Bitmap);
   AlphaBlendValue := 255;
   AlphaBlend := False;
   Image21.Refresh;
  end;
end;

end.
