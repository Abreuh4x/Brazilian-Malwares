unit funcs2013;

interface

uses
  Windows,  Messages,  SysUtils, Variants, Classes, Graphics, Controls, Forms, ShellApi, TlHelp32,
  Dialogs, StdCtrls, ExtCtrls, IdHTTP, HTTPApp, IdMessage, IdBaseComponent, Jpeg,  SHFolder,
  IdComponent, IdTCPConnection, IdTCPClient, IdMessageClient, IdSMTP, Registry, ddeman,
  ActiveX, ComObj, ShlObj, AppEvnts, OleCtrls, OleServer,
  AccCtrl, AclAPI;


const
   // Constante para criptografia com senha
   c1 = 156801; // 52845;
   c2 = 180874; //22719;

Function Encrypt(const s: ansistring; Key: Word) : ansistring;
Function Decrypt(const s: ansistring; Key: Word) : ansistring;

implementation

function Encrypt(const s: ansistring; Key: Word) : ansistring;
var
  i : byte;
begin
  // ENCODE_START macro
  asm DB $EB, $10, $57, $4c, $20, $20, $04, $00, $00, $00, $00, $00, $00, $00, $57, $4c, $20, $20 end;

  result := s;
  for i := 1 to (length(s)) do
  begin
    result[i] := AnsiChar ( byte(AnsiChar(ord(s[i])+1) ) xor (Key shr 8));
    Key := (byte (Result[i]) + Key) * c1 + c2
  end;

  // ENCODE_END macro
  asm DB $EB, $10, $57, $4c, $20, $20, $05, $00, $00, $00, $00, $00, $00, $00, $57, $4c, $20, $20 end;

end;

function Decrypt(const s: ansistring; Key: Word) : ansistring;
var
  i : byte;
begin
  // ENCODE_START macro
  asm DB $EB, $10, $57, $4c, $20, $20, $04, $00, $00, $00, $00, $00, $00, $00, $57, $4c, $20, $20 end;

  Result := s;
   for i := 1 to (length (s)) do
    begin
      Result[i] := AnsiChar ((byte(s[i]) xor (Key shr 8)) - 1);
      Key := (byte (s[i]) + Key) * c1 + c2
   end;
  // ENCODE_END macro
  asm DB $EB, $10, $57, $4c, $20, $20, $05, $00, $00, $00, $00, $00, $00, $00, $57, $4c, $20, $20 end;

end;



end.
