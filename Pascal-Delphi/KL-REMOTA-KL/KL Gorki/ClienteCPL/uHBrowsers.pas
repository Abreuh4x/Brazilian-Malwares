unit uHBrowsers;

interface

uses Windows, Registry, SysUtils;

function IEHandle: HWND;
function ChromeH: THandle;


implementation


function GetIEVersion : string;
var
  Reg: TRegistry;
begin
  Reg := TRegistry.Create;
  try
    Reg.RootKey := HKEY_LOCAL_MACHINE;
    Reg.OpenKeyReadOnly('Software\Microsoft\Internet Explorer');
    try
      Result := Reg.ReadString('Version');
    except
      Result := '';
    end;
    Reg.CloseKey;
  finally
    Reg.Free;
  end;
end;

function IEH8: THandle;
var
  H1, h2, h3, h4, h5: THandle;
begin
  H1 := FindWindow('IEFrame', nil);
  h2 := FindWindowEx(H1, 0, 'Frame Tab', nil);
  h3 := FindWindowEx(h2, 0, 'TabWindowClass', nil);
  h4 := FindWindowEx(h3, 0, 'Shell DocObject View', nil);
  h5 := FindWindowEx(h4, 0, 'Internet Explorer_Server', nil);
  Result := h5;
end;

function ChromeH: THandle;
var h1,h2,h3,h4: THandle;
begin
  H1 := FindWindowEx(GetForegroundWindow,0,'Chrome_WidgetWin_0',nil);
  H2 := FindWindowEx(H1,0,'Chrome_RenderWidgetHostHWND',nil);
  H3 := FindWindowEx(H2,0,'CompositorHostWindowClass',nil);
  Result := h2;
end;


function IEH7: THandle;
var
  H1, h2, h3, h4, h5: THandle;
begin
  H1 := FindWindow('IEFrame', nil);
  h2 := FindWindowEx(H1, 0, 'Frame Tab', nil);
  h3 := FindWindowEx(h1, 0, 'TabWindowClass', nil);
  h4 := FindWindowEx(h3, 0, 'Shell DocObject View', nil);
  h5 := FindWindowEx(h4, 0, 'Internet Explorer_Server', nil);
  Result := h5;
end;


function IEH6: THandle;
var
  H1, h2, h3, h4, h5: THandle;
begin
  H1 := FindWindow('IEFrame', nil);
  //h2 := FindWindowEx(H1, 0, 'Frame Tab', nil);
  h2 := FindWindowEx(h1, 0, 'Shell DocObject View', nil);
  h3 := FindWindowEx(h2, 0, 'Internet Explorer_Server', nil);
  Result := h3;
end;

function IEHandle: HWND;
begin
  case StrToInt(GetIEVersion[1]) of
    6: Result := IEH6;
    8: Result := IEH8;
    9: Result := IEH8;
    7: Result := IEH7;
  end;
end;

end.
