// Decompiled with JetBrains decompiler
// Type: VERMELHO265MONARCA.Core.NetSerializer.TypeSerializers.ALAMBRE980LIDASerializer
// Assembly: madre, Version=1.1.2.3, Culture=neutral, PublicKeyToken=null
// MVID: E3E81F5F-5E79-4C7B-AA1D-713B5D376685
// Assembly location: C:\Users\Marcos Abreu\Documents\XPCTRA\idfptray.exe

using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;

namespace VERMELHO265MONARCA.Core.NetSerializer.TypeSerializers
{
  public class ALAMBRE980LIDASerializer : IStaticTypeSerializer, ITypeSerializer
  {
    private static Type[] s_primitives = new Type[15]
    {
      typeof (bool),
      typeof (byte),
      typeof (sbyte),
      typeof (char),
      typeof (ushort),
      typeof (short),
      typeof (uint),
      typeof (int),
      typeof (ulong),
      typeof (long),
      typeof (float),
      typeof (double),
      typeof (string),
      typeof (DateTime),
      typeof (byte[])
    };

    public bool Handles(Type type)
    {
      return ((IEnumerable<Type>) ALAMBRE980LIDASerializer.s_primitives).Contains<Type>(type);
    }

    public IEnumerable<Type> GetSubtypes(Type type)
    {
      yield break;
    }

    public void GetStaticMethods(Type type, out MethodInfo writer, out MethodInfo reader)
    {
      writer = ALAMBRE980LIDA.GetWritePrimitive(type);
      reader = ALAMBRE980LIDA.GetReaderPrimitive(type);
    }

    public static IEnumerable<Type> GetSupportedTypes()
    {
      return (IEnumerable<Type>) ALAMBRE980LIDASerializer.s_primitives;
    }
  }
}
